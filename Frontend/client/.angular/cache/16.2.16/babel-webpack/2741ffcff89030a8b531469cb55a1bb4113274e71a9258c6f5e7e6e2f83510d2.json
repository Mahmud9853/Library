{"ast":null,"code":"import { BookParams } from 'src/app/shared/models/bookParams';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../book.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = [\"search\"];\nfunction BookListComponent_select_3_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r3.typeName);\n  }\n}\nfunction BookListComponent_select_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"select\", 6)(1, \"option\", 7);\n    i0.ɵɵtext(2, \"Select Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, BookListComponent_select_3_option_3_Template, 2, 2, \"option\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.types);\n  }\n}\nfunction BookListComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const book_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r4.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r4.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r4.bookCategory);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r4.bookAuthor);\n  }\n}\nexport class BookListComponent {\n  constructor(bookService, fb) {\n    this.bookService = bookService;\n    this.fb = fb;\n    this.Math = Math;\n    this.books = [];\n    this.totalCount = 0;\n    this.bookParams = new BookParams();\n    this.categories = [];\n    this.types = [];\n    this.authors = [];\n  }\n  ngOnInit() {\n    this.getBooks();\n    this.loadType();\n    // this.getCategories();\n    // this.getTypes();\n    // this.getAuthors();\n  }\n\n  getBooks() {\n    this.bookService.getBooks().subscribe({\n      next: response => {\n        console.log('API Response:', response);\n        this.books = response;\n      },\n      error: error => console.log('Error fetching books:', error)\n    });\n  }\n  loadType() {\n    this.bookService.getTypes().subscribe({\n      next: response => {\n        console.log('API Response type:', response);\n        this.types = response;\n      },\n      error: error => console.log('Error fetching books:', error)\n    });\n  }\n  static {\n    this.ɵfac = function BookListComponent_Factory(t) {\n      return new (t || BookListComponent)(i0.ɵɵdirectiveInject(i1.BookService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: BookListComponent,\n      selectors: [[\"app-book-list\"]],\n      viewQuery: function BookListComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.searchTerm = _t.first);\n        }\n      },\n      decls: 17,\n      vars: 2,\n      consts: [[1, \"container\"], [1, \"row\", \"mb-3\"], [1, \"col-md-4\"], [\"formControlName\", \"typeId\", \"class\", \"form-select\", 4, \"ngIf\"], [1, \"table\", \"mt-3\"], [4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"typeId\", 1, \"form-select\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n      template: function BookListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n          i0.ɵɵtemplate(3, BookListComponent_select_3_Template, 4, 1, \"select\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"table\", 4)(5, \"thead\")(6, \"tr\")(7, \"th\");\n          i0.ɵɵtext(8, \"Title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"th\");\n          i0.ɵɵtext(10, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"th\");\n          i0.ɵɵtext(12, \"Category\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"th\");\n          i0.ɵɵtext(14, \"Author\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(15, \"tbody\");\n          i0.ɵɵtemplate(16, BookListComponent_tr_16_Template, 9, 4, \"tr\", 5);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.types.length > 0);\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"ngForOf\", ctx.books);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["BookParams","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","type_r3","id","ɵɵadvance","ɵɵtextInterpolate","typeName","ɵɵtemplate","BookListComponent_select_3_option_3_Template","ctx_r0","types","book_r4","title","description","bookCategory","bookAuthor","BookListComponent","constructor","bookService","fb","Math","books","totalCount","bookParams","categories","authors","ngOnInit","getBooks","loadType","subscribe","next","response","console","log","error","getTypes","ɵɵdirectiveInject","i1","BookService","i2","FormBuilder","selectors","viewQuery","BookListComponent_Query","rf","ctx","BookListComponent_select_3_Template","BookListComponent_tr_16_Template","length"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\book\\book-list\\book-list.component.ts","D:\\MMU\\Frontend\\client\\src\\app\\admin\\book\\book-list\\book-list.component.html"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {Book} from 'src/app/shared/models/book'; \nimport { BookService } from '../book.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BookParams } from 'src/app/shared/models/bookParams';\nimport { TypeService } from '../../type/type.service';\nimport { AuthorService } from '../../author/author.service';\nimport { Author } from 'src/app/shared/models/author';\nimport { Category } from 'src/app/shared/models/category';\nimport { Type } from 'src/app/shared/models/type';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.scss']\n})\nexport class BookListComponent implements OnInit{\n  Math = Math;\n  @ViewChild('search') searchTerm?: ElementRef;\n  books: any[] = [];\n  totalCount = 0;\n  bookParams: BookParams = new BookParams();\n  categories: Category[] = [];\n  types: Type[] = [];\n  authors: Author[] = [];\n\n  constructor(private bookService: BookService, private fb: FormBuilder) {}\n  \n ngOnInit(): void {\n    this.getBooks();\n    this.loadType();\n    // this.getCategories();\n    // this.getTypes();\n    // this.getAuthors();\n  }\n    getBooks(): void { \n      this.bookService.getBooks().subscribe({\n       next: (response: any) => {\n          console.log('API Response:', response);\n            this.books = response;\n        },\n          error: error => console.log('Error fetching books:', error)\n        })\n    }\n    loadType() {\n      this.bookService.getTypes().subscribe({\n       next: (response: any) => {\n          console.log('API Response type:', response);\n            this.types = response;\n        },\n          error: error => console.log('Error fetching books:', error)\n        })\n    }\n    \n  \n \n  \n  \n  \n \n  }\n","\n\n<div class=\"container\">\n    <div class=\"row mb-3\">\n        <div class=\"col-md-4\">\n            <select formControlName=\"typeId\" class=\"form-select\" *ngIf=\"types.length > 0\">\n                <option value=\"\">Select Type</option>\n                <option *ngFor=\"let type of types\" [value]=\"type.id\">{{type.typeName}}</option>\n              </select>\n        </div>\n    <!-- <form [formGroup]=\"searchForm\" (ngSubmit)=\"onSearch()\">\n      <input type=\"text\" formControlName=\"search\" placeholder=\"Search books...\" class=\"form-control mb-3\" /> -->\n  \n      <!-- \n        <div class=\"col-md-4\">\n          <select formControlName=\"categoryId\" class=\"form-select\">\n            <option value=\"\">Select Category</option>\n            <option *ngFor=\"let category of categories\" [value]=\"category.id\">{{ category.name }}</option>\n          </select>\n        </div>\n        <div class=\"col-md-4\">\n          <select formControlName=\"authorId\" class=\"form-select\">\n            <option value=\"\">Select Author</option>\n            <option *ngFor=\"let author of authors\" [value]=\"author.id\">{{ author.fullName }}</option>\n          </select>\n        </div>\n      </div>\n  \n      <button type=\"submit\" class=\"btn btn-primary\">Search</button>\n    </form> -->\n  \n    <table class=\"table mt-3\">\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>Description</th>\n            <th>Category</th>\n            <th>Author</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let book of books\">\n            <td>{{ book.title }}</td>\n            <td>{{ book.description }}</td>\n            <td>{{ book.bookCategory }}</td> <!-- bookCategory objesindeki name özelliği -->\n            <td>{{ book.bookAuthor }}</td> <!-- bookAuthor objesindeki fullName -->\n          </tr>\n        </tbody>\n      </table>\n      \n  \n    <!-- <nav *ngIf=\"totalRecords > searchForm.value.pageSize\">\n      <ul class=\"pagination\">\n        <li class=\"page-item\" *ngFor=\"let page of [].constructor(Math.ceil(totalRecords / searchForm.value.pageSize)); let i = index\">\n          <a class=\"page-link\" (click)=\"onPageChange(i + 1)\">{{ i + 1 }}</a>\n        </li>\n      </ul>\n    </nav> -->\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}