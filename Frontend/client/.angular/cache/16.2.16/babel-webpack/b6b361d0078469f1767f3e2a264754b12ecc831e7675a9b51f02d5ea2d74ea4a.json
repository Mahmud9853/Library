{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../account.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nexport class LoginComponent {\n  constructor(fb, accountService, router) {\n    this.fb = fb;\n    this.accountService = accountService;\n    this.router = router;\n    this.errorMessage = '';\n    this.loginForm = this.fb.group({\n      userName: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.invalid) {\n      console.error('Form is invalid');\n      return;\n    }\n    const loginData = {\n      userName: this.loginForm.get('userName')?.value,\n      password: this.loginForm.get('password')?.value\n    };\n    this.accountService.login(loginData).subscribe({\n      next: response => {\n        console.log('Login successful:', response);\n        if (response && response.token && response.role) {\n          this.accountService.saveToken(response.token);\n          this.accountService.setRole(response.role);\n          // Kullanıcının rolüne göre yönlendirme\n          if (response.role === 'Admin' || response.role === 'Client') {\n            this.router.navigate(['/home']); // Home sayfasına yönlendir\n          } else {\n            this.errorMessage = 'Unauthorized role';\n          }\n        } else {\n          this.errorMessage = 'Invalid username or password';\n        }\n      },\n      error: error => {\n        console.error('Login failed:', error);\n        this.errorMessage = 'An error occurred during login';\n      }\n    });\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 18,\n      vars: 3,\n      consts: [[1, \"background-image\"], [1, \"overlay\"], [1, \"content\"], [1, \"login-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"userName\"], [\"id\", \"userName\", \"formControlName\", \"userName\", \"type\", \"text\", 1, \"form-control\"], [\"for\", \"password\"], [\"id\", \"password\", \"formControlName\", \"password\", \"type\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"alert alert-danger mt-3\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\", \"mt-3\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"div\", 1);\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"h2\");\n          i0.ɵɵtext(5, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n          i0.ɵɵtext(9, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 8);\n          i0.ɵɵtext(13, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"button\", 10);\n          i0.ɵɵtext(16, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(17, LoginComponent_div_17_Template, 2, 1, \"div\", 11);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        }\n      },\n      dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\t\\\"use strict\\\";\\n\\n \\t\\n\\n \\t\\n\\n })()[_ngcontent-%COMP%]\\n;\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","errorMessage","LoginComponent","constructor","fb","accountService","router","loginForm","group","userName","required","password","onSubmit","invalid","console","error","loginData","get","value","login","subscribe","next","response","log","token","role","saveToken","setRole","navigate","ɵɵdirectiveInject","i1","FormBuilder","i2","AccountService","i3","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","LoginComponent_Template_form_ngSubmit_6_listener","ɵɵtemplate","LoginComponent_div_17_Template","ɵɵproperty"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\account\\login\\login.component.ts","D:\\MMU\\Frontend\\client\\src\\app\\account\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AccountService } from '../account.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n  errorMessage: string = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private accountService: AccountService,\n    private router: Router\n  ) {\n    this.loginForm = this.fb.group({\n      userName: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  onSubmit(): void {\n    if (this.loginForm.invalid) {\n      console.error('Form is invalid');\n      return;\n    }\n\n    const loginData = {\n      userName: this.loginForm.get('userName')?.value,\n      password: this.loginForm.get('password')?.value,\n    };\n\n    this.accountService.login(loginData).subscribe({\n      next: (response) => {\n        console.log('Login successful:', response);\n        if (response && response.token && response.role) {\n          this.accountService.saveToken(response.token);\n          this.accountService.setRole(response.role);\n          \n          // Kullanıcının rolüne göre yönlendirme\n          if (response.role === 'Admin' || response.role === 'Client') {\n            this.router.navigate(['/home']);  // Home sayfasına yönlendir\n          } else {\n            this.errorMessage = 'Unauthorized role';\n          }\n        } else {\n          this.errorMessage = 'Invalid username or password';\n        }\n      },\n      error: (error) => {\n        console.error('Login failed:', error);\n        this.errorMessage = 'An error occurred during login';\n      }\n    });\n  }\n}\n","<div class=\"background-image\">\n  <div class=\"overlay\"></div>\n  <div class=\"content\">\n    <div class=\"login-container\">\n      <h2>Login</h2>\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n          <label for=\"userName\">Username</label>\n          <input id=\"userName\" formControlName=\"userName\" type=\"text\" class=\"form-control\" />\n        </div>\n    \n        <div class=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input id=\"password\" formControlName=\"password\" type=\"password\" class=\"form-control\" />\n        </div>\n    \n        <button type=\"submit\" [disabled]=\"loginForm.invalid\" class=\"btn btn-primary\">Login</button>\n    \n        <div *ngIf=\"errorMessage\" class=\"alert alert-danger mt-3\">\n          {{ errorMessage }}\n        </div>\n      </form>\n    </div>\n    \n  </div>\n</div>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;ICiB3DC,EAAA,CAAAC,cAAA,cAA0D;IACxDD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IADJH,EAAA,CAAAI,SAAA,GACF;IADEJ,EAAA,CAAAK,kBAAA,MAAAC,MAAA,CAAAC,YAAA,MACF;;;ADVR,OAAM,MAAOC,cAAc;EAIzBC,YACUC,EAAe,EACfC,cAA8B,EAC9BC,MAAc;IAFd,KAAAF,EAAE,GAAFA,EAAE;IACF,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAAC,MAAM,GAANA,MAAM;IALhB,KAAAL,YAAY,GAAW,EAAE;IAOvB,IAAI,CAACM,SAAS,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC7BC,QAAQ,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACiB,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAElB,UAAU,CAACiB,QAAQ;KACnC,CAAC;EACJ;EAEAE,QAAQA,CAAA;IACN,IAAI,IAAI,CAACL,SAAS,CAACM,OAAO,EAAE;MAC1BC,OAAO,CAACC,KAAK,CAAC,iBAAiB,CAAC;MAChC;;IAGF,MAAMC,SAAS,GAAG;MAChBP,QAAQ,EAAE,IAAI,CAACF,SAAS,CAACU,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK;MAC/CP,QAAQ,EAAE,IAAI,CAACJ,SAAS,CAACU,GAAG,CAAC,UAAU,CAAC,EAAEC;KAC3C;IAED,IAAI,CAACb,cAAc,CAACc,KAAK,CAACH,SAAS,CAAC,CAACI,SAAS,CAAC;MAC7CC,IAAI,EAAGC,QAAQ,IAAI;QACjBR,OAAO,CAACS,GAAG,CAAC,mBAAmB,EAAED,QAAQ,CAAC;QAC1C,IAAIA,QAAQ,IAAIA,QAAQ,CAACE,KAAK,IAAIF,QAAQ,CAACG,IAAI,EAAE;UAC/C,IAAI,CAACpB,cAAc,CAACqB,SAAS,CAACJ,QAAQ,CAACE,KAAK,CAAC;UAC7C,IAAI,CAACnB,cAAc,CAACsB,OAAO,CAACL,QAAQ,CAACG,IAAI,CAAC;UAE1C;UACA,IAAIH,QAAQ,CAACG,IAAI,KAAK,OAAO,IAAIH,QAAQ,CAACG,IAAI,KAAK,QAAQ,EAAE;YAC3D,IAAI,CAACnB,MAAM,CAACsB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAE;WACnC,MAAM;YACL,IAAI,CAAC3B,YAAY,GAAG,mBAAmB;;SAE1C,MAAM;UACL,IAAI,CAACA,YAAY,GAAG,8BAA8B;;MAEtD,CAAC;MACDc,KAAK,EAAGA,KAAK,IAAI;QACfD,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;QACrC,IAAI,CAACd,YAAY,GAAG,gCAAgC;MACtD;KACD,CAAC;EACJ;;;uBAhDWC,cAAc,EAAAR,EAAA,CAAAmC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAArC,EAAA,CAAAmC,iBAAA,CAAAG,EAAA,CAAAC,cAAA,GAAAvC,EAAA,CAAAmC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;IAAA;EAAA;;;YAAdjC,cAAc;MAAAkC,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCV3BhD,EAAA,CAAAC,cAAA,aAA8B;UAC5BD,EAAA,CAAAkD,SAAA,aAA2B;UAC3BlD,EAAA,CAAAC,cAAA,aAAqB;UAEbD,EAAA,CAAAE,MAAA,YAAK;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACdH,EAAA,CAAAC,cAAA,cAAsD;UAAxBD,EAAA,CAAAmD,UAAA,sBAAAC,iDAAA;YAAA,OAAYH,GAAA,CAAA/B,QAAA,EAAU;UAAA,EAAC;UACnDlB,EAAA,CAAAC,cAAA,aAAwB;UACAD,EAAA,CAAAE,MAAA,eAAQ;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UACtCH,EAAA,CAAAkD,SAAA,gBAAmF;UACrFlD,EAAA,CAAAG,YAAA,EAAM;UAENH,EAAA,CAAAC,cAAA,cAAwB;UACAD,EAAA,CAAAE,MAAA,gBAAQ;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UACtCH,EAAA,CAAAkD,SAAA,gBAAuF;UACzFlD,EAAA,CAAAG,YAAA,EAAM;UAENH,EAAA,CAAAC,cAAA,kBAA6E;UAAAD,EAAA,CAAAE,MAAA,aAAK;UAAAF,EAAA,CAAAG,YAAA,EAAS;UAE3FH,EAAA,CAAAqD,UAAA,KAAAC,8BAAA,kBAEM;UACRtD,EAAA,CAAAG,YAAA,EAAO;;;UAhBDH,EAAA,CAAAI,SAAA,GAAuB;UAAvBJ,EAAA,CAAAuD,UAAA,cAAAN,GAAA,CAAApC,SAAA,CAAuB;UAWLb,EAAA,CAAAI,SAAA,GAA8B;UAA9BJ,EAAA,CAAAuD,UAAA,aAAAN,GAAA,CAAApC,SAAA,CAAAM,OAAA,CAA8B;UAE9CnB,EAAA,CAAAI,SAAA,GAAkB;UAAlBJ,EAAA,CAAAuD,UAAA,SAAAN,GAAA,CAAA1C,YAAA,CAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}