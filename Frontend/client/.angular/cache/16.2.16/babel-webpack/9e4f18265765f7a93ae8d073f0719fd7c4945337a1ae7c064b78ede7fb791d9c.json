{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../user.service\";\nimport * as i4 from \"@angular/common\";\nfunction ChangeRoleComponent_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", role_r2, \" \");\n  }\n}\nfunction ChangeRoleComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.errorMessage, \" \");\n  }\n}\nexport class ChangeRoleComponent {\n  constructor(fb, route, userService) {\n    this.fb = fb;\n    this.route = route;\n    this.userService = userService;\n    this.availableRoles = [];\n    this.userId = null;\n    this.errorMessage = null;\n    this.changeRoleForm = this.fb.group({\n      roles: [[], Validators.required] // FormControl for role selection\n    });\n  }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      this.userId = params.get('userId');\n      if (this.userId) {\n        this.loadRoles();\n      }\n    });\n  }\n  loadRoles() {\n    this.userService.getAvailableRoles().subscribe({\n      next: roles => {\n        this.availableRoles = roles;\n      },\n      error: error => {\n        console.error('Error loading roles:', error);\n        this.errorMessage = 'Unable to load roles. Please try again later.';\n      }\n    });\n  }\n  onSubmit() {\n    if (this.changeRoleForm.invalid || !this.userId) {\n      return;\n    }\n    const selectedRoles = this.changeRoleForm.value.roles;\n    this.userService.changeUserRole(this.userId, selectedRoles).subscribe(response => {\n      alert('User roles updated successfully!');\n    }, error => {\n      console.error('Error updating roles:', error);\n      this.errorMessage = 'Unable to update roles. Please try again later.';\n    });\n  }\n  static {\n    this.ɵfac = function ChangeRoleComponent_Factory(t) {\n      return new (t || ChangeRoleComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.UserService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChangeRoleComponent,\n      selectors: [[\"app-change-role\"]],\n      decls: 12,\n      vars: 4,\n      consts: [[1, \"container\", \"mt-5\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"roles\", 1, \"form-label\"], [\"id\", \"roles\", \"formControlName\", \"roles\", \"multiple\", \"\", \"size\", \"5\", 1, \"form-select\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [3, \"value\"], [1, \"alert\", \"alert-danger\"]],\n      template: function ChangeRoleComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Change User Role\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function ChangeRoleComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Select Roles:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"select\", 4);\n          i0.ɵɵtemplate(8, ChangeRoleComponent_option_8_Template, 2, 2, \"option\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(9, ChangeRoleComponent_div_9_Template, 2, 1, \"div\", 6);\n          i0.ɵɵelementStart(10, \"button\", 7);\n          i0.ɵɵtext(11, \" Update Roles \");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.changeRoleForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngForOf\", ctx.availableRoles);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.changeRoleForm.invalid);\n        }\n      },\n      dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.SelectMultipleControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","role_r2","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","errorMessage","ChangeRoleComponent","constructor","fb","route","userService","availableRoles","userId","changeRoleForm","group","roles","required","ngOnInit","paramMap","subscribe","params","get","loadRoles","getAvailableRoles","next","error","console","onSubmit","invalid","selectedRoles","value","changeUserRole","response","alert","ɵɵdirectiveInject","i1","FormBuilder","i2","ActivatedRoute","i3","UserService","selectors","decls","vars","consts","template","ChangeRoleComponent_Template","rf","ctx","ɵɵlistener","ChangeRoleComponent_Template_form_ngSubmit_3_listener","ɵɵtemplate","ChangeRoleComponent_option_8_Template","ChangeRoleComponent_div_9_Template"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\user\\change-role\\change-role.component.ts","D:\\MMU\\Frontend\\client\\src\\app\\admin\\user\\change-role\\change-role.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-change-role',\n  templateUrl: './change-role.component.html',\n  styleUrls: ['./change-role.component.scss']\n})\nexport class ChangeRoleComponent implements OnInit {\n  changeRoleForm: FormGroup;\n  availableRoles: string[] = [];\n  userId: string | null = null;\n  errorMessage: string | null = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private userService: UserService\n  ) {\n    this.changeRoleForm = this.fb.group({\n      roles: [[], Validators.required] // FormControl for role selection\n    });\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      this.userId = params.get('userId');\n      if (this.userId) {\n        this.loadRoles();\n      }\n    });\n  }\n\n  loadRoles(): void {\n    this.userService.getAvailableRoles().subscribe({\n     next: (roles: any) => {\n        this.availableRoles = roles;\n      },\n      error: (error) => {\n        console.error('Error loading roles:', error);\n        this.errorMessage = 'Unable to load roles. Please try again later.';\n      }\n  });\n  }\n\n  onSubmit(): void {\n    if (this.changeRoleForm.invalid || !this.userId) {\n      return;\n    }\n\n    const selectedRoles = this.changeRoleForm.value.roles;\n    this.userService.changeUserRole(this.userId, selectedRoles).subscribe(\n      response => {\n        alert('User roles updated successfully!');\n      },\n      error => {\n        console.error('Error updating roles:', error);\n        this.errorMessage = 'Unable to update roles. Please try again later.';\n      }\n    );\n  }\n}\n","<div class=\"container mt-5\">\n    <h2>Change User Role</h2>\n    <form [formGroup]=\"changeRoleForm\" (ngSubmit)=\"onSubmit()\">\n      <!-- Roles Selection -->\n      <div class=\"mb-3\">\n        <label for=\"roles\" class=\"form-label\">Select Roles:</label>\n        <select\n          class=\"form-select\"\n          id=\"roles\"\n          formControlName=\"roles\"\n          multiple\n          size=\"5\"\n        >\n          <option *ngFor=\"let role of availableRoles\" [value]=\"role\">\n            {{ role }}\n          </option>\n        </select>\n      </div>\n  \n      <!-- Error Message -->\n      <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">\n        {{ errorMessage }}\n      </div>\n  \n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"changeRoleForm.invalid\">\n        Update Roles\n      </button>\n    </form>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}