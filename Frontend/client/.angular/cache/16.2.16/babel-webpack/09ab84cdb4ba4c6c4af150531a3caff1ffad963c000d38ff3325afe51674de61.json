{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let SlideListComponent = class SlideListComponent {\n  constructor(fb, slideService, router, route, accountService) {\n    this.fb = fb;\n    this.slideService = slideService;\n    this.router = router;\n    this.route = route;\n    this.accountService = accountService;\n    this.slideToDelete = null;\n    this.slides = [];\n    this.role = null;\n    this.role = this.accountService.getRole();\n  }\n  ngOnInit() {\n    this.loadSlides();\n  }\n  loadSlides() {\n    this.slideService.getAllSlides().subscribe({\n      next: response => {\n        console.log('Slides loaded:', response);\n        this.slides = response;\n      },\n      error: error => {\n        console.error('Error loading slides:', error);\n      }\n    });\n  }\n  openDeleteModal(slide) {\n    if (this.role !== 'Admin') {\n      console.error('Erişim reddedildi: Sadece Admin silebilir.');\n      return;\n    }\n    this.slideToDelete = slide;\n    console.log('Selected slide for deletion:', slide); // Debug here\n    const deleteModal = document.getElementById('deleteModal');\n    if (deleteModal) {\n      const modal = new window.bootstrap.Modal(deleteModal);\n      modal.show();\n    }\n  }\n  confirmDelete() {\n    if (this.slideToDelete && this.slideToDelete.$id) {\n      console.log('Deleting slide with ID:', this.slideToDelete.$id); // Log the correct ID\n      if (this.role !== 'Admin') {\n        console.error('Erişim reddedildi: Sadece Admin silebilir.');\n        return;\n      }\n      this.slideService.deleteSlide(this.slideToDelete.$id).subscribe({\n        next: response => {\n          console.log('Delete response:', response);\n          this.slides = this.slides.filter(b => b.$id !== this.slideToDelete.$id); // Update the filter to match $id\n          const deleteModal = document.getElementById('deleteModal');\n          if (deleteModal) {\n            const modalInstance = window.bootstrap.Modal.getInstance(deleteModal);\n            modalInstance?.hide();\n          }\n          this.router.navigate(['/admin/slide/slide-list']);\n          this.slideToDelete = null;\n        },\n        error: err => {\n          console.error('Error deleting slide:', err);\n        }\n      });\n    } else {\n      console.error('Invalid slide ID. slideToDelete:', this.slideToDelete);\n    }\n  }\n};\nSlideListComponent = __decorate([Component({\n  selector: 'app-slide-list',\n  templateUrl: './slide-list.component.html',\n  styleUrls: ['./slide-list.component.scss']\n})], SlideListComponent);","map":{"version":3,"names":["Component","SlideListComponent","constructor","fb","slideService","router","route","accountService","slideToDelete","slides","role","getRole","ngOnInit","loadSlides","getAllSlides","subscribe","next","response","console","log","error","openDeleteModal","slide","deleteModal","document","getElementById","modal","window","bootstrap","Modal","show","confirmDelete","$id","deleteSlide","filter","b","modalInstance","getInstance","hide","navigate","err","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\slide\\slide-list\\slide-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { SlideService } from '../slide.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AccountService } from 'src/app/account/account.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-slide-list',\n  templateUrl: './slide-list.component.html',\n  styleUrls: ['./slide-list.component.scss']\n})\nexport class SlideListComponent implements OnInit {\n  slideToDelete: any = null;\n  slides: any[] = [];\n  slide: any;\n  role: string | null = null;\n  constructor(private fb: FormBuilder, private slideService: SlideService, private router: Router, private route: ActivatedRoute, private accountService: AccountService) {\n      this.role = this.accountService.getRole();\n    }\n  ngOnInit(): void {\n    this.loadSlides();\n  }\n  loadSlides(): void {\n    this.slideService.getAllSlides().subscribe({\n      next: (response) => {\n        console.log('Slides loaded:', response);\n        this.slides = response; \n      },\n      error: (error) => {\n        console.error('Error loading slides:', error);\n      }\n    });\n  }\n  \n  openDeleteModal(slide: any) {\n    if (this.role !== 'Admin') {\n      console.error('Erişim reddedildi: Sadece Admin silebilir.');\n      return;\n    }\n    this.slideToDelete = slide;\n    console.log('Selected slide for deletion:', slide); // Debug here\n    const deleteModal = document.getElementById('deleteModal');\n    if (deleteModal) {\n      const modal = new (window as any).bootstrap.Modal(deleteModal); \n      modal.show();\n    }\n  }\n  \n  confirmDelete() {\n    if (this.slideToDelete && this.slideToDelete.$id) {\n      console.log('Deleting slide with ID:', this.slideToDelete.$id); // Log the correct ID\n      if (this.role !== 'Admin') {\n        console.error('Erişim reddedildi: Sadece Admin silebilir.');\n        return;\n      }\n      this.slideService.deleteSlide(this.slideToDelete.$id).subscribe({\n        next: (response: string) => {\n          console.log('Delete response:', response); \n          this.slides = this.slides.filter((b) => b.$id !== this.slideToDelete.$id); // Update the filter to match $id\n          const deleteModal = document.getElementById('deleteModal');\n          if (deleteModal) {\n            const modalInstance = (window as any).bootstrap.Modal.getInstance(deleteModal);\n            modalInstance?.hide();\n          }\n          this.router.navigate(['/admin/slide/slide-list']);\n          this.slideToDelete = null;\n        },\n        error: (err) => {\n          console.error('Error deleting slide:', err);\n        },\n      });\n    } else {\n      console.error('Invalid slide ID. slideToDelete:', this.slideToDelete);\n    }\n  }\n  \n  \n\n  \n\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}