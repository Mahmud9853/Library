{"ast":null,"code":"export class LoginComponent {\n  constructor(fb, accountService, router, route) {\n    this.fb = fb;\n    this.accountService = accountService;\n    this.router = router;\n    this.route = route;\n  }\n  onSubmit() {\n    if (this.loginForm.invalid) {\n      console.error('Form is invalid');\n      return;\n    }\n    const loginData = {\n      userName: this.loginForm.get('userName')?.value,\n      password: this.loginForm.get('password')?.value\n    };\n    this.accountService.login(loginData).subscribe({\n      next: response => {\n        console.log('Login successful:', response);\n        // 'returnUrl' parametresini alıyoruz ve yönlendirme yapıyoruz\n        const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/home';\n        this.router.navigate([returnUrl]);\n      },\n      error: error => {\n        console.error('Login failed:', error);\n        this.errorMessage = 'Invalid username or password';\n      }\n    });\n  }\n}","map":{"version":3,"names":["LoginComponent","constructor","fb","accountService","router","route","onSubmit","loginForm","invalid","console","error","loginData","userName","get","value","password","login","subscribe","next","response","log","returnUrl","snapshot","queryParams","navigate","errorMessage"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\account\\login\\login.component.ts"],"sourcesContent":["import { ActivatedRoute, Router } from '@angular/router';\n\nexport class LoginComponent {\n  constructor(private fb: FormBuilder, private accountService: AccountService, private router: Router, private route: ActivatedRoute) {}\n\n  onSubmit(): void {\n    if (this.loginForm.invalid) {\n      console.error('Form is invalid');\n      return;\n    }\n\n    const loginData = {\n      userName: this.loginForm.get('userName')?.value,\n      password: this.loginForm.get('password')?.value,\n    };\n\n    this.accountService.login(loginData).subscribe({\n      next: (response) => {\n        console.log('Login successful:', response);\n        \n        // 'returnUrl' parametresini alıyoruz ve yönlendirme yapıyoruz\n        const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/home';\n        this.router.navigate([returnUrl]);\n      },\n      error: (error) => {\n        console.error('Login failed:', error);\n        this.errorMessage = 'Invalid username or password';\n      }\n    });\n  }\n}\n"],"mappings":"AAEA,OAAM,MAAOA,cAAc;EACzBC,YAAoBC,EAAe,EAAUC,cAA8B,EAAUC,MAAc,EAAUC,KAAqB;IAA9G,KAAAH,EAAE,GAAFA,EAAE;IAAuB,KAAAC,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;EAAmB;EAErIC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACC,SAAS,CAACC,OAAO,EAAE;MAC1BC,OAAO,CAACC,KAAK,CAAC,iBAAiB,CAAC;MAChC;;IAGF,MAAMC,SAAS,GAAG;MAChBC,QAAQ,EAAE,IAAI,CAACL,SAAS,CAACM,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK;MAC/CC,QAAQ,EAAE,IAAI,CAACR,SAAS,CAACM,GAAG,CAAC,UAAU,CAAC,EAAEC;KAC3C;IAED,IAAI,CAACX,cAAc,CAACa,KAAK,CAACL,SAAS,CAAC,CAACM,SAAS,CAAC;MAC7CC,IAAI,EAAGC,QAAQ,IAAI;QACjBV,OAAO,CAACW,GAAG,CAAC,mBAAmB,EAAED,QAAQ,CAAC;QAE1C;QACA,MAAME,SAAS,GAAG,IAAI,CAAChB,KAAK,CAACiB,QAAQ,CAACC,WAAW,CAAC,WAAW,CAAC,IAAI,OAAO;QACzE,IAAI,CAACnB,MAAM,CAACoB,QAAQ,CAAC,CAACH,SAAS,CAAC,CAAC;MACnC,CAAC;MACDX,KAAK,EAAGA,KAAK,IAAI;QACfD,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;QACrC,IAAI,CAACe,YAAY,GAAG,8BAA8B;MACpD;KACD,CAAC;EACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}