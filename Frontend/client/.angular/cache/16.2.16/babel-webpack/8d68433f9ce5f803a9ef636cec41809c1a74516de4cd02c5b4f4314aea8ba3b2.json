{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.apiUrl;\n    this.books = [];\n  }\n  // getBooks(bookParams?: BookParams): Observable<Book[]> {\n  //   return this.http.get<any>(this.baseUrl + 'Book').pipe(\n  //     map((response) => response.$values) // $values içindeki verileri alın\n  //   );\n  // }\n  addBook(book) {\n    return this.http.post(this.baseUrl + 'Book/create/', book);\n  }\n  updateBook(id, book) {\n    return this.http.put(`${this.baseUrl + 'Book'}/${id}`, book);\n  }\n  deleteBook(id) {\n    return this.http.delete(`${this.baseUrl}/Book/${id}`);\n  }\n  getBookById(id) {\n    return this.http.get(`${this.baseUrl + 'Book'}/${id}`);\n  }\n  // getBook(params: any): Observable<{ books: { $values: Book[] }; totalRecords: number }> {\n  //   return this.http.get<{ books: { $values: Book[] }; totalRecords: number }>(\n  //     `${this.baseUrl}/Book/query`, { params }\n  //   );\n  // }\n  getBooks(bookParams) {\n    let params = new HttpParams();\n    // Parametreleri ekleyin.\n    if (bookParams.search) {\n      params = params.append('search', bookParams.search);\n    }\n    if (bookParams.typeId) {\n      params = params.append('typeId', bookParams.typeId);\n    }\n    if (bookParams.categoryId) {\n      params = params.append('categoryId', bookParams.categoryId);\n    }\n    if (bookParams.authorId) {\n      params = params.append('authorId', bookParams.authorId);\n    }\n    params = params.append('pageNumber', bookParams.pageNumber || '1');\n    params = params.append('pageSize', bookParams.pageSize || '10');\n    return this.http.get(this.baseUrl + '', {\n      params\n    });\n  }\n  static {\n    this.ɵfac = function BookService_Factory(t) {\n      return new (t || BookService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: BookService,\n      factory: BookService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","HttpParams","BookService","constructor","http","baseUrl","apiUrl","books","addBook","book","post","updateBook","id","put","deleteBook","delete","getBookById","get","getBooks","bookParams","params","search","append","typeId","categoryId","authorId","pageNumber","pageSize","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\book\\book.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport {HttpClient, HttpParams} from '@angular/common/http'\nimport { map, Observable } from 'rxjs';\nimport {Book} from 'src/app/shared/models/book'; \nimport { BookParams } from 'src/app/shared/models/bookParams';\nimport { BookResponseDto } from 'src/app/shared/models/bookResponseDto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n  baseUrl = environment.apiUrl;\n  books: Book[] = [];\n  constructor(private http: HttpClient) { }\n\n  // getBooks(bookParams?: BookParams): Observable<Book[]> {\n  //   return this.http.get<any>(this.baseUrl + 'Book').pipe(\n  //     map((response) => response.$values) // $values içindeki verileri alın\n  //   );\n  // }\n  \n  addBook(book: Book): Observable<Book> {\n    return this.http.post<Book>(this.baseUrl + 'Book/create/', book);\n  }\n  updateBook(id:number,book:Book): Observable<Book>{\n    return this.http.put<Book>(`${this.baseUrl+ 'Book'}/${id}`, book);\n  }\n  deleteBook(id:number): Observable<any>{\n    return this.http.delete<void>(`${this.baseUrl}/Book/${id}`);\n  }\n  getBookById(id: number): Observable<Book>{\n    return this.http.get<Book>(`${this.baseUrl + 'Book'}/${id}`);\n  }\n  // getBook(params: any): Observable<{ books: { $values: Book[] }; totalRecords: number }> {\n  //   return this.http.get<{ books: { $values: Book[] }; totalRecords: number }>(\n  //     `${this.baseUrl}/Book/query`, { params }\n  //   );\n  // }\n  getBooks(bookParams: any): Observable<{ books: Book[]; totalCount: number }> {\n    let params = new HttpParams();\n\n    // Parametreleri ekleyin.\n    if (bookParams.search) {\n      params = params.append('search', bookParams.search);\n    }\n    if (bookParams.typeId) {\n      params = params.append('typeId', bookParams.typeId);\n    }\n    if (bookParams.categoryId) {\n      params = params.append('categoryId', bookParams.categoryId);\n    }\n    if (bookParams.authorId) {\n      params = params.append('authorId', bookParams.authorId);\n    }\n    params = params.append('pageNumber', bookParams.pageNumber || '1');\n    params = params.append('pageSize', bookParams.pageSize || '10');\n\n    return this.http.get<{ books: Book[]; totalCount: number }>(this.baseUrl+'', {\n      params,\n    });\n  }\n\n \n}\n"],"mappings":"AACA,SAASA,WAAW,QAAQ,8BAA8B;AAC1D,SAAoBC,UAAU,QAAO,sBAAsB;;;AAS3D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,OAAO,GAAGL,WAAW,CAACM,MAAM;IAC5B,KAAAC,KAAK,GAAW,EAAE;EACsB;EAExC;EACA;EACA;EACA;EACA;EAEAC,OAAOA,CAACC,IAAU;IAChB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAO,IAAI,CAACL,OAAO,GAAG,cAAc,EAAEI,IAAI,CAAC;EAClE;EACAE,UAAUA,CAACC,EAAS,EAACH,IAAS;IAC5B,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAO,GAAG,IAAI,CAACR,OAAO,GAAE,MAAM,IAAIO,EAAE,EAAE,EAAEH,IAAI,CAAC;EACnE;EACAK,UAAUA,CAACF,EAAS;IAClB,OAAO,IAAI,CAACR,IAAI,CAACW,MAAM,CAAO,GAAG,IAAI,CAACV,OAAO,SAASO,EAAE,EAAE,CAAC;EAC7D;EACAI,WAAWA,CAACJ,EAAU;IACpB,OAAO,IAAI,CAACR,IAAI,CAACa,GAAG,CAAO,GAAG,IAAI,CAACZ,OAAO,GAAG,MAAM,IAAIO,EAAE,EAAE,CAAC;EAC9D;EACA;EACA;EACA;EACA;EACA;EACAM,QAAQA,CAACC,UAAe;IACtB,IAAIC,MAAM,GAAG,IAAInB,UAAU,EAAE;IAE7B;IACA,IAAIkB,UAAU,CAACE,MAAM,EAAE;MACrBD,MAAM,GAAGA,MAAM,CAACE,MAAM,CAAC,QAAQ,EAAEH,UAAU,CAACE,MAAM,CAAC;;IAErD,IAAIF,UAAU,CAACI,MAAM,EAAE;MACrBH,MAAM,GAAGA,MAAM,CAACE,MAAM,CAAC,QAAQ,EAAEH,UAAU,CAACI,MAAM,CAAC;;IAErD,IAAIJ,UAAU,CAACK,UAAU,EAAE;MACzBJ,MAAM,GAAGA,MAAM,CAACE,MAAM,CAAC,YAAY,EAAEH,UAAU,CAACK,UAAU,CAAC;;IAE7D,IAAIL,UAAU,CAACM,QAAQ,EAAE;MACvBL,MAAM,GAAGA,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEH,UAAU,CAACM,QAAQ,CAAC;;IAEzDL,MAAM,GAAGA,MAAM,CAACE,MAAM,CAAC,YAAY,EAAEH,UAAU,CAACO,UAAU,IAAI,GAAG,CAAC;IAClEN,MAAM,GAAGA,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEH,UAAU,CAACQ,QAAQ,IAAI,IAAI,CAAC;IAE/D,OAAO,IAAI,CAACvB,IAAI,CAACa,GAAG,CAAwC,IAAI,CAACZ,OAAO,GAAC,EAAE,EAAE;MAC3Ee;KACD,CAAC;EACJ;;;uBAlDWlB,WAAW,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAX7B,WAAW;MAAA8B,OAAA,EAAX9B,WAAW,CAAA+B,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}