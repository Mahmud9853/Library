{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/account/account.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(accountService, router) {\n      this.accountService = accountService;\n      this.router = router;\n    }\n    canActivate(next, state) {\n      const isLoggedIn = this.accountService.isLoggedIn();\n      if (!isLoggedIn) {\n        // Kullanıcı giriş yapmamışsa, her durumda login sayfasına yönlendir\n        if (state.url !== '/account/login') {\n          this.router.navigate(['/account/login']);\n        }\n        return false;\n      } else {\n        // Kullanıcı giriş yapmışsa, hatalı rotaları kontrol et\n        if (state.url === '/account/login') {\n          // Eğer kullanıcı login olmuşsa, login sayfasına gitmesine izin verme, Home'a yönlendir\n          this.router.navigate(['/home']);\n          return false;\n        }\n        // Kullanıcı giriş yaptıysa ve hatalı rota varsa, Home'a yönlendir\n        const validRoutes = ['/home', '/admin/dashboard'];\n        if (!validRoutes.includes(state.url)) {\n          this.router.navigate(['/home']);\n          return false;\n        }\n      }\n      return true;\n    }\n    // Hatalı rota kontrolü\n    isInvalidRoute(url) {\n      const validRoutes = ['/home', '/account/login', '/account/register', '/admin/dashboard'];\n      return !validRoutes.includes(url); // Eğer URL geçerli rotalarda yoksa true döner\n    }\n\n    static {\n      this.ɵfac = function AuthGuard_Factory(t) {\n        return new (t || AuthGuard)(i0.ɵɵinject(i1.AccountService), i0.ɵɵinject(i2.Router));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthGuard,\n        factory: AuthGuard.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}