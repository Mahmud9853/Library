{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../type.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class TypeAddComponent {\n  constructor(typeService, router) {\n    this.typeService = typeService;\n    this.router = router;\n    this.types = [];\n    this.type = {\n      typeName: ''\n    };\n  }\n  ngOnInit() {\n    this.addType();\n  }\n  addType() {\n    const formData = new FormData();\n    formData.append('typeName', this.type.typeName);\n    this.bookService.addBook(formData).subscribe({\n      next: response => {\n        console.log('Book added successfully:', response);\n        this.router.navigate(['/admin/book/book-list']); // Başarılı ekleme sonrası yönlendirme\n      },\n\n      error: err => {\n        console.error('Error adding book:', err);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function TypeAddComponent_Factory(t) {\n      return new (t || TypeAddComponent)(i0.ɵɵdirectiveInject(i1.TypeService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TypeAddComponent,\n      selectors: [[\"app-type-add\"]],\n      decls: 13,\n      vars: 1,\n      consts: [[1, \"container\", \"mt-1\"], [1, \"card\", \"shadow\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"text-center\", \"mb-0\"], [1, \"card-body\"], [3, \"ngSubmit\"], [\"typeForm\", \"ngForm\"], [1, \"mb-3\"], [\"for\", \"typeName\", 1, \"form-label\"], [\"id\", \"typeName\", \"type\", \"text\", \"name\", \"typeName\", \"placeholder\", \"Kitab\\u0131n tipin daxil edin\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"title\", \"ngModel\"]],\n      template: function TypeAddComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\", 3);\n          i0.ɵɵtext(4, \"Yeni Tipi Yarat\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"form\", 5, 6);\n          i0.ɵɵlistener(\"ngSubmit\", function TypeAddComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.addType();\n          });\n          i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n          i0.ɵɵtext(10, \"Tipi\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 9, 10);\n          i0.ɵɵlistener(\"ngModelChange\", function TypeAddComponent_Template_input_ngModelChange_11_listener($event) {\n            return ctx.type.typeName = $event;\n          });\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngModel\", ctx.type.typeName);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["TypeAddComponent","constructor","typeService","router","types","type","typeName","ngOnInit","addType","formData","FormData","append","bookService","addBook","subscribe","next","response","console","log","navigate","error","err","i0","ɵɵdirectiveInject","i1","TypeService","i2","Router","selectors","decls","vars","consts","template","TypeAddComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TypeAddComponent_Template_form_ngSubmit_6_listener","TypeAddComponent_Template_input_ngModelChange_11_listener","$event","ɵɵadvance","ɵɵproperty"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\type\\type-add\\type-add.component.ts","D:\\MMU\\Frontend\\client\\src\\app\\admin\\type\\type-add\\type-add.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TypeService } from '../type.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-type-add',\n  templateUrl: './type-add.component.html',\n  styleUrls: ['./type-add.component.scss']\n})\nexport class TypeAddComponent implements OnInit {\n  types:  any[] = [];\n  type = {\n    typeName:''\n  };\n  constructor(private typeService: TypeService, private router: Router){}\n  ngOnInit(): void {\n    this.addType();\n  }\n  addType(): void{\n    const formData = new FormData();\n    formData.append('typeName', this.type.typeName);\n    this.bookService.addBook(formData).subscribe({\n      next: (response) => {\n        console.log('Book added successfully:', response);\n        this.router.navigate(['/admin/book/book-list']); // Başarılı ekleme sonrası yönlendirme\n      },\n      error: (err) => {\n        console.error('Error adding book:', err);\n      }\n    });\n  }\n\n \n\n}\n","<div class=\"container mt-1\">\n    <div class=\"card shadow\">\n      <div class=\"card-header bg-primary text-white\">\n        <h2 class=\"text-center mb-0\">Yeni Tipi Yarat</h2>\n      </div>\n      <div class=\"card-body\">\n        <form (ngSubmit)=\"addType()\" #typeForm=\"ngForm\">\n          <div class=\"mb-3\">\n            <label for=\"typeName\" class=\"form-label\">Tipi</label>\n            <input\n              id=\"typeName\"\n              type=\"text\"\n              class=\"form-control\"\n              [(ngModel)]=\"type.typeName\"\n              name=\"typeName\"\n              placeholder=\"Kitabın tipin daxil edin\"\n              required\n              #title=\"ngModel\"\n            />\n            <!-- <div *ngIf=\"typeName.touched && typeName.invalid\" class=\"text-danger\">\n              Tipi boş ola bilməz.\n            </div> -->\n          </div>\n        </form>\n    </div>\n\n</div>\n  "],"mappings":";;;;AASA,OAAM,MAAOA,gBAAgB;EAK3BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAJ5D,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,IAAI,GAAG;MACLC,QAAQ,EAAC;KACV;EACqE;EACtEC,QAAQA,CAAA;IACN,IAAI,CAACC,OAAO,EAAE;EAChB;EACAA,OAAOA,CAAA;IACL,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAACN,IAAI,CAACC,QAAQ,CAAC;IAC/C,IAAI,CAACM,WAAW,CAACC,OAAO,CAACJ,QAAQ,CAAC,CAACK,SAAS,CAAC;MAC3CC,IAAI,EAAGC,QAAQ,IAAI;QACjBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,QAAQ,CAAC;QACjD,IAAI,CAACb,MAAM,CAACgB,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;MACnD,CAAC;;MACDC,KAAK,EAAGC,GAAG,IAAI;QACbJ,OAAO,CAACG,KAAK,CAAC,oBAAoB,EAAEC,GAAG,CAAC;MAC1C;KACD,CAAC;EACJ;;;uBArBWrB,gBAAgB,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;YAAhB3B,gBAAgB;MAAA4B,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCT7BZ,EAAA,CAAAc,cAAA,aAA4B;UAGSd,EAAA,CAAAe,MAAA,sBAAe;UAAAf,EAAA,CAAAgB,YAAA,EAAK;UAEnDhB,EAAA,CAAAc,cAAA,aAAuB;UACfd,EAAA,CAAAiB,UAAA,sBAAAC,mDAAA;YAAA,OAAYL,GAAA,CAAA3B,OAAA,EAAS;UAAA,EAAC;UAC1Bc,EAAA,CAAAc,cAAA,aAAkB;UACyBd,EAAA,CAAAe,MAAA,YAAI;UAAAf,EAAA,CAAAgB,YAAA,EAAQ;UACrDhB,EAAA,CAAAc,cAAA,oBASE;UALAd,EAAA,CAAAiB,UAAA,2BAAAE,0DAAAC,MAAA;YAAA,OAAAP,GAAA,CAAA9B,IAAA,CAAAC,QAAA,GAAAoC,MAAA;UAAA,EAA2B;UAJ7BpB,EAAA,CAAAgB,YAAA,EASE;;;UALAhB,EAAA,CAAAqB,SAAA,IAA2B;UAA3BrB,EAAA,CAAAsB,UAAA,YAAAT,GAAA,CAAA9B,IAAA,CAAAC,QAAA,CAA2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}