{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.apiUrl;\n    this.books = [];\n  }\n  getBooks(bookParams) {\n    const cacheKey = Object.values(bookParams).join('-');\n    if (this.bookCache.size > 0 && this.bookCache.has(cacheKey)) {\n      return of(this.bookCache.get(cacheKey));\n    }\n    let params = new HttpParams();\n    if (bookParams.search) params = params.append('search', bookParams.search);\n    if (bookParams.categoryId > 0) params = params.append('categoryId', bookParams.categoryId);\n    if (bookParams.typeId > 0) params = params.append('typeId', bookParams.typeId);\n    if (bookParams.authorId > 0) params = params.append('authorId', bookParams.authorId);\n    params = params.append('pageIndex', bookParams.pageNumber.toString());\n    params = params.append('pageSize', bookParams.pageSize.toString());\n    return this.http.get(`${this.baseUrl}Book/query`, {\n      params\n    }).pipe(map(response => {\n      this.bookCache.set(cacheKey, response);\n      return response;\n    }));\n  }\n  getCategories() {\n    return this.http.get(`${this.baseUrl}Category`);\n  }\n  getTypes() {\n    return this.http.get(`${this.baseUrl}Type`);\n  }\n  getAuthors() {\n    return this.http.get(`${this.baseUrl}Author`);\n  }\n  addBook(book) {\n    return this.http.post(this.baseUrl + 'Book/create/', book);\n  }\n  updateBook(id, book) {\n    return this.http.put(`${this.baseUrl + 'Book'}/${id}`, book);\n  }\n  deleteBook(id) {\n    return this.http.delete(`${this.baseUrl}/Book/${id}`);\n  }\n  getBookById(id) {\n    return this.http.get(`${this.baseUrl + 'Book'}/${id}`);\n  }\n  static {\n    this.ɵfac = function BookService_Factory(t) {\n      return new (t || BookService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: BookService,\n      factory: BookService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","HttpParams","map","BookService","constructor","http","baseUrl","apiUrl","books","getBooks","bookParams","cacheKey","Object","values","join","bookCache","size","has","of","get","params","search","append","categoryId","typeId","authorId","pageNumber","toString","pageSize","pipe","response","set","getCategories","getTypes","getAuthors","addBook","book","post","updateBook","id","put","deleteBook","delete","getBookById","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\book\\book.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport {HttpClient, HttpParams} from '@angular/common/http'\nimport { map, Observable } from 'rxjs';\nimport {Book, PaginatedResponse} from 'src/app/shared/models/book'; \nimport { BookParams } from 'src/app/shared/models/bookParams';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n  baseUrl = environment.apiUrl;\n  books:  Book[] = [];\n  \n  constructor(private http: HttpClient) { }\n\n\n  getBooks(bookParams: BookParams): Observable<BookResponseDto> {\n    const cacheKey = Object.values(bookParams).join('-');\n    if (this.bookCache.size > 0 && this.bookCache.has(cacheKey)) {\n      return of(this.bookCache.get(cacheKey)!);\n    }\n\n    let params = new HttpParams();\n    if (bookParams.search) params = params.append('search', bookParams.search);\n    if (bookParams.categoryId > 0) params = params.append('categoryId', bookParams.categoryId);\n    if (bookParams.typeId > 0) params = params.append('typeId', bookParams.typeId);\n    if (bookParams.authorId > 0) params = params.append('authorId', bookParams.authorId);\n    params = params.append('pageIndex', bookParams.pageNumber.toString());\n    params = params.append('pageSize', bookParams.pageSize.toString());\n\n    return this.http.get<BookResponseDto>(`${this.baseUrl}Book/query`, { params }).pipe(\n      map(response => {\n        this.bookCache.set(cacheKey, response);\n        return response;\n      })\n    );\n  }\n  getCategories(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.baseUrl}Category`);\n  }\n\n  getTypes(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.baseUrl}Type`);\n  }\n\n  getAuthors(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.baseUrl}Author`);\n  }\n\n  addBook(book: Book): Observable<Book> {\n    return this.http.post<Book>(this.baseUrl + 'Book/create/', book);\n  }\n  updateBook(id:number,book:Book): Observable<Book>{\n    return this.http.put<Book>(`${this.baseUrl+ 'Book'}/${id}`, book);\n  }\n  deleteBook(id:number): Observable<any>{\n    return this.http.delete<void>(`${this.baseUrl}/Book/${id}`);\n  }\n  getBookById(id: number): Observable<Book>{\n    return this.http.get<Book>(`${this.baseUrl + 'Book'}/${id}`);\n  }\n \n\n  // getBooks(params: BookParams): Observable<PaginatedResponse<Book>> {\n  //   const queryParams: any = {\n  //     search: params.search,\n  //     pageNumber: params.pageNumber,\n  //     pageSize: params.pageSize,\n  //     typeId: params.typeId,\n  //     categoryId: params.categoryId,\n  //     authorId: params.authorId\n  //   };\n  //   return this.http.get<PaginatedResponse<Book>>(`${this.baseUrl}Book/query`, { params: queryParams });\n  // }\n\n  // getBooks(filters: any): Observable<any> {\n  //   let params = new HttpParams();\n\n  //   Object.keys(filters).forEach((key) => {\n  //     if (filters[key] !== null && filters[key] !== undefined && filters[key] !== '') {\n  //       params = params.append(key, filters[key]);\n  //     }\n  //   });\n\n  //   return this.http.get<any>(`${this.baseUrl}/query`, { params });\n  // }\n \n\n \n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}