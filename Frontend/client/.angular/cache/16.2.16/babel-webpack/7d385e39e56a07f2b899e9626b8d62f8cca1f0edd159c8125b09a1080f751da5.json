{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let BookListComponent = class BookListComponent {\n  constructor(bookService, typeService,\n  // private categoryService: CategoryService,\n  authorService) {\n    this.bookService = bookService;\n    this.typeService = typeService;\n    this.authorService = authorService;\n    this.books = [];\n    this.types = [];\n    this.categories = [];\n    this.authors = [];\n    this.totalRecords = 0;\n    this.bookParams = {\n      pageNumber: 1,\n      pageSize: 10,\n      search: '',\n      typeId: '',\n      categoryId: '',\n      authorId: ''\n    };\n  }\n  ngOnInit() {\n    this.getBooks();\n    // this.getTypes();\n    // this.getCategories();\n    // this.getAuthors();\n  }\n\n  getBooks() {\n    this.bookService.getBooks(this.bookParams).subscribe({\n      next: response => {\n        console.log('API Response:', response); // Konsola yazdırın\n        this.books = response;\n        this.totalRecords = response.totalCount;\n      },\n      error: error => {\n        console.error('Error fetching books:', error); // Hataları yazdırın\n      }\n    });\n  }\n\n  onSearch(search) {\n    this.bookParams.search = search;\n    this.bookParams.pageNumber = 1;\n    this.getBooks();\n  }\n  applyFilters() {\n    this.bookParams.pageNumber = 1;\n    this.getBooks();\n  }\n  changePage(pageNumber) {\n    if (pageNumber > 0) {\n      this.bookParams.pageNumber = pageNumber;\n      this.getBooks();\n    }\n  }\n};\nBookListComponent = __decorate([Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.scss']\n})], BookListComponent);","map":{"version":3,"names":["Component","BookListComponent","constructor","bookService","typeService","authorService","books","types","categories","authors","totalRecords","bookParams","pageNumber","pageSize","search","typeId","categoryId","authorId","ngOnInit","getBooks","subscribe","next","response","console","log","totalCount","error","onSearch","applyFilters","changePage","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\book\\book-list\\book-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {Book} from 'src/app/shared/models/book'; \nimport { BookService } from '../book.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BookParams } from 'src/app/shared/models/bookParams';\nimport { TypeService } from '../../type/type.service';\nimport { AuthorService } from '../../author/author.service';\n@Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.scss']\n})\nexport class BookListComponent implements OnInit{\n\n    books: any[] = [];\n    types: string[] = [];\n    categories: string[] = [];\n    authors: string[] = [];\n    totalRecords: number = 0;\n  \n    bookParams: BookParams = {\n      pageNumber: 1,\n      pageSize: 10,\n      search: '',\n      typeId: '',\n      categoryId: '',\n      authorId: ''\n    };\n    \n    constructor(\n      private bookService: BookService,\n      private typeService: TypeService,\n      // private categoryService: CategoryService,\n      private authorService: AuthorService\n    ) {}\n  \n    ngOnInit(): void {\n      this.getBooks();\n      // this.getTypes();\n      // this.getCategories();\n      // this.getAuthors();\n    }\n\n    getBooks(): void {\n      this.bookService.getBooks(this.bookParams).subscribe({\n        next: (response) => {\n          console.log('API Response:', response); // Konsola yazdırın\n          this.books = response;\n          this.totalRecords = response.totalCount;\n        },\n        error: (error) => {\n          console.error('Error fetching books:', error); // Hataları yazdırın\n        }\n      });\n    }\n    onSearch(search: string): void {\n      this.bookParams.search = search;\n      this.bookParams.pageNumber = 1;\n      this.getBooks();\n    }\n    \n    applyFilters(): void {\n      this.bookParams.pageNumber = 1;\n      this.getBooks();\n    }\n    changePage(pageNumber: number): void {\n      if (pageNumber > 0) {\n        this.bookParams.pageNumber = pageNumber;\n        this.getBooks();\n      }\n    }\n    \n    // getBooks(): void {\n    //   this.bookService.getBooks(this.bookParams).subscribe(\n    //     (response) => {\n    //       console.log('API Response:', response);\n          \n    //       // Gelen verideki $values dizisini alıyoruz\n    //       if (response && response.$values) {\n    //         this.books = response.$values;\n    //       } else {\n    //         this.books = [];\n    //       }\n    //     },\n    //     (error) => {\n    //       console.error('Error fetching books:', error);\n    //     }\n    //   );\n    // }\n    \n  \n    // getTypes(): void {\n    //   this.typeService.getTypes().subscribe((types) => (this.types = types));\n    // }\n  \n    // getCategories(): void {\n    //   this.categoryService.getCategories().subscribe((categories) => (this.categories = categories));\n    // }\n  \n    // getAuthors(): void {\n    //   this.authorService.getAuthors().subscribe((authors) => (this.authors = authors));\n    // }\n  \n    // onSearch(search: string): void {\n    //   this.bookParams.search = search;\n    //   this.bookParams.pageNumber = 1;\n    //   this.getBooks();\n    // }\n  \n    // applyFilters(): void {\n    //   this.bookParams.pageNumber = 1;\n    //   this.getBooks();\n    // }\n  \n    // changePage(pageNumber: number): void {\n    //   if (pageNumber > 0) {\n    //     this.bookParams.pageNumber = pageNumber;\n    //     this.getBooks();\n    //   }\n    // }\n  }\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAY1C,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAiB1BC,YACUC,WAAwB,EACxBC,WAAwB;EAChC;EACQC,aAA4B;IAH5B,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,WAAW,GAAXA,WAAW;IAEX,KAAAC,aAAa,GAAbA,aAAa;IAnBvB,KAAAC,KAAK,GAAU,EAAE;IACjB,KAAAC,KAAK,GAAa,EAAE;IACpB,KAAAC,UAAU,GAAa,EAAE;IACzB,KAAAC,OAAO,GAAa,EAAE;IACtB,KAAAC,YAAY,GAAW,CAAC;IAExB,KAAAC,UAAU,GAAe;MACvBC,UAAU,EAAE,CAAC;MACbC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE,EAAE;MACVC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE;KACX;EAOE;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,QAAQ,EAAE;IACf;IACA;IACA;EACF;;EAEAA,QAAQA,CAAA;IACN,IAAI,CAAChB,WAAW,CAACgB,QAAQ,CAAC,IAAI,CAACR,UAAU,CAAC,CAACS,SAAS,CAAC;MACnDC,IAAI,EAAGC,QAAQ,IAAI;QACjBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,QAAQ,CAAC,CAAC,CAAC;QACxC,IAAI,CAAChB,KAAK,GAAGgB,QAAQ;QACrB,IAAI,CAACZ,YAAY,GAAGY,QAAQ,CAACG,UAAU;MACzC,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACfH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC,CAAC;MACjD;KACD,CAAC;EACJ;;EACAC,QAAQA,CAACb,MAAc;IACrB,IAAI,CAACH,UAAU,CAACG,MAAM,GAAGA,MAAM;IAC/B,IAAI,CAACH,UAAU,CAACC,UAAU,GAAG,CAAC;IAC9B,IAAI,CAACO,QAAQ,EAAE;EACjB;EAEAS,YAAYA,CAAA;IACV,IAAI,CAACjB,UAAU,CAACC,UAAU,GAAG,CAAC;IAC9B,IAAI,CAACO,QAAQ,EAAE;EACjB;EACAU,UAAUA,CAACjB,UAAkB;IAC3B,IAAIA,UAAU,GAAG,CAAC,EAAE;MAClB,IAAI,CAACD,UAAU,CAACC,UAAU,GAAGA,UAAU;MACvC,IAAI,CAACO,QAAQ,EAAE;;EAEnB;CAkDD;AA5GUlB,iBAAiB,GAAA6B,UAAA,EAL7B9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWhC,iBAAiB,CA4G3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}