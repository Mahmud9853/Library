{"ast":null,"code":"import { map } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let TypeService = /*#__PURE__*/(() => {\n  class TypeService {\n    constructor(http) {\n      this.http = http;\n      this.types = [];\n      this.baseUrl = environment.apiUrl;\n    }\n    getTypes() {\n      return this.http.get(this.baseUrl + 'Type').pipe(map(response => response.$values) // $values içindeki verileri alın\n      );\n    }\n\n    addType(type) {\n      return this.http.post(this.baseUrl + 'Type/create', type);\n    }\n    deleteType(id) {\n      return this.http.delete(`${this.baseUrl}Type/${id}`, {\n        responseType: 'text'\n      });\n    }\n    updateType(id, type) {\n      return this.http.put(`${this.baseUrl + 'Type/update'}/${id}`, type, {\n        responseType: 'text'\n      });\n    }\n    getTypeById(id) {\n      return this.http.get(`${this.baseUrl + 'Type'}/${id}`);\n    }\n    static {\n      this.ɵfac = function TypeService_Factory(t) {\n        return new (t || TypeService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: TypeService,\n        factory: TypeService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return TypeService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}