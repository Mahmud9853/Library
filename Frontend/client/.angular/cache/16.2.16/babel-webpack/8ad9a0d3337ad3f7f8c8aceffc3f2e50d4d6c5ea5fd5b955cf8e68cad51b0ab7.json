{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../book/book.service\";\nimport * as i2 from \"src/app/account/account.service\";\nimport * as i3 from \"../../type/type.service\";\nimport * as i4 from \"../../category/category.service\";\nimport * as i5 from \"../../author/author.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/router\";\nfunction DashboardComponent_li_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 3)(1, \"a\", 25);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", item_r1.route);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r1.label, \" \");\n  }\n}\nconst _c0 = function () {\n  return [\"/admin/support\"];\n};\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(bookService, accountService, typeService, categoryService, authorService) {\n      this.bookService = bookService;\n      this.accountService = accountService;\n      this.typeService = typeService;\n      this.categoryService = categoryService;\n      this.authorService = authorService;\n      // role: string = 'Admin';  \n      this.role = null;\n      this.filteredMenuItems = [];\n      this.menuItems = [{\n        label: 'Kitablar',\n        route: '/admin/book/book-list',\n        role: ['Admin', 'Client']\n      }, {\n        label: 'Tipləri',\n        route: '/admin/type/type-list',\n        role: ['Admin', 'Client']\n      }, {\n        label: 'Müəllifləri',\n        route: '/admin/author/author-list',\n        role: ['Admin', 'Client']\n      }, {\n        label: 'Kateqoriyası',\n        route: '/admin/category/category-list',\n        role: ['Admin', 'Client']\n      }, {\n        label: 'Header parametrlər',\n        route: '/admin/home/home-list',\n        role: ['Admin']\n      }, {\n        label: 'Slayd parametrlər',\n        route: '/admin/slide/slide-list',\n        role: ['Admin']\n      }, {\n        label: 'İstifadəçilər',\n        route: '/admin/user/user-list',\n        role: ['Admin']\n      }];\n      this.books = [];\n      this.types = [];\n      this.categories = [];\n      this.authors = [];\n      this.totalRecordsBook = 0;\n      this.totalRecordsType = 0;\n      this.totalRecordsAuthors = 0;\n      this.totalRecordsCategories = 0;\n      this.username = '';\n      this.role = this.accountService.getRole();\n    }\n    ngOnInit() {\n      this.getBooks();\n      this.getTypes();\n      this.getAuthors();\n      this.getCategories();\n      const storedUsername = localStorage.getItem('username');\n      const userRole = localStorage.getItem('role');\n      this.filteredMenuItems = this.menuItems.filter(item => item.role.includes(this.role || 'Guest'));\n      if (storedUsername) {\n        this.username = storedUsername; // Eğer localStorage'da varsa, kullanıcı adı atanıyor\n      } else {\n        this.username = 'Guest'; // Eğer yoksa, 'Guest' atanıyor\n      }\n    }\n\n    getBooks() {\n      this.bookService.getBooks().subscribe({\n        next: response => {\n          console.log('API Response:', response);\n          this.books = response;\n          this.totalRecordsBook = this.books.length;\n        },\n        error: error => console.log('Error fetching books:', error)\n      });\n    }\n    getTypes() {\n      this.typeService.getTypes().subscribe({\n        next: response => {\n          console.log('API Response:', response);\n          this.types = response;\n          this.totalRecordsType = this.types.length;\n        },\n        error: error => console.log('Error fetching types:', error)\n      });\n    }\n    getAuthors() {\n      this.authorService.getAuthors().subscribe({\n        next: response => {\n          console.log('API Response:', response);\n          this.authors = response;\n          this.totalRecordsAuthors = this.authors.length;\n        },\n        error: error => console.log('Error fetching types:', error)\n      });\n    }\n    getCategories() {\n      this.categoryService.getCategories().subscribe({\n        next: response => {\n          console.log('API Response:', response);\n          this.categories = response;\n          this.totalRecordsCategories = this.categories.length;\n        },\n        error: error => console.log('Error fetching categories:', error)\n      });\n    }\n    logout() {\n      this.accountService.logout();\n    }\n    static {\n      this.ɵfac = function DashboardComponent_Factory(t) {\n        return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.BookService), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i3.TypeService), i0.ɵɵdirectiveInject(i4.CategoryService), i0.ɵɵdirectiveInject(i5.AuthorService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: DashboardComponent,\n        selectors: [[\"app-dashboard\"]],\n        decls: 47,\n        vars: 8,\n        consts: [[1, \"dashboard-container\"], [1, \"sidebar\"], [\"id\", \"oc\", \"onclick\", \"openclose\", 2, \"font-size\", \"20px\"], [1, \"nav-item\"], [\"routerLink\", \"/home\", \"routerLinkActive\", \"active\", 1, \"nav-link\"], [\"class\", \"nav-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"text-white\", 2, \"margin-top\", \"300px\"], [1, \"nav\", \"nav-pills\", \"flex-column\", \"mt-auto\"], [1, \"nav-link\", 3, \"routerLink\"], [1, \"nav-link\", 2, \"cursor\", \"pointer\", 3, \"click\"], [1, \"main-content\"], [1, \"container-fluid\"], [1, \"text-center\"], [1, \"row\"], [1, \"col-md-6\", \"my-4\"], [1, \"text-center\", \"my-2\"], [1, \"circle\"], [2, \"margin\", \"105px 60px\", \"color\", \"#000\", \"font-size\", \"20px\", \"font-weight\", \"bold\"], [1, \"circle1\"], [2, \"margin\", \"105px 65px\", \"color\", \"rgb(125, 153, 84)\", \"; font-size\", \"20px\", \"font-weight\", \"bold\"], [1, \"col-md-6\"], [1, \"circle2\"], [2, \"margin\", \"105px 70px\", \"color\", \"rgb(7, 107, 141)\", \"; font-size\", \"20px\", \"font-weight\", \"bold\"], [1, \"circle3\"], [2, \"margin\", \"105px 70px\", \"color\", \"rgb(183, 166, 37)\", \"font-size\", \"20px\", \"font-weight\", \"bold\"], [\"routerLinkActive\", \"active\", 1, \"nav-link\", 3, \"routerLink\"]],\n        template: function DashboardComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"aside\", 1)(2, \"span\", 2)(3, \"strong\");\n            i0.ɵɵtext(4);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(5, \"ul\")(6, \"li\", 3)(7, \"a\", 4);\n            i0.ɵɵtext(8, \"Ana S\\u0259hif\\u0259\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(9, DashboardComponent_li_9_Template, 3, 2, \"li\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(10, \"hr\", 6);\n            i0.ɵɵelementStart(11, \"ul\", 7)(12, \"li\", 3)(13, \"a\", 8);\n            i0.ɵɵtext(14, \"Texniki D\\u0259st\\u0259k\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(15, \"li\", 3)(16, \"a\", 9);\n            i0.ɵɵlistener(\"click\", function DashboardComponent_Template_a_click_16_listener() {\n              return ctx.logout();\n            });\n            i0.ɵɵtext(17, \"\\u00C7\\u0131x\\u0131\\u015F\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(18, \"main\", 10)(19, \"div\", 11)(20, \"h1\", 12);\n            i0.ɵɵtext(21, \"E-Kitabxana\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(22, \"div\", 13)(23, \"div\", 14)(24, \"h3\", 15);\n            i0.ɵɵtext(25, \"Kitab\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(26, \"div\", 16)(27, \"div\", 17);\n            i0.ɵɵtext(28);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(29, \"div\", 14)(30, \"h3\", 15);\n            i0.ɵɵtext(31, \"Tipi\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(32, \"div\", 18)(33, \"div\", 19);\n            i0.ɵɵtext(34);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(35, \"div\", 20)(36, \"h3\", 15);\n            i0.ɵɵtext(37, \"M\\u00FC\\u0259llifi\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(38, \"div\", 21)(39, \"div\", 22);\n            i0.ɵɵtext(40);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(41, \"div\", 20)(42, \"h3\", 15);\n            i0.ɵɵtext(43, \"Kateqoriyas\\u0131\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(44, \"div\", 23)(45, \"div\", 24);\n            i0.ɵɵtext(46);\n            i0.ɵɵelementEnd()()()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate(ctx.username);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngForOf\", ctx.filteredMenuItems);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(7, _c0));\n            i0.ɵɵadvance(15);\n            i0.ɵɵtextInterpolate1(\"Toplam: \", ctx.totalRecordsBook, \"\");\n            i0.ɵɵadvance(6);\n            i0.ɵɵtextInterpolate1(\"Toplam: \", ctx.totalRecordsType, \"\");\n            i0.ɵɵadvance(6);\n            i0.ɵɵtextInterpolate1(\"Toplam: \", ctx.totalRecordsAuthors, \"\");\n            i0.ɵɵadvance(6);\n            i0.ɵɵtextInterpolate1(\"Toplam: \", ctx.totalRecordsCategories, \"\");\n          }\n        },\n        dependencies: [i6.NgForOf, i7.RouterLink, i7.RouterLinkActive],\n        styles: [\".dashboard-container[_ngcontent-%COMP%]{display:flex}.sidebar[_ngcontent-%COMP%]{width:250px;height:900px;background:linear-gradient(to right,#5a6e4e,#2d3b2f);color:#fff;padding:15px}.nav-link[_ngcontent-%COMP%]{cursor:pointer;transition:color .3s}.nav-link[_ngcontent-%COMP%]:hover{color:#007bff}.sidebar[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style:none;padding:0}.sidebar[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#fff;text-decoration:none;display:block;padding:10px}.sideabr[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   a.active[_ngcontent-%COMP%]{background-color:#555}.main-content[_ngcontent-%COMP%]{flex:1;padding:20px;background-color:#f4f4f4}.circle[_ngcontent-%COMP%]{width:305px;height:305px;border:30px solid;border-radius:100%;margin:0 auto}.circle1[_ngcontent-%COMP%]{width:305px;height:305px;border:30px solid greenyellow;border-radius:100%;margin:0 auto}.circle2[_ngcontent-%COMP%]{width:305px;height:305px;border:30px solid rgb(7,107,141);border-radius:100%;margin:0 auto}.circle3[_ngcontent-%COMP%]{width:305px;height:305px;border:30px solid rgb(183,166,37);border-radius:100%;margin:0 auto}\"]\n      });\n    }\n  }\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}