{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../user.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction ChangeRoleComponent_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(role_r1);\n  }\n}\nexport class ChangeRoleComponent {\n  constructor(userService, fb, route, router) {\n    this.userService = userService;\n    this.fb = fb;\n    this.route = route;\n    this.router = router;\n    this.roles = [];\n    this.userId = null;\n    this.changeRoleForm = this.fb.group({\n      roles: ['']\n    });\n  }\n  ngOnInit() {\n    this.userId = this.route.snapshot.paramMap.get('id');\n    this.loadRoles();\n  }\n  loadRoles() {\n    this.userService.getRoles().subscribe({\n      next: roles => this.roles = roles,\n      error: err => console.error('Error loading roles', err)\n    });\n  }\n  onSubmit() {\n    if (this.userId) {\n      const selectedRole = this.changeRoleForm.get('roles')?.value;\n      this.userService.changeUserRole(this.userId, [selectedRole]).subscribe({\n        next: () => {\n          alert('Role updated successfully');\n          this.router.navigate(['/admin']); // Admin paneline dön\n        },\n\n        error: err => console.error('Error updating role', err)\n      });\n    }\n  }\n  static {\n    this.ɵfac = function ChangeRoleComponent_Factory(t) {\n      return new (t || ChangeRoleComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChangeRoleComponent,\n      selectors: [[\"app-change-role\"]],\n      decls: 10,\n      vars: 2,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"roles\"], [\"id\", \"roles\", \"formControlName\", \"roles\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\"], [3, \"value\"]],\n      template: function ChangeRoleComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n          i0.ɵɵtext(2, \"Change User Role\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function ChangeRoleComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"label\", 1);\n          i0.ɵɵtext(5, \"Select Role:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"select\", 2);\n          i0.ɵɵtemplate(7, ChangeRoleComponent_option_7_Template, 2, 2, \"option\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"button\", 4);\n          i0.ɵɵtext(9, \"Change Role\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.changeRoleForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n        }\n      },\n      dependencies: [i4.NgForOf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n      styles: [\"\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\t\\\"use strict\\\";\\n\\n \\t\\n\\n \\t\\n\\n })()[_ngcontent-%COMP%]\\n;\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","role_r1","ɵɵadvance","ɵɵtextInterpolate","ChangeRoleComponent","constructor","userService","fb","route","router","roles","userId","changeRoleForm","group","ngOnInit","snapshot","paramMap","get","loadRoles","getRoles","subscribe","next","error","err","console","onSubmit","selectedRole","value","changeUserRole","alert","navigate","ɵɵdirectiveInject","i1","UserService","i2","FormBuilder","i3","ActivatedRoute","Router","selectors","decls","vars","consts","template","ChangeRoleComponent_Template","rf","ctx","ɵɵlistener","ChangeRoleComponent_Template_form_ngSubmit_3_listener","ɵɵtemplate","ChangeRoleComponent_option_7_Template"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\user\\change-role\\change-role.component.ts","D:\\MMU\\Frontend\\client\\src\\app\\admin\\user\\change-role\\change-role.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-change-role',\n  templateUrl: './change-role.component.html',\n  styleUrls: ['./change-role.component.css'],\n})\nexport class ChangeRoleComponent implements OnInit {\n  roles: string[] = [];\n  changeRoleForm: FormGroup;\n  userId: string | null = null;\n\n  constructor(\n    private userService: UserService,\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.changeRoleForm = this.fb.group({\n      roles: [''],\n    });\n  }\n\n  ngOnInit(): void {\n    this.userId = this.route.snapshot.paramMap.get('id');\n    this.loadRoles();\n  }\n\n  loadRoles(): void {\n    this.userService.getRoles().subscribe({\n      next: (roles) => (this.roles = roles),\n      error: (err) => console.error('Error loading roles', err),\n    });\n  }\n\n  onSubmit(): void {\n    if (this.userId) {\n      const selectedRole = this.changeRoleForm.get('roles')?.value;\n      this.userService\n        .changeUserRole(this.userId, [selectedRole])\n        .subscribe({\n          next: () => {\n            alert('Role updated successfully');\n            this.router.navigate(['/admin']); // Admin paneline dön\n          },\n          error: (err) => console.error('Error updating role', err),\n        });\n    }\n  }\n}\n","<div>\n  <h3>Change User Role</h3>\n  <form [formGroup]=\"changeRoleForm\" (ngSubmit)=\"onSubmit()\">\n    <label for=\"roles\">Select Role:</label>\n    <select id=\"roles\" formControlName=\"roles\">\n      <option *ngFor=\"let role of roles\" [value]=\"role\">{{ role }}</option>\n    </select>\n    <button type=\"submit\">Change Role</button>\n  </form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}