{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../type.service\";\nexport class TypeAddComponent {\n  constructor(typeService) {\n    this.typeService = typeService;\n    this.type = {\n      typeName: ''\n    };\n  }\n  ngOnInit() {\n    this.AddType();\n  }\n  AddType() {\n    const formData = new FormData();\n    formData.append('typeName', this.type.typeName);\n    this.typeService.addType(formData, {});\n  }\n  addBook() {\n    const formData = new FormData();\n    formData.append('Title', this.book.title);\n    formData.append('Description', this.book.description);\n    formData.append('CreateBook', this.book.createBook);\n    formData.append('TypeId', this.book.typeId.toString());\n    formData.append('CategoryId', this.book.categoryId.toString());\n    formData.append('AuthorId', this.book.authorId.toString());\n    if (this.book.photoFile) {\n      formData.append('PhotoFile', this.book.photoFile);\n    }\n    if (this.book.documentFile) {\n      formData.append('DocumentFile', this.book.documentFile);\n    }\n    this.bookService.addBook(formData).subscribe({\n      next: response => {\n        console.log('Book added successfully:', response);\n        this.router.navigate(['/admin/book/book-list']); // Başarılı ekleme sonrası yönlendirme\n      },\n\n      error: err => {\n        console.error('Error adding book:', err);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function TypeAddComponent_Factory(t) {\n      return new (t || TypeAddComponent)(i0.ɵɵdirectiveInject(i1.TypeService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TypeAddComponent,\n      selectors: [[\"app-type-add\"]],\n      decls: 2,\n      vars: 0,\n      template: function TypeAddComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"type-add works!\");\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["TypeAddComponent","constructor","typeService","type","typeName","ngOnInit","AddType","formData","FormData","append","addType","addBook","book","title","description","createBook","typeId","toString","categoryId","authorId","photoFile","documentFile","bookService","subscribe","next","response","console","log","router","navigate","error","err","i0","ɵɵdirectiveInject","i1","TypeService","selectors","decls","vars","template","TypeAddComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\type\\type-add\\type-add.component.ts","D:\\MMU\\Frontend\\client\\src\\app\\admin\\type\\type-add\\type-add.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TypeService } from '../type.service';\n\n@Component({\n  selector: 'app-type-add',\n  templateUrl: './type-add.component.html',\n  styleUrls: ['./type-add.component.scss']\n})\nexport class TypeAddComponent implements OnInit {\n  type = {\n    typeName:''\n  };\n  constructor(private typeService: TypeService){}\n  ngOnInit(): void {\n    this.AddType();\n  }\n  AddType(){\n    const formData = new FormData();\n    formData.append('typeName', this.type.typeName);\n\n\n    this.typeService.addType(formData {\n\n    })\n  }\n\n  addBook() {\n    const formData = new FormData();\n    formData.append('Title', this.book.title);\n    formData.append('Description', this.book.description);\n    formData.append('CreateBook', this.book.createBook);\n    formData.append('TypeId', this.book.typeId.toString());\n    formData.append('CategoryId', this.book.categoryId.toString());\n    formData.append('AuthorId', this.book.authorId.toString());\n    if (this.book.photoFile) {\n      formData.append('PhotoFile', this.book.photoFile);\n    }\n    if (this.book.documentFile) {\n      formData.append('DocumentFile', this.book.documentFile);\n    }\n\n    this.bookService.addBook(formData).subscribe({\n      next: (response) => {\n        console.log('Book added successfully:', response);\n        this.router.navigate(['/admin/book/book-list']); // Başarılı ekleme sonrası yönlendirme\n      },\n      error: (err) => {\n        console.error('Error adding book:', err);\n      }\n    });\n  }\n}\n","<p>type-add works!</p>\n"],"mappings":";;AAQA,OAAM,MAAOA,gBAAgB;EAI3BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAAC,IAAI,GAAG;MACLC,QAAQ,EAAC;KACV;EAC6C;EAC9CC,QAAQA,CAAA;IACN,IAAI,CAACC,OAAO,EAAE;EAChB;EACAA,OAAOA,CAAA;IACL,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAACN,IAAI,CAACC,QAAQ,CAAC;IAG/C,IAAI,CAACF,WAAW,CAACQ,OAAO,CAACH,QAAQ,EAAC,EAEjC,CAAC;EACJ;EAEAI,OAAOA,CAAA;IACL,MAAMJ,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACG,IAAI,CAACC,KAAK,CAAC;IACzCN,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE,IAAI,CAACG,IAAI,CAACE,WAAW,CAAC;IACrDP,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE,IAAI,CAACG,IAAI,CAACG,UAAU,CAAC;IACnDR,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAE,IAAI,CAACG,IAAI,CAACI,MAAM,CAACC,QAAQ,EAAE,CAAC;IACtDV,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE,IAAI,CAACG,IAAI,CAACM,UAAU,CAACD,QAAQ,EAAE,CAAC;IAC9DV,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAACG,IAAI,CAACO,QAAQ,CAACF,QAAQ,EAAE,CAAC;IAC1D,IAAI,IAAI,CAACL,IAAI,CAACQ,SAAS,EAAE;MACvBb,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAE,IAAI,CAACG,IAAI,CAACQ,SAAS,CAAC;;IAEnD,IAAI,IAAI,CAACR,IAAI,CAACS,YAAY,EAAE;MAC1Bd,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAE,IAAI,CAACG,IAAI,CAACS,YAAY,CAAC;;IAGzD,IAAI,CAACC,WAAW,CAACX,OAAO,CAACJ,QAAQ,CAAC,CAACgB,SAAS,CAAC;MAC3CC,IAAI,EAAGC,QAAQ,IAAI;QACjBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,QAAQ,CAAC;QACjD,IAAI,CAACG,MAAM,CAACC,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;MACnD,CAAC;;MACDC,KAAK,EAAGC,GAAG,IAAI;QACbL,OAAO,CAACI,KAAK,CAAC,oBAAoB,EAAEC,GAAG,CAAC;MAC1C;KACD,CAAC;EACJ;;;uBA1CW/B,gBAAgB,EAAAgC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAhBnC,gBAAgB;MAAAoC,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCR7BT,EAAA,CAAAW,cAAA,QAAG;UAAAX,EAAA,CAAAY,MAAA,sBAAe;UAAAZ,EAAA,CAAAa,YAAA,EAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}