{"ast":null,"code":"import { map } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SlideService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.apiUrl;\n    this.slides = [];\n  }\n  getAllSlides() {\n    return this.http.get(`${this.baseUrl}Slide`).pipe(map(response => response.$values) // $values içindeki verileri Slide[] tipine dönüştür\n    );\n  }\n\n  getHomes() {\n    return this.http.get(this.baseUrl + 'Home').pipe(map(response => response.$values) // $values içindeki verileri alın\n    );\n  }\n\n  getSlideById(id) {\n    return this.http.get(`${this.baseUrl}Slide/${id}`);\n  }\n  createSlide(formData) {\n    return this.http.post(`${this.baseUrl}Slide/create`, formData);\n  }\n  updateSlide(id, formData) {\n    return this.http.put(`${this.baseUrl}Slide/update/${id}`, formData);\n  }\n  deleteSlide(id) {\n    return this.http.delete(`${this.baseUrl}Slide/${id}`);\n  }\n  static {\n    this.ɵfac = function SlideService_Factory(t) {\n      return new (t || SlideService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SlideService,\n      factory: SlideService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["map","environment","SlideService","constructor","http","baseUrl","apiUrl","slides","getAllSlides","get","pipe","response","$values","getHomes","getSlideById","id","createSlide","formData","post","updateSlide","put","deleteSlide","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\slide\\slide.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, Observable } from 'rxjs';\nimport { Slide } from 'src/app/shared/models/Slide';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SlideService {\n  private baseUrl = environment.apiUrl;\n  slides:  any[] = [];\n  constructor(private http: HttpClient) {}\n\n  getAllSlides(): Observable<Slide[]> {\n    return this.http.get<any>(`${this.baseUrl}Slide`).pipe(\n      map((response) => response.$values as Slide[]) // $values içindeki verileri Slide[] tipine dönüştür\n    );\n  }\n getHomes(): Observable<Home[]> {\n      return this.http.get<any>(this.baseUrl + 'Home').pipe(\n        map((response) => response.$values) // $values içindeki verileri alın\n      );\n    }\n  getSlideById(id: number): Observable<any> {\n    return this.http.get<any>(`${this.baseUrl}Slide/${id}`);\n  }\n\n  createSlide(formData: FormData): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}Slide/create`, formData);\n  }\n\n  updateSlide(id: number, formData: FormData): Observable<any> {\n    return this.http.put<any>(`${this.baseUrl}Slide/update/${id}`, formData);\n  }\n\n  deleteSlide(id: number): Observable<any> {\n    return this.http.delete<any>(`${this.baseUrl}Slide/${id}`);\n  }\n}\n"],"mappings":"AAEA,SAASA,GAAG,QAAoB,MAAM;AAEtC,SAASC,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAGJ,WAAW,CAACK,MAAM;IACpC,KAAAC,MAAM,GAAW,EAAE;EACoB;EAEvCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAM,GAAG,IAAI,CAACJ,OAAO,OAAO,CAAC,CAACK,IAAI,CACpDV,GAAG,CAAEW,QAAQ,IAAKA,QAAQ,CAACC,OAAkB,CAAC,CAAC;KAChD;EACH;;EACDC,QAAQA,CAAA;IACH,OAAO,IAAI,CAACT,IAAI,CAACK,GAAG,CAAM,IAAI,CAACJ,OAAO,GAAG,MAAM,CAAC,CAACK,IAAI,CACnDV,GAAG,CAAEW,QAAQ,IAAKA,QAAQ,CAACC,OAAO,CAAC,CAAC;KACrC;EACH;;EACFE,YAAYA,CAACC,EAAU;IACrB,OAAO,IAAI,CAACX,IAAI,CAACK,GAAG,CAAM,GAAG,IAAI,CAACJ,OAAO,SAASU,EAAE,EAAE,CAAC;EACzD;EAEAC,WAAWA,CAACC,QAAkB;IAC5B,OAAO,IAAI,CAACb,IAAI,CAACc,IAAI,CAAM,GAAG,IAAI,CAACb,OAAO,cAAc,EAAEY,QAAQ,CAAC;EACrE;EAEAE,WAAWA,CAACJ,EAAU,EAAEE,QAAkB;IACxC,OAAO,IAAI,CAACb,IAAI,CAACgB,GAAG,CAAM,GAAG,IAAI,CAACf,OAAO,gBAAgBU,EAAE,EAAE,EAAEE,QAAQ,CAAC;EAC1E;EAEAI,WAAWA,CAACN,EAAU;IACpB,OAAO,IAAI,CAACX,IAAI,CAACkB,MAAM,CAAM,GAAG,IAAI,CAACjB,OAAO,SAASU,EAAE,EAAE,CAAC;EAC5D;;;uBA7BWb,YAAY,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAZxB,YAAY;MAAAyB,OAAA,EAAZzB,YAAY,CAAA0B,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}