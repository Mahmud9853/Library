{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction TextInputComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 5);\n  }\n}\nfunction TextInputComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Please enter your \", ctx_r1.label, \"\");\n  }\n}\nfunction TextInputComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \"Invalid email address\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TextInputComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \" Password not complex enough \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TextInputComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \" Email address is taken\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class TextInputComponent {\n  constructor(controlDir) {\n    this.controlDir = controlDir;\n    this.type = 'text';\n    this.date = 'date';\n    this.label = '';\n    this.controlDir.valueAccessor = this;\n  }\n  writeValue(obj) {}\n  registerOnChange(fn) {}\n  registerOnTouched(fn) {}\n  get control() {\n    return this.controlDir.control;\n  }\n  static {\n    this.ɵfac = function TextInputComponent_Factory(t) {\n      return new (t || TextInputComponent)(i0.ɵɵdirectiveInject(i1.NgControl, 2));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TextInputComponent,\n      selectors: [[\"app-text-input\"]],\n      inputs: {\n        type: \"type\",\n        date: \"date\",\n        label: \"label\"\n      },\n      decls: 9,\n      vars: 10,\n      consts: [[1, \"form-floating\", \"mb-3\"], [\"formControlName\", \"email\", \"id\", \"floatingInput\", 1, \"form-control\", 3, \"type\", \"formControl\", \"placeholder\", \"ngClass\"], [\"class\", \"fa fa-spinner fa-spin loader\", 4, \"ngIf\"], [\"for\", \"floatingInput\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"fa\", \"fa-spinner\", \"fa-spin\", \"loader\"], [1, \"invalid-feedback\"]],\n      template: function TextInputComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"input\", 1);\n          i0.ɵɵtemplate(2, TextInputComponent_div_2_Template, 1, 0, \"div\", 2);\n          i0.ɵɵelementStart(3, \"label\", 3);\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(5, TextInputComponent_div_5_Template, 2, 1, \"div\", 4);\n          i0.ɵɵtemplate(6, TextInputComponent_div_6_Template, 2, 0, \"div\", 4);\n          i0.ɵɵtemplate(7, TextInputComponent_div_7_Template, 2, 0, \"div\", 4);\n          i0.ɵɵtemplate(8, TextInputComponent_div_8_Template, 2, 0, \"div\", 4);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵpropertyInterpolate(\"type\", ctx.type);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.label);\n          i0.ɵɵproperty(\"formControl\", ctx.control)(\"ngClass\", ctx.control.touched ? ctx.control.invalid ? \"is-invalid\" : \"is-valid\" : null);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.control.status === \"PENDING\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.label);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.control.errors == null ? null : ctx.control.errors[\"required\"]);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.control.errors == null ? null : ctx.control.errors[\"email\"]);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.control.errors == null ? null : ctx.control.errors[\"pattern\"]);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.control.errors == null ? null : ctx.control.errors[\"emailExists\"]);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgIf, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlDirective, i1.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","label","TextInputComponent","constructor","controlDir","type","date","valueAccessor","writeValue","obj","registerOnChange","fn","registerOnTouched","control","ɵɵdirectiveInject","i1","NgControl","selectors","inputs","decls","vars","consts","template","TextInputComponent_Template","rf","ctx","ɵɵtemplate","TextInputComponent_div_2_Template","TextInputComponent_div_5_Template","TextInputComponent_div_6_Template","TextInputComponent_div_7_Template","TextInputComponent_div_8_Template","ɵɵpropertyInterpolate","ɵɵproperty","touched","invalid","status","ɵɵtextInterpolate","errors"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\shared\\text-input\\text-input\\text-input.component.ts","D:\\MMU\\Frontend\\client\\src\\app\\shared\\text-input\\text-input\\text-input.component.html"],"sourcesContent":["import { Component, Input, Self } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.scss']\n})\nexport class TextInputComponent implements ControlValueAccessor {\n  @Input() type = 'text';\n  @Input() date = 'date';\n  @Input() label = '';\n\n  constructor(@Self() public controlDir:NgControl) {\n    this.controlDir.valueAccessor = this;\n  }\n  writeValue(obj: any): void {\n  }\n  registerOnChange(fn: any): void {\n  }\n  registerOnTouched(fn: any): void {\n  }\n\n  get control(): FormControl{\n    return this.controlDir.control as FormControl\n  }\n \n\n}\n","<div class=\"form-floating mb-3\">\n    <input  type={{type}} [formControl]=\"control\" formControlName=\"email\" class=\"form-control \" id=\"floatingInput\" placeholder={{label}} [ngClass]=\"(control.touched) ? control.invalid ? 'is-invalid' : 'is-valid' : null\">\n    <div *ngIf=\"control.status === 'PENDING'\" class=\"fa fa-spinner fa-spin loader\"></div>\n    <label for=\"floatingInput\">{{label}}</label>\n    <div *ngIf=\"control.errors?.['required']\" class=\"invalid-feedback\">Please enter your {{label}}</div>\n    <div *ngIf=\"control.errors?.['email']\" class=\"invalid-feedback\">Invalid email address</div>\n    <div *ngIf=\"control.errors?.['pattern']\" class=\"invalid-feedback\"> Password not complex enough </div>\n    <div *ngIf=\"control.errors?.['emailExists']\" class=\"invalid-feedback\"> Email address is taken</div>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}