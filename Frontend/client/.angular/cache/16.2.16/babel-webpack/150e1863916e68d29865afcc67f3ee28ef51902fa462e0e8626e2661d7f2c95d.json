{"ast":null,"code":"import { ReplaySubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AccountService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.baseUrl = environment.apiUrl;\n    this.currentUserSource = new ReplaySubject(1);\n    this.currentUser$ = this.currentUserSource.asObservable();\n  }\n  register(userData) {\n    return this.http.post(`${this.apiUrl}/register`, userData);\n  }\n  login(userData) {\n    return this.http.post(`${this.apiUrl}/login`, userData);\n  }\n  logout() {\n    localStorage.removeItem('token');\n    this.router.navigate(['/login']);\n  }\n  saveToken(token) {\n    localStorage.setItem('token', token);\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  static {\n    this.ɵfac = function AccountService_Factory(t) {\n      return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AccountService,\n      factory: AccountService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ReplaySubject","environment","AccountService","constructor","http","router","baseUrl","apiUrl","currentUserSource","currentUser$","asObservable","register","userData","post","login","logout","localStorage","removeItem","navigate","saveToken","token","setItem","getToken","getItem","i0","ɵɵinject","i1","HttpClient","i2","Router","factory","ɵfac","providedIn"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\account\\account.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ReplaySubject, map, of } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../shared/models/user';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  baseUrl = environment.apiUrl;\n  private currentUserSource = new ReplaySubject<User | null>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  register(userData: any): Observable<any> {\n    return this.http.post(`${this.apiUrl}/register`, userData);\n  }\n\n  login(userData: any): Observable<any> {\n    return this.http.post(`${this.apiUrl}/login`, userData);\n  }\n\n  logout(): void {\n    localStorage.removeItem('token');\n    this.router.navigate(['/login']);\n  }\n\n  saveToken(token: string): void {\n    localStorage.setItem('token', token);\n  }\n\n  getToken(): string | null {\n    return localStorage.getItem('token');\n  }\n\n  \n\n \n}\n"],"mappings":"AACA,SAASA,aAAa,QAAiB,MAAM;AAC7C,SAASC,WAAW,QAAQ,8BAA8B;;;;AAQ1D,OAAM,MAAOC,cAAc;EAMzBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAJpD,KAAAC,OAAO,GAAGL,WAAW,CAACM,MAAM;IACpB,KAAAC,iBAAiB,GAAG,IAAIR,aAAa,CAAc,CAAC,CAAC;IAC7D,KAAAS,YAAY,GAAG,IAAI,CAACD,iBAAiB,CAACE,YAAY,EAAE;EAEY;EAEhEC,QAAQA,CAACC,QAAa;IACpB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,GAAG,IAAI,CAACN,MAAM,WAAW,EAAEK,QAAQ,CAAC;EAC5D;EAEAE,KAAKA,CAACF,QAAa;IACjB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,GAAG,IAAI,CAACN,MAAM,QAAQ,EAAEK,QAAQ,CAAC;EACzD;EAEAG,MAAMA,CAAA;IACJC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChC,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAC,SAASA,CAACC,KAAa;IACrBJ,YAAY,CAACK,OAAO,CAAC,OAAO,EAAED,KAAK,CAAC;EACtC;EAEAE,QAAQA,CAAA;IACN,OAAON,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC;EACtC;;;uBA3BWrB,cAAc,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAAd3B,cAAc;MAAA4B,OAAA,EAAd5B,cAAc,CAAA6B,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}