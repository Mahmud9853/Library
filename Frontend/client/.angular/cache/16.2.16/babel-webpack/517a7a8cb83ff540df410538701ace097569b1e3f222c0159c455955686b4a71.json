{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let BookListComponent = class BookListComponent {\n  constructor(bookService, route) {\n    this.bookService = bookService;\n    this.route = route;\n    this.books = [];\n    this.types = [];\n    this.categories = [];\n    this.authors = [];\n    this.book = null;\n    this.selectedType = '';\n    this.selectedCategory = '';\n    this.selectedAuthor = '';\n    this.searchTerm = '';\n    this.currentPage = 1;\n    this.pageSize = 10;\n    this.totalPages = 1;\n  }\n  ngOnInit() {\n    this.loadBooks();\n    // this.getBooks();\n    // this.getBook();\n  }\n\n  loadBooks() {\n    const params = {\n      type: this.selectedType,\n      category: this.selectedCategory,\n      author: this.selectedAuthor,\n      search: this.searchTerm,\n      currentPage: this.currentPage,\n      pageSize: this.pageSize,\n      totalPages: this.totalPages\n    };\n    this.bookService.getBook(params).subscribe(response => {\n      this.books = response.data;\n      this.totalPages = response.totalPages;\n    });\n  }\n  applyFilters() {\n    this.currentPage = 1;\n    this.loadBooks();\n  }\n  onSearch(event) {\n    this.searchTerm = event.target.value;\n    this.currentPage = 1;\n    this.loadBooks();\n  }\n  change(page) {\n    if (page >= 1 && page <= this.totalPages) {\n      this.currentPage = page;\n      this.loadBooks();\n    }\n  }\n};\nBookListComponent = __decorate([Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.scss']\n})], BookListComponent);","map":{"version":3,"names":["Component","BookListComponent","constructor","bookService","route","books","types","categories","authors","book","selectedType","selectedCategory","selectedAuthor","searchTerm","currentPage","pageSize","totalPages","ngOnInit","loadBooks","params","type","category","author","search","getBook","subscribe","response","data","applyFilters","onSearch","event","target","value","change","page","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\book\\book-list\\book-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {Book} from 'src/app/shared/models/book'; \nimport { BookService } from '../book.service';\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.scss']\n})\nexport class BookListComponent implements OnInit{\n\n  books: any[] = [];\n  types:string[] = [];\n  categories:string[]=[];\n  authors:string[]=[];\n  book: any | null = null;\n\n  selectedType: string = '';\n  selectedCategory: string = '';\n  selectedAuthor: string = '';\n  searchTerm: string='';\n  currentPage: number = 1;\n  pageSize: number = 10;\n  totalPages: number = 1\n\n  constructor(private bookService: BookService, private route: ActivatedRoute) {}\n    ngOnInit(): void {\n      this.loadBooks();\n      // this.getBooks();\n      // this.getBook();\n    }\n    loadBooks(): void{\n      const params = {\n        type:this.selectedType,\n        category: this.selectedCategory,\n        author: this.selectedAuthor,\n        search: this.searchTerm,\n        currentPage:this.currentPage,\n        pageSize:this.pageSize,\n        totalPages: this.totalPages\n      \n      };\n      this.bookService.getBook(params).subscribe(response => {\n        this.books = response.data;\n        this.totalPages = response.totalPages;\n      });\n    }\n    applyFilters(): void{\n      this.currentPage = 1;\n      this.loadBooks();\n    }\n    onSearch(event: any): void{\n      this.searchTerm = event.target.value; \n      this.currentPage =1;\n      this.loadBooks();\n    }\n    change(page:number): void{\n      if(page>=1 && page <= this.totalPages){\n        this.currentPage = page;\n        this.loadBooks();\n      }\n    }\n    // getBooks() {\n    //   this.bookService.getBooks().subscribe({\n    //     next: (response: any) => {\n    //       console.log('API Response:', response); // Konsola yazdırın\n    //       this.books = response;\n    //     },\n    //     error: (error) => {\n    //       console.error('Error fetching books:', error); // Hataları yazdırın\n    //     }\n    //   });\n    // }\n    // getBook() : void {\n    //   const id = Number(this.route.snapshot.paramMap.get('id'));\n    //   if(id){\n    //     this.bookService.getBookById(id).subscribe({\n         \n    //       next: (response) => {\n    //         console.log('API Response:', response); // Konsola yazdırın\n    //         this.book = response;\n    //       },\n    //       error: (error) =>{\n    //         console.error('Error loading book details:', error);\n    //       }\n    //     });\n    //   }\n    // }\n    // DeleteBook(id: number) {\n    //   this.bookService.deleteBook(id).subscribe(() => {\n    //     this.getBook();\n    //   });\n    // }\n  \n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAgB5BC,YAAoBC,WAAwB,EAAUC,KAAqB;IAAvD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,KAAK,GAALA,KAAK;IAd3D,KAAAC,KAAK,GAAU,EAAE;IACjB,KAAAC,KAAK,GAAY,EAAE;IACnB,KAAAC,UAAU,GAAU,EAAE;IACtB,KAAAC,OAAO,GAAU,EAAE;IACnB,KAAAC,IAAI,GAAe,IAAI;IAEvB,KAAAC,YAAY,GAAW,EAAE;IACzB,KAAAC,gBAAgB,GAAW,EAAE;IAC7B,KAAAC,cAAc,GAAW,EAAE;IAC3B,KAAAC,UAAU,GAAS,EAAE;IACrB,KAAAC,WAAW,GAAW,CAAC;IACvB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,UAAU,GAAW,CAAC;EAEwD;EAC5EC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;IAChB;IACA;EACF;;EACAA,SAASA,CAAA;IACP,MAAMC,MAAM,GAAG;MACbC,IAAI,EAAC,IAAI,CAACV,YAAY;MACtBW,QAAQ,EAAE,IAAI,CAACV,gBAAgB;MAC/BW,MAAM,EAAE,IAAI,CAACV,cAAc;MAC3BW,MAAM,EAAE,IAAI,CAACV,UAAU;MACvBC,WAAW,EAAC,IAAI,CAACA,WAAW;MAC5BC,QAAQ,EAAC,IAAI,CAACA,QAAQ;MACtBC,UAAU,EAAE,IAAI,CAACA;KAElB;IACD,IAAI,CAACb,WAAW,CAACqB,OAAO,CAACL,MAAM,CAAC,CAACM,SAAS,CAACC,QAAQ,IAAG;MACpD,IAAI,CAACrB,KAAK,GAAGqB,QAAQ,CAACC,IAAI;MAC1B,IAAI,CAACX,UAAU,GAAGU,QAAQ,CAACV,UAAU;IACvC,CAAC,CAAC;EACJ;EACAY,YAAYA,CAAA;IACV,IAAI,CAACd,WAAW,GAAG,CAAC;IACpB,IAAI,CAACI,SAAS,EAAE;EAClB;EACAW,QAAQA,CAACC,KAAU;IACjB,IAAI,CAACjB,UAAU,GAAGiB,KAAK,CAACC,MAAM,CAACC,KAAK;IACpC,IAAI,CAAClB,WAAW,GAAE,CAAC;IACnB,IAAI,CAACI,SAAS,EAAE;EAClB;EACAe,MAAMA,CAACC,IAAW;IAChB,IAAGA,IAAI,IAAE,CAAC,IAAIA,IAAI,IAAI,IAAI,CAAClB,UAAU,EAAC;MACpC,IAAI,CAACF,WAAW,GAAGoB,IAAI;MACvB,IAAI,CAAChB,SAAS,EAAE;;EAEpB;CAiCH;AArFYjB,iBAAiB,GAAAkC,UAAA,EAL7BnC,SAAS,CAAC;EACToC,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWrC,iBAAiB,CAqF7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}