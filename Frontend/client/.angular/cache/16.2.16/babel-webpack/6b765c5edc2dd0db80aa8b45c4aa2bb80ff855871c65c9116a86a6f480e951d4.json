{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../slide.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/account/account.service\";\nimport * as i5 from \"@angular/common\";\nfunction SlideListComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelement(4, \"img\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"td\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const slide_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(slide_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", slide_r1.photo, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class SlideListComponent {\n  constructor(fb, slideService, router, route, accountService) {\n    this.fb = fb;\n    this.slideService = slideService;\n    this.router = router;\n    this.route = route;\n    this.accountService = accountService;\n    this.slides = [];\n    this.role = null;\n    this.role = this.accountService.getRole();\n  }\n  ngOnInit() {\n    this.loadSlide();\n  }\n  loadSlide() {\n    this.slideService.getAllSlides().subscribe({\n      next: response => {\n        console.log(\"API response slide:\", response);\n        this.slides = response;\n      },\n      error: error => error.log('Error fetching books:', error)\n    });\n  }\n  static {\n    this.ɵfac = function SlideListComponent_Factory(t) {\n      return new (t || SlideListComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SlideService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.AccountService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SlideListComponent,\n      selectors: [[\"app-slide-list\"]],\n      decls: 14,\n      vars: 1,\n      consts: [[1, \"container\", \"mt-4\"], [1, \"table\", \"table-bordered\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"alt\", \"Slide Image\", \"width\", \"100\", \"height\", \"60\", 1, \"img-thumbnail\", 3, \"src\"]],\n      template: function SlideListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Slide List\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"table\", 1)(4, \"thead\")(5, \"tr\")(6, \"th\");\n          i0.ɵɵtext(7, \"ID\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"th\");\n          i0.ɵɵtext(9, \"Photo\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"th\");\n          i0.ɵɵtext(11, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(12, \"tbody\");\n          i0.ɵɵtemplate(13, SlideListComponent_tr_13_Template, 6, 2, \"tr\", 2);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"ngForOf\", ctx.slides);\n        }\n      },\n      dependencies: [i5.NgForOf],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","slide_r1","id","ɵɵproperty","photo","ɵɵsanitizeUrl","SlideListComponent","constructor","fb","slideService","router","route","accountService","slides","role","getRole","ngOnInit","loadSlide","getAllSlides","subscribe","next","response","console","log","error","ɵɵdirectiveInject","i1","FormBuilder","i2","SlideService","i3","Router","ActivatedRoute","i4","AccountService","selectors","decls","vars","consts","template","SlideListComponent_Template","rf","ctx","ɵɵtemplate","SlideListComponent_tr_13_Template"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\slide\\slide-list\\slide-list.component.ts","D:\\MMU\\Frontend\\client\\src\\app\\admin\\slide\\slide-list\\slide-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { SlideService } from '../slide.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AccountService } from 'src/app/account/account.service';\n\n@Component({\n  selector: 'app-slide-list',\n  templateUrl: './slide-list.component.html',\n  styleUrls: ['./slide-list.component.scss']\n})\nexport class SlideListComponent implements OnInit {\n\n  slides: any[] = [];\n  slide: any;\n  role: string | null = null;\n  constructor(private fb: FormBuilder, private slideService: SlideService, private router: Router, private route: ActivatedRoute, private accountService: AccountService) {\n      this.role = this.accountService.getRole();\n    }\n  ngOnInit(): void {\n    this.loadSlide();\n  }\n  loadSlide() {\n    this.slideService.getAllSlides().subscribe({\n      next: (response: any) => {\n        console.log(\"API response slide:\", response)\n        this.slides = response;\n      }, \n      error: (error) => error.log('Error fetching books:', error)\n    });\n  }\n\n\n}\n","<div class=\"container mt-4\">\n    <h2>Slide List</h2>\n    \n    <!-- Table -->\n    <table class=\"table table-bordered table-striped\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Photo</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let slide of slides; let i\">\n          <td>{{ slide.id }}</td>\n          <td>\n            <img \n              [src]=\"slide.photo\" \n              alt=\"Slide Image\" \n              width=\"100\" \n              height=\"60\" \n              class=\"img-thumbnail\" />\n          </td>\n          <td>\n            <!-- Optional actions can be added here -->\n            <!-- <button class=\"btn btn-danger btn-sm\" (click)=\"deleteSlide(slide.id)\">Delete</button> -->\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  "],"mappings":";;;;;;;;ICaQA,EAAA,CAAAC,cAAA,SAAwC;IAClCD,EAAA,CAAAE,MAAA,GAAc;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACvBH,EAAA,CAAAC,cAAA,SAAI;IACFD,EAAA,CAAAI,SAAA,aAK0B;IAC5BJ,EAAA,CAAAG,YAAA,EAAK;IACLH,EAAA,CAAAI,SAAA,SAGK;IACPJ,EAAA,CAAAG,YAAA,EAAK;;;;IAbCH,EAAA,CAAAK,SAAA,GAAc;IAAdL,EAAA,CAAAM,iBAAA,CAAAC,QAAA,CAAAC,EAAA,CAAc;IAGdR,EAAA,CAAAK,SAAA,GAAmB;IAAnBL,EAAA,CAAAS,UAAA,QAAAF,QAAA,CAAAG,KAAA,EAAAV,EAAA,CAAAW,aAAA,CAAmB;;;ADNjC,OAAM,MAAOC,kBAAkB;EAK7BC,YAAoBC,EAAe,EAAUC,YAA0B,EAAUC,MAAc,EAAUC,KAAqB,EAAUC,cAA8B;IAAlJ,KAAAJ,EAAE,GAAFA,EAAE;IAAuB,KAAAC,YAAY,GAAZA,YAAY;IAAwB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;IAA0B,KAAAC,cAAc,GAAdA,cAAc;IAHtJ,KAAAC,MAAM,GAAU,EAAE;IAElB,KAAAC,IAAI,GAAkB,IAAI;IAEtB,IAAI,CAACA,IAAI,GAAG,IAAI,CAACF,cAAc,CAACG,OAAO,EAAE;EAC3C;EACFC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EACAA,SAASA,CAAA;IACP,IAAI,CAACR,YAAY,CAACS,YAAY,EAAE,CAACC,SAAS,CAAC;MACzCC,IAAI,EAAGC,QAAa,IAAI;QACtBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,QAAQ,CAAC;QAC5C,IAAI,CAACR,MAAM,GAAGQ,QAAQ;MACxB,CAAC;MACDG,KAAK,EAAGA,KAAK,IAAKA,KAAK,CAACD,GAAG,CAAC,uBAAuB,EAAEC,KAAK;KAC3D,CAAC;EACJ;;;uBAnBWlB,kBAAkB,EAAAZ,EAAA,CAAA+B,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAjC,EAAA,CAAA+B,iBAAA,CAAAG,EAAA,CAAAC,YAAA,GAAAnC,EAAA,CAAA+B,iBAAA,CAAAK,EAAA,CAAAC,MAAA,GAAArC,EAAA,CAAA+B,iBAAA,CAAAK,EAAA,CAAAE,cAAA,GAAAtC,EAAA,CAAA+B,iBAAA,CAAAQ,EAAA,CAAAC,cAAA;IAAA;EAAA;;;YAAlB5B,kBAAkB;MAAA6B,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCX/B/C,EAAA,CAAAC,cAAA,aAA4B;UACpBD,EAAA,CAAAE,MAAA,iBAAU;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAGnBH,EAAA,CAAAC,cAAA,eAAkD;UAGxCD,EAAA,CAAAE,MAAA,SAAE;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACXH,EAAA,CAAAC,cAAA,SAAI;UAAAD,EAAA,CAAAE,MAAA,YAAK;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACdH,EAAA,CAAAC,cAAA,UAAI;UAAAD,EAAA,CAAAE,MAAA,eAAO;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAGpBH,EAAA,CAAAC,cAAA,aAAO;UACLD,EAAA,CAAAiD,UAAA,KAAAC,iCAAA,gBAcK;UACPlD,EAAA,CAAAG,YAAA,EAAQ;;;UAfgBH,EAAA,CAAAK,SAAA,IAAW;UAAXL,EAAA,CAAAS,UAAA,YAAAuC,GAAA,CAAA7B,MAAA,CAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}