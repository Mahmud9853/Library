{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { BookParams } from 'src/app/shared/models/bookParams';\nexport let BookListComponent = class BookListComponent {\n  constructor(fb, bookService) {\n    this.fb = fb;\n    this.bookService = bookService;\n    this.Math = Math;\n    this.books = [];\n    this.totalRecords = 0;\n    this.categories = [];\n    this.types = [];\n    this.authors = [];\n    this.bookParams = new BookParams();\n  }\n  ngOnInit() {\n    // this.getBooks();\n    // this.loadType();\n    // this.loadAuthor();\n    this.getBookParams();\n    this.loadFilters();\n    this.searchForm = this.fb.group({\n      search: [''],\n      typeId: [''],\n      authorId: [''],\n      categoryId: ['']\n    });\n    // Dinamik olarak form değişikliklerini takip etmek\n    this.searchForm.valueChanges.subscribe(values => {\n      this.applyFilters();\n    });\n  }\n  // initializeForm(): void {\n  //   this.searchForm = this.fb.group({\n  //     search: [''],\n  //   });\n  // }\n  getBookParams() {\n    this.bookService.getBookss(this.bookParams).subscribe({\n      next: response => {\n        console.log('API Response books:', response);\n        this.books = response.books || [];\n        this.totalRecords = response.totalRecords || 0;\n      },\n      error: error => console.log('Error fetching books:', error)\n    });\n  }\n  loadFilters() {\n    console.log('API Response types:', this.types);\n    this.bookService.getTypes().subscribe(types => this.types = types);\n    console.log('API Response authors:', this.authors);\n    this.bookService.getAuthors().subscribe(authors => this.authors = authors);\n    console.log('API Response categories:', this.categories);\n    this.bookService.getCategories().subscribe(categories => this.categories = categories);\n  }\n  onSearch() {\n    console.log(this.searchForm);\n    this.bookParams.search = this.searchForm.value.search;\n    this.getBookParams();\n  }\n  onPageChange(pageNumber) {\n    if (pageNumber > 0) {\n      this.bookParams.pageNumber = pageNumber;\n      this.getBookParams();\n    }\n  }\n  applyFilters() {\n    const {\n      search,\n      typeId,\n      authorId,\n      categoryId\n    } = this.searchForm.value;\n    // Filtre uygulama mantığı\n    console.log('Filters:', {\n      search,\n      typeId,\n      authorId,\n      categoryId\n    });\n    this.getBookParams(); // API'yi çağırabilirsiniz.\n  }\n};\n\nBookListComponent = __decorate([Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.scss']\n})], BookListComponent);","map":{"version":3,"names":["Component","BookParams","BookListComponent","constructor","fb","bookService","Math","books","totalRecords","categories","types","authors","bookParams","ngOnInit","getBookParams","loadFilters","searchForm","group","search","typeId","authorId","categoryId","valueChanges","subscribe","values","applyFilters","getBookss","next","response","console","log","error","getTypes","getAuthors","getCategories","onSearch","value","onPageChange","pageNumber","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\book\\book-list\\book-list.component.ts"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {Book} from 'src/app/shared/models/book'; \nimport { BookService } from '../book.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BookParams } from 'src/app/shared/models/bookParams';\nimport { TypeService } from '../../type/type.service';\nimport { AuthorService } from '../../author/author.service';\nimport { Author } from 'src/app/shared/models/author';\nimport { Category } from 'src/app/shared/models/category';\nimport { Type } from 'src/app/shared/models/type';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.scss']\n})\nexport class BookListComponent implements OnInit{\n  Math = Math;\n  searchForm!: FormGroup;\n  books: any[] = [];\n  totalRecords = 0;\n  categories: Category[] = [];\n  types: any[] = [];\n  authors: any[] = [];\n\n  bookParams: BookParams = new BookParams();\n  constructor(private fb: FormBuilder, private bookService: BookService) {}\n  \n ngOnInit(): void {\n    // this.getBooks();\n    // this.loadType();\n    // this.loadAuthor();\n    this.getBookParams();\n    this.loadFilters();\n\n    this.searchForm = this.fb.group({\n      search: [''],\n      typeId: [''],\n      authorId: [''],\n      categoryId: [''],\n    });\n\n    // Dinamik olarak form değişikliklerini takip etmek\n    this.searchForm.valueChanges.subscribe((values) => {\n      this.applyFilters();\n    });\n  \n  }\n  // initializeForm(): void {\n  //   this.searchForm = this.fb.group({\n  //     search: [''],\n  //   });\n  // }\n  getBookParams() : void {\n    this.bookService.getBookss(this.bookParams).subscribe({\n      next: (response: any) => {\n        console.log('API Response books:', response);\n        this.books = response.books || [];\n        this.totalRecords = response.totalRecords || 0;\n      },\n      error: (error) => console.log('Error fetching books:', error),\n    });\n  }\n  loadFilters(): void {\n    console.log('API Response types:', this.types );\n    this.bookService.getTypes().subscribe((types) => (this.types = types));\n    console.log('API Response authors:', this.authors  );\n    this.bookService.getAuthors().subscribe((authors) => (this.authors = authors));\n    console.log('API Response categories:', this.categories  );\n    this.bookService.getCategories().subscribe((categories) => (this.categories = categories));\n  }\n  onSearch(): void{\n    console.log(this.searchForm)\n    this.bookParams.search = this.searchForm.value.search;\n    this.getBookParams();\n  }\n  onPageChange(pageNumber: number) : void{\n    if(pageNumber > 0){\n      this.bookParams.pageNumber = pageNumber;\n      this.getBookParams();\n    }\n  }\n  applyFilters(): void {\n    const { search, typeId, authorId, categoryId } = this.searchForm.value;\n    // Filtre uygulama mantığı\n    console.log('Filters:', { search, typeId, authorId, categoryId });\n    this.getBookParams(); // API'yi çağırabilirsiniz.\n  }\n    // getBooks(): void { \n    //   this.bookService.getBooks().subscribe({\n    //    next: (response: any) => {\n    //       console.log('API Response:', response);\n    //         this.books = response;\n    //     },\n    //       error: error => console.log('Error fetching books:', error)\n    //     })\n    // }\n    // loadType() {\n    //   this.bookService.getTypes().subscribe({\n    //    next: (response: any) => {\n    //       console.log('API Response type:', response);\n    //         this.types = response;\n    //     },\n    //       error: error => console.log('Error fetching books:', error)\n    //     })\n    // }\n    // loadAuthor() {\n    //   this.bookService.getAuthors().subscribe({\n    //    next: (response: any) => {\n    //       console.log('API Response author:', response);\n    //         this.authors = response;\n    //     },\n    //       error: error => console.log('Error fetching books:', error)\n    //     })\n    // }\n    \n  \n \n  \n  \n  \n \n  }\n"],"mappings":";AAAA,SAASA,SAAS,QAAsC,eAAe;AAIvE,SAASC,UAAU,QAAQ,kCAAkC;AAatD,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAU5BC,YAAoBC,EAAe,EAAUC,WAAwB;IAAjD,KAAAD,EAAE,GAAFA,EAAE;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IATxD,KAAAC,IAAI,GAAGA,IAAI;IAEX,KAAAC,KAAK,GAAU,EAAE;IACjB,KAAAC,YAAY,GAAG,CAAC;IAChB,KAAAC,UAAU,GAAe,EAAE;IAC3B,KAAAC,KAAK,GAAU,EAAE;IACjB,KAAAC,OAAO,GAAU,EAAE;IAEnB,KAAAC,UAAU,GAAe,IAAIX,UAAU,EAAE;EAC+B;EAEzEY,QAAQA,CAAA;IACL;IACA;IACA;IACA,IAAI,CAACC,aAAa,EAAE;IACpB,IAAI,CAACC,WAAW,EAAE;IAElB,IAAI,CAACC,UAAU,GAAG,IAAI,CAACZ,EAAE,CAACa,KAAK,CAAC;MAC9BC,MAAM,EAAE,CAAC,EAAE,CAAC;MACZC,MAAM,EAAE,CAAC,EAAE,CAAC;MACZC,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,UAAU,EAAE,CAAC,EAAE;KAChB,CAAC;IAEF;IACA,IAAI,CAACL,UAAU,CAACM,YAAY,CAACC,SAAS,CAAEC,MAAM,IAAI;MAChD,IAAI,CAACC,YAAY,EAAE;IACrB,CAAC,CAAC;EAEJ;EACA;EACA;EACA;EACA;EACA;EACAX,aAAaA,CAAA;IACX,IAAI,CAACT,WAAW,CAACqB,SAAS,CAAC,IAAI,CAACd,UAAU,CAAC,CAACW,SAAS,CAAC;MACpDI,IAAI,EAAGC,QAAa,IAAI;QACtBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,QAAQ,CAAC;QAC5C,IAAI,CAACrB,KAAK,GAAGqB,QAAQ,CAACrB,KAAK,IAAI,EAAE;QACjC,IAAI,CAACC,YAAY,GAAGoB,QAAQ,CAACpB,YAAY,IAAI,CAAC;MAChD,CAAC;MACDuB,KAAK,EAAGA,KAAK,IAAKF,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,KAAK;KAC7D,CAAC;EACJ;EACAhB,WAAWA,CAAA;IACTc,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAACpB,KAAK,CAAE;IAC/C,IAAI,CAACL,WAAW,CAAC2B,QAAQ,EAAE,CAACT,SAAS,CAAEb,KAAK,IAAM,IAAI,CAACA,KAAK,GAAGA,KAAM,CAAC;IACtEmB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAACnB,OAAO,CAAG;IACpD,IAAI,CAACN,WAAW,CAAC4B,UAAU,EAAE,CAACV,SAAS,CAAEZ,OAAO,IAAM,IAAI,CAACA,OAAO,GAAGA,OAAQ,CAAC;IAC9EkB,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE,IAAI,CAACrB,UAAU,CAAG;IAC1D,IAAI,CAACJ,WAAW,CAAC6B,aAAa,EAAE,CAACX,SAAS,CAAEd,UAAU,IAAM,IAAI,CAACA,UAAU,GAAGA,UAAW,CAAC;EAC5F;EACA0B,QAAQA,CAAA;IACNN,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,UAAU,CAAC;IAC5B,IAAI,CAACJ,UAAU,CAACM,MAAM,GAAG,IAAI,CAACF,UAAU,CAACoB,KAAK,CAAClB,MAAM;IACrD,IAAI,CAACJ,aAAa,EAAE;EACtB;EACAuB,YAAYA,CAACC,UAAkB;IAC7B,IAAGA,UAAU,GAAG,CAAC,EAAC;MAChB,IAAI,CAAC1B,UAAU,CAAC0B,UAAU,GAAGA,UAAU;MACvC,IAAI,CAACxB,aAAa,EAAE;;EAExB;EACAW,YAAYA,CAAA;IACV,MAAM;MAAEP,MAAM;MAAEC,MAAM;MAAEC,QAAQ;MAAEC;IAAU,CAAE,GAAG,IAAI,CAACL,UAAU,CAACoB,KAAK;IACtE;IACAP,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE;MAAEZ,MAAM;MAAEC,MAAM;MAAEC,QAAQ;MAAEC;IAAU,CAAE,CAAC;IACjE,IAAI,CAACP,aAAa,EAAE,CAAC,CAAC;EACxB;CAmCC;;AA1GUZ,iBAAiB,GAAAqC,UAAA,EAL7BvC,SAAS,CAAC;EACTwC,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWxC,iBAAiB,CA0G3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}