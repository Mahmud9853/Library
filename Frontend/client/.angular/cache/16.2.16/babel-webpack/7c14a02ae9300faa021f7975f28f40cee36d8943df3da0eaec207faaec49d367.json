{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../author.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthorEditComponent {\n  constructor(authorService, router, route) {\n    this.authorService = authorService;\n    this.router = router;\n    this.route = route;\n    this.auhtor = {\n      id: 0,\n      name: ''\n    };\n  }\n  ngOnInit() {\n    const authorId = this.route.snapshot.params['id'];\n    if (authorId) {\n      this.loadAuthor();\n    }\n  }\n  loadAuthor() {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    if (id) {\n      this.authorService.getAuthorById(id).subscribe({\n        next: response => {\n          console.log('API Response:', response);\n          this.author = response;\n        },\n        error: error => {\n          console.error('Error loading type details:', error);\n        }\n      });\n    }\n  }\n  updateType() {\n    const formData = new FormData();\n    formData.append('name', this.author.Name);\n    this.authorService.updateAuthor(this.author.id, formData).subscribe({\n      next: response => {\n        console.log('Type updated successfully:', response);\n        // Backend'den dönen güncellenmiş veriyi atayın\n        this.type = response;\n        this.router.navigate(['/admin/type/type-list']); // Başarılı güncelleme sonrası yönlendirme\n      },\n\n      error: error => {\n        console.error('Error updating type:', error);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function AuthorEditComponent_Factory(t) {\n      return new (t || AuthorEditComponent)(i0.ɵɵdirectiveInject(i1.AuthorService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AuthorEditComponent,\n      selectors: [[\"app-author-edit\"]],\n      decls: 2,\n      vars: 0,\n      template: function AuthorEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"author-edit works!\");\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["AuthorEditComponent","constructor","authorService","router","route","auhtor","id","name","ngOnInit","authorId","snapshot","params","loadAuthor","Number","paramMap","get","getAuthorById","subscribe","next","response","console","log","author","error","updateType","formData","FormData","append","Name","updateAuthor","type","navigate","i0","ɵɵdirectiveInject","i1","AuthorService","i2","Router","ActivatedRoute","selectors","decls","vars","template","AuthorEditComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\author\\author-edit\\author-edit.component.ts","D:\\MMU\\Frontend\\client\\src\\app\\admin\\author\\author-edit\\author-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthorService } from '../author.service';\n\n@Component({\n  selector: 'app-author-edit',\n  templateUrl: './author-edit.component.html',\n  styleUrls: ['./author-edit.component.scss']\n})\nexport class AuthorEditComponent implements OnInit {\n  auhtor: any = {\n    id: 0,\n    name:'',\n  };\n  \n  constructor(private authorService: AuthorService, private router: Router, private route: ActivatedRoute){}\n\n  ngOnInit(): void {\n\n    const authorId = this.route.snapshot.params['id'];\n    if (authorId) {\n      this.loadAuthor();\n    }\n  }\n  loadAuthor() {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    if (id) {\n      this.authorService.getAuthorById(id).subscribe({\n        next: (response: any) => {\n          console.log('API Response:', response);\n          this.author = response;\n        },\n        error: (error) => {\n          console.error('Error loading type details:', error);\n        }\n      });\n    }\n  }\n\n  updateType() {\n    const formData = new FormData();\n    formData.append('name', this.author.Name);\n  \n    this.authorService.updateAuthor(this.author.id, formData).subscribe({\n      next: (response: any) => {\n        console.log('Type updated successfully:', response);\n        // Backend'den dönen güncellenmiş veriyi atayın\n        this.type = response;\n        this.router.navigate(['/admin/type/type-list']); // Başarılı güncelleme sonrası yönlendirme\n      },\n      error: (error) => {\n        console.error('Error updating type:', error);\n      }\n    });\n  }\n}\n","<p>author-edit works!</p>\n"],"mappings":";;;AASA,OAAM,MAAOA,mBAAmB;EAM9BC,YAAoBC,aAA4B,EAAUC,MAAc,EAAUC,KAAqB;IAAnF,KAAAF,aAAa,GAAbA,aAAa;IAAyB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;IALvF,KAAAC,MAAM,GAAQ;MACZC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAC;KACN;EAEwG;EAEzGC,QAAQA,CAAA;IAEN,MAAMC,QAAQ,GAAG,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IACjD,IAAIF,QAAQ,EAAE;MACZ,IAAI,CAACG,UAAU,EAAE;;EAErB;EACAA,UAAUA,CAAA;IACR,MAAMN,EAAE,GAAGO,MAAM,CAAC,IAAI,CAACT,KAAK,CAACM,QAAQ,CAACI,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IACzD,IAAIT,EAAE,EAAE;MACN,IAAI,CAACJ,aAAa,CAACc,aAAa,CAACV,EAAE,CAAC,CAACW,SAAS,CAAC;QAC7CC,IAAI,EAAGC,QAAa,IAAI;UACtBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,QAAQ,CAAC;UACtC,IAAI,CAACG,MAAM,GAAGH,QAAQ;QACxB,CAAC;QACDI,KAAK,EAAGA,KAAK,IAAI;UACfH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACrD;OACD,CAAC;;EAEN;EAEAC,UAAUA,CAAA;IACR,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACL,MAAM,CAACM,IAAI,CAAC;IAEzC,IAAI,CAAC1B,aAAa,CAAC2B,YAAY,CAAC,IAAI,CAACP,MAAM,CAAChB,EAAE,EAAEmB,QAAQ,CAAC,CAACR,SAAS,CAAC;MAClEC,IAAI,EAAGC,QAAa,IAAI;QACtBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,QAAQ,CAAC;QACnD;QACA,IAAI,CAACW,IAAI,GAAGX,QAAQ;QACpB,IAAI,CAAChB,MAAM,CAAC4B,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;MACnD,CAAC;;MACDR,KAAK,EAAGA,KAAK,IAAI;QACfH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;KACD,CAAC;EACJ;;;uBA7CWvB,mBAAmB,EAAAgC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,aAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAE,cAAA;IAAA;EAAA;;;YAAnBtC,mBAAmB;MAAAuC,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCThCZ,EAAA,CAAAc,cAAA,QAAG;UAAAd,EAAA,CAAAe,MAAA,yBAAkB;UAAAf,EAAA,CAAAgB,YAAA,EAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}