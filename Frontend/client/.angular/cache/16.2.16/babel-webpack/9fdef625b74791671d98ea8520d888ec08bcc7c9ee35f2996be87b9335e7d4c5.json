{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../slide.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction SlideEditComponent_img_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 13);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r0.book.photo, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction SlideEditComponent_a_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 14);\n    i0.ɵɵtext(1, \"View Document\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"href\", ctx_r1.book.document, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class SlideEditComponent {\n  constructor(slideService, route, router) {\n    this.slideService = slideService;\n    this.route = route;\n    this.router = router;\n    this.slide = {\n      id: 0,\n      photo: null\n    };\n  }\n  ngOnInit() {\n    const slideId = this.route.snapshot.params['id'];\n    if (slideId) {\n      this.loadSlide();\n    }\n  }\n  onFileChange(event, fileType) {\n    const file = event.target.files[0];\n    if (fileType === 'photo') {\n      this.slide.photo = file;\n    }\n  }\n  editSlide() {\n    // const id = Number(this.route.snapshot.paramMap.get('id'));\n    const formData = new FormData();\n    if (this.slide.photo) {\n      formData.append('Photo', this.slide.photo);\n    }\n    this.slideService.updateSlide(this.slide.id, formData).subscribe({\n      next: response => {\n        this.slide = response;\n        this.router.navigate(['/admin/slide/slide-list']);\n      },\n      error: error => error.log(\"Fetch Error:\", error)\n    });\n  }\n  loadSlide() {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    if (id) {\n      this.slideService.getSlideById(id).subscribe({\n        next: response => {\n          console.log('API Response:', response); // Konsola yazdırın\n          this.slide = response;\n        },\n        error: error => {\n          console.error('Error loading slide details:', error);\n        }\n      });\n    }\n  }\n  static {\n    this.ɵfac = function SlideEditComponent_Factory(t) {\n      return new (t || SlideEditComponent)(i0.ɵɵdirectiveInject(i1.SlideService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SlideEditComponent,\n      selectors: [[\"app-slide-edit\"]],\n      decls: 20,\n      vars: 2,\n      consts: [[1, \"container\", \"mt-5\"], [1, \"mb-4\"], [3, \"ngSubmit\"], [1, \"my-2\"], [\"alt\", \"Book Photo\", \"class\", \"img-thumbnail my-2\", \"style\", \"max-width: 200px;\", 3, \"src\", 4, \"ngIf\"], [1, \"w-100\"], [\"for\", \"photo\", 1, \"form-label\"], [\"id\", \"photo\", \"type\", \"file\", \"placeholder\", \"Choose a photo file\", 1, \"form-control\", 3, \"change\"], [1, \"mb-3\"], [\"class\", \"mx-2\", \"target\", \"_blank\", 3, \"href\", 4, \"ngIf\"], [\"for\", \"document\", 1, \"form-label\"], [\"id\", \"document\", \"type\", \"file\", \"placeholder\", \"Choose a document file\", 1, \"form-control\", 3, \"change\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"alt\", \"Book Photo\", 1, \"img-thumbnail\", \"my-2\", 2, \"max-width\", \"200px\", 3, \"src\"], [\"target\", \"_blank\", 1, \"mx-2\", 3, \"href\"]],\n      template: function SlideEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n          i0.ɵɵtext(2, \"Edit Book\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function SlideEditComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.updateBook();\n          });\n          i0.ɵɵelementStart(4, \"div\", 3);\n          i0.ɵɵtemplate(5, SlideEditComponent_img_5_Template, 1, 1, \"img\", 4);\n          i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n          i0.ɵɵtext(8, \"Photo\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"input\", 7);\n          i0.ɵɵlistener(\"change\", function SlideEditComponent_Template_input_change_9_listener($event) {\n            return ctx.onFileChange($event, \"photo\");\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(10, \"div\", 8)(11, \"label\");\n          i0.ɵɵtext(12, \"Current Document:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(13, SlideEditComponent_a_13_Template, 2, 1, \"a\", 9);\n          i0.ɵɵelementStart(14, \"div\", 3)(15, \"label\", 10);\n          i0.ɵɵtext(16, \"Document\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"input\", 11);\n          i0.ɵɵlistener(\"change\", function SlideEditComponent_Template_input_change_17_listener($event) {\n            return ctx.onFileChange($event, \"document\");\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(18, \"button\", 12);\n          i0.ɵɵtext(19, \"Update Book\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.book.photo);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.book.document);\n        }\n      },\n      dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","ctx_r0","book","photo","ɵɵsanitizeUrl","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r1","document","SlideEditComponent","constructor","slideService","route","router","slide","id","ngOnInit","slideId","snapshot","params","loadSlide","onFileChange","event","fileType","file","target","files","editSlide","formData","FormData","append","updateSlide","subscribe","next","response","navigate","error","log","Number","paramMap","get","getSlideById","console","ɵɵdirectiveInject","i1","SlideService","i2","ActivatedRoute","Router","selectors","decls","vars","consts","template","SlideEditComponent_Template","rf","ctx","ɵɵlistener","SlideEditComponent_Template_form_ngSubmit_3_listener","updateBook","ɵɵtemplate","SlideEditComponent_img_5_Template","SlideEditComponent_Template_input_change_9_listener","$event","SlideEditComponent_a_13_Template","SlideEditComponent_Template_input_change_17_listener","ɵɵadvance"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\slide\\slide-edit\\slide-edit.component.ts","D:\\MMU\\Frontend\\client\\src\\app\\admin\\slide\\slide-edit\\slide-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SlideService } from '../slide.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-slide-edit',\n  templateUrl: './slide-edit.component.html',\n  styleUrls: ['./slide-edit.component.scss']\n})\nexport class SlideEditComponent implements OnInit {\n  slide: any = {\n    id: 0,\n    photo: null\n  }\n  constructor(private slideService: SlideService, private route: ActivatedRoute, private router: Router){}\n  ngOnInit(): void {\n    const slideId = this.route.snapshot.params['id'];\n    if (slideId) {\n      this.loadSlide();\n    }\n  }\n  \n  onFileChange(event: any, fileType: 'photo' ) {\n    const file = event.target.files[0];\n    if (fileType === 'photo') {\n      this.slide.photo = file;\n    } \n  }\n  editSlide(): void {\n    // const id = Number(this.route.snapshot.paramMap.get('id'));\n    const formData = new FormData();\n    if (this.slide.photo) {\n      formData.append('Photo', this.slide.photo);\n    }\n    this.slideService.updateSlide(this.slide.id , formData).subscribe({\n      next:(response: any) => {\n        this.slide = response;\n        this.router.navigate(['/admin/slide/slide-list']);\n\n      },\n      error: (error) => error.log(\"Fetch Error:\", error)\n    });\n  }\n  loadSlide() : void {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    if(id){\n      this.slideService.getSlideById(id).subscribe({\n        next: (response) => {\n          console.log('API Response:', response); // Konsola yazdırın\n          this.slide = response;\n         \n        },\n        error: (error) =>{\n          console.error('Error loading slide details:', error);\n        }\n      });\n    }\n  }\n\n}\n","<div class=\"container mt-5\">\n  <h2 class=\"mb-4\">Edit Book</h2>\n  <form (ngSubmit)=\"updateBook()\">\n    \n    <div class=\"my-2\">\n      <img *ngIf=\"book.photo\" [src]=\"book.photo\" alt=\"Book Photo\" class=\"img-thumbnail my-2\" style=\"max-width: 200px;\" />\n      <div class=\"w-100\">\n        <label for=\"photo\" class=\"form-label\">Photo</label>\n        <input\n          id=\"photo\"\n          type=\"file\"\n          class=\"form-control\"\n          (change)=\"onFileChange($event, 'photo')\"\n          placeholder=\"Choose a photo file\"\n        />\n      </div>\n      \n    </div>\n    <div class=\"mb-3\">\n      <label>Current Document:</label>\n      <a class=\"mx-2\" *ngIf=\"book.document\" [href]=\"book.document\" target=\"_blank\">View Document</a>\n          \n      <div class=\"my-2\">\n        <label for=\"document\" class=\"form-label\">Document</label>\n        <input\n          id=\"document\"\n          type=\"file\"\n          class=\"form-control\"\n          (change)=\"onFileChange($event, 'document')\"\n          placeholder=\"Choose a document file\"\n        />\n      </div>\n    </div>\n    \n    <button type=\"submit\" class=\"btn btn-primary\">Update Book</button>\n  </form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}