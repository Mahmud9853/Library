{"ast":null,"code":"import { map } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CategoryService {\n  constructor(http) {\n    this.http = http;\n    this.category = [];\n    this.baseUrl = environment.apiUrl;\n  }\n  getCategories() {\n    return this.http.get(this.baseUrl + 'Category').pipe(map(response => response.$values) // $values içindeki verileri alın\n    );\n  }\n\n  addCategory(category) {\n    return this.http.post(this.baseUrl + 'Category/create', category);\n  }\n  deleteType(id) {\n    return this.http.delete(`${this.baseUrl}Category/${id}`, {\n      responseType: 'text'\n    });\n  }\n  updateType(id, category) {\n    return this.http.put(`${this.baseUrl + 'Category/update'}/${id}`, category, {\n      responseType: 'text'\n    });\n  }\n  getTypeById(id) {\n    return this.http.get(`${this.baseUrl + 'Category'}/${id}`);\n  }\n  static {\n    this.ɵfac = function CategoryService_Factory(t) {\n      return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CategoryService,\n      factory: CategoryService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["map","environment","CategoryService","constructor","http","category","baseUrl","apiUrl","getCategories","get","pipe","response","$values","addCategory","post","deleteType","id","delete","responseType","updateType","put","getTypeById","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\category\\category.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, Observable } from 'rxjs';\nimport { Category } from 'src/app/shared/models/category';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n   category:  any[] = [];\n  private baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  getCategories(): Observable<any[]> {\n        return this.http.get<any>(this.baseUrl + 'Category').pipe(\n          map((response) => response.$values) // $values içindeki verileri alın\n        );\n      }\n    addCategory(category: any) :Observable<Category> {\n      return this.http.post<Category>(this.baseUrl + 'Category/create', category)\n    }\n  \n    deleteType(id:number): Observable<any>{\n      return this.http.delete<void>(`${this.baseUrl}Category/${id}`, {\n      responseType: 'text' as 'json'\n      });\n    }\n    updateType(id:number, category:any): Observable<Category>{\n       return this.http.put<Category>(`${this.baseUrl+ 'Category/update'}/${id}`, category, {\n        responseType: 'text' as 'json'\n       });\n       \n    }\n    getTypeById(id: number): Observable<Category>{\n        return this.http.get<Category>(`${this.baseUrl + 'Category'}/${id}`);\n    }\n}\n"],"mappings":"AAEA,SAASA,GAAG,QAAoB,MAAM;AAEtC,SAASC,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHvB,KAAAC,QAAQ,GAAW,EAAE;IACd,KAAAC,OAAO,GAAGL,WAAW,CAACM,MAAM;EAEI;EAExCC,aAAaA,CAAA;IACP,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAM,IAAI,CAACH,OAAO,GAAG,UAAU,CAAC,CAACI,IAAI,CACvDV,GAAG,CAAEW,QAAQ,IAAKA,QAAQ,CAACC,OAAO,CAAC,CAAC;KACrC;EACH;;EACFC,WAAWA,CAACR,QAAa;IACvB,OAAO,IAAI,CAACD,IAAI,CAACU,IAAI,CAAW,IAAI,CAACR,OAAO,GAAG,iBAAiB,EAAED,QAAQ,CAAC;EAC7E;EAEAU,UAAUA,CAACC,EAAS;IAClB,OAAO,IAAI,CAACZ,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACX,OAAO,YAAYU,EAAE,EAAE,EAAE;MAC/DE,YAAY,EAAE;KACb,CAAC;EACJ;EACAC,UAAUA,CAACH,EAAS,EAAEX,QAAY;IAC/B,OAAO,IAAI,CAACD,IAAI,CAACgB,GAAG,CAAW,GAAG,IAAI,CAACd,OAAO,GAAE,iBAAiB,IAAIU,EAAE,EAAE,EAAEX,QAAQ,EAAE;MACpFa,YAAY,EAAE;KACd,CAAC;EAEL;EACAG,WAAWA,CAACL,EAAU;IAClB,OAAO,IAAI,CAACZ,IAAI,CAACK,GAAG,CAAW,GAAG,IAAI,CAACH,OAAO,GAAG,UAAU,IAAIU,EAAE,EAAE,CAAC;EACxE;;;uBA5BSd,eAAe,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAfvB,eAAe;MAAAwB,OAAA,EAAfxB,eAAe,CAAAyB,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}