{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let TypeAddComponent = class TypeAddComponent {\n  constructor(typeService, router, accountService) {\n    this.typeService = typeService;\n    this.router = router;\n    this.type = {\n      name: ''\n    };\n    this.role = null;\n    this.role = this.accountService.getRole();\n  }\n  ngOnInit() {}\n  addType() {\n    if (this.role !== 'Admin') {\n      console.error('Erişim reddedildi: Sadece Admin silebilir.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('name', this.type.name);\n    this.typeService.addType(formData).subscribe({\n      next: response => {\n        console.log('Type added successfully:', response);\n        this.router.navigate(['/admin/type/type-list']); // Başarılı ekleme sonrası yönlendirme\n      },\n\n      error: err => {\n        console.error('Error adding type:', err);\n      }\n    });\n  }\n};\nTypeAddComponent = __decorate([Component({\n  selector: 'app-type-add',\n  templateUrl: './type-add.component.html',\n  styleUrls: ['./type-add.component.scss']\n})], TypeAddComponent);","map":{"version":3,"names":["Component","TypeAddComponent","constructor","typeService","router","accountService","type","name","role","getRole","ngOnInit","addType","console","error","formData","FormData","append","subscribe","next","response","log","navigate","err","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\type\\type-add\\type-add.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TypeService } from '../type.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-type-add',\n  templateUrl: './type-add.component.html',\n  styleUrls: ['./type-add.component.scss']\n})\nexport class TypeAddComponent implements OnInit {\n  type: any = {\n    name:'',\n  };\n  role: string | null = null;\n  constructor(private typeService: TypeService,  private router: Router,accountService: AccountService){\n    this.role = this.accountService.getRole();\n  }\n  ngOnInit(): void {\n    \n  }\n  addType(): void{\n    if (this.role !== 'Admin') {\n      console.error('Erişim reddedildi: Sadece Admin silebilir.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('name', this.type.name);\n    this.typeService.addType(formData).subscribe({\n      next:(response) => {\n        console.log('Type added successfully:', response);\n        this.router.navigate(['/admin/type/type-list']); // Başarılı ekleme sonrası yönlendirme\n      },\n      error: (err) => {\n        console.error('Error adding type:', err);\n      }\n    })\n  }\n\n \n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAK3BC,YAAoBC,WAAwB,EAAWC,MAAc,EAACC,cAA8B;IAAhF,KAAAF,WAAW,GAAXA,WAAW;IAAwB,KAAAC,MAAM,GAANA,MAAM;IAJ7D,KAAAE,IAAI,GAAQ;MACVC,IAAI,EAAC;KACN;IACD,KAAAC,IAAI,GAAkB,IAAI;IAExB,IAAI,CAACA,IAAI,GAAG,IAAI,CAACH,cAAc,CAACI,OAAO,EAAE;EAC3C;EACAC,QAAQA,CAAA,GAER;EACAC,OAAOA,CAAA;IACL,IAAI,IAAI,CAACH,IAAI,KAAK,OAAO,EAAE;MACzBI,OAAO,CAACC,KAAK,CAAC,4CAA4C,CAAC;MAC3D;;IAEF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACV,IAAI,CAACC,IAAI,CAAC;IACvC,IAAI,CAACJ,WAAW,CAACQ,OAAO,CAACG,QAAQ,CAAC,CAACG,SAAS,CAAC;MAC3CC,IAAI,EAAEC,QAAQ,IAAI;QAChBP,OAAO,CAACQ,GAAG,CAAC,0BAA0B,EAAED,QAAQ,CAAC;QACjD,IAAI,CAACf,MAAM,CAACiB,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;MACnD,CAAC;;MACDR,KAAK,EAAGS,GAAG,IAAI;QACbV,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAES,GAAG,CAAC;MAC1C;KACD,CAAC;EACJ;CAID;AA/BYrB,gBAAgB,GAAAsB,UAAA,EAL5BvB,SAAS,CAAC;EACTwB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWzB,gBAAgB,CA+B5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}