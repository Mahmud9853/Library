{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let TypeEditComponent = class TypeEditComponent {\n  constructor(typeService, router, route) {\n    this.typeService = typeService;\n    this.router = router;\n    this.route = route;\n    this.type = {\n      id: 0,\n      name: ''\n    };\n  }\n  ngOnInit() {\n    const typeId = this.route.snapshot.params['id'];\n    if (typeId) {\n      this.loadType();\n    }\n  }\n  loadType() {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    if (id) {\n      this.typeService.getTypeById(id).subscribe({\n        next: response => {\n          console.log('API Response:', response);\n          this.type = response;\n        },\n        error: error => {\n          console.error('Error loading type details:', error);\n        }\n      });\n    }\n  }\n  updateType() {\n    const formData = new FormData();\n    formData.append('name', this.type.name);\n    this.typeService.updateType(this.type.id, formData).subscribe({\n      next: response => {\n        console.log('Type updated successfully:', response);\n        // Backend'den dönen güncellenmiş veriyi atayın\n        this.type = response;\n        this.router.navigate(['/admin/type/type-list']); // Başarılı güncelleme sonrası yönlendirme\n      },\n\n      error: error => {\n        console.error('Error updating type:', error);\n      }\n    });\n  }\n};\nTypeEditComponent = __decorate([Component({\n  selector: 'app-author-edit',\n  templateUrl: './author-edit.component.html',\n  styleUrls: ['./author-edit.component.scss']\n})], TypeEditComponent);","map":{"version":3,"names":["Component","TypeEditComponent","constructor","typeService","router","route","type","id","name","ngOnInit","typeId","snapshot","params","loadType","Number","paramMap","get","getTypeById","subscribe","next","response","console","log","error","updateType","formData","FormData","append","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\author\\author-edit\\author-edit.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-author-edit',\n  templateUrl: './author-edit.component.html',\n  styleUrls: ['./author-edit.component.scss']\n})\nexport class TypeEditComponent implements OnInit {\n  type: any = {\n    id: 0,\n    name:'',\n  };\n  \n  constructor(private typeService: TypeService, private router: Router, private route: ActivatedRoute){}\n\n  ngOnInit(): void {\n\n    const typeId = this.route.snapshot.params['id'];\n    if (typeId) {\n      this.loadType();\n    }\n  }\n  loadType() {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    if (id) {\n      this.typeService.getTypeById(id).subscribe({\n        next: (response: any) => {\n          console.log('API Response:', response);\n          this.type = response;\n        },\n        error: (error) => {\n          console.error('Error loading type details:', error);\n        }\n      });\n    }\n  }\n\n  updateType() {\n    const formData = new FormData();\n    formData.append('name', this.type.name);\n  \n    this.typeService.updateType(this.type.id, formData).subscribe({\n      next: (response: any) => {\n        console.log('Type updated successfully:', response);\n        // Backend'den dönen güncellenmiş veriyi atayın\n        this.type = response;\n        this.router.navigate(['/admin/type/type-list']); // Başarılı güncelleme sonrası yönlendirme\n      },\n      error: (error) => {\n        console.error('Error updating type:', error);\n      }\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAM5BC,YAAoBC,WAAwB,EAAUC,MAAc,EAAUC,KAAqB;IAA/E,KAAAF,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;IALnF,KAAAC,IAAI,GAAQ;MACVC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAC;KACN;EAEoG;EAErGC,QAAQA,CAAA;IAEN,MAAMC,MAAM,GAAG,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IAC/C,IAAIF,MAAM,EAAE;MACV,IAAI,CAACG,QAAQ,EAAE;;EAEnB;EACAA,QAAQA,CAAA;IACN,MAAMN,EAAE,GAAGO,MAAM,CAAC,IAAI,CAACT,KAAK,CAACM,QAAQ,CAACI,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IACzD,IAAIT,EAAE,EAAE;MACN,IAAI,CAACJ,WAAW,CAACc,WAAW,CAACV,EAAE,CAAC,CAACW,SAAS,CAAC;QACzCC,IAAI,EAAGC,QAAa,IAAI;UACtBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,QAAQ,CAAC;UACtC,IAAI,CAACd,IAAI,GAAGc,QAAQ;QACtB,CAAC;QACDG,KAAK,EAAGA,KAAK,IAAI;UACfF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACrD;OACD,CAAC;;EAEN;EAEAC,UAAUA,CAAA;IACR,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACrB,IAAI,CAACE,IAAI,CAAC;IAEvC,IAAI,CAACL,WAAW,CAACqB,UAAU,CAAC,IAAI,CAAClB,IAAI,CAACC,EAAE,EAAEkB,QAAQ,CAAC,CAACP,SAAS,CAAC;MAC5DC,IAAI,EAAGC,QAAa,IAAI;QACtBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,QAAQ,CAAC;QACnD;QACA,IAAI,CAACd,IAAI,GAAGc,QAAQ;QACpB,IAAI,CAAChB,MAAM,CAACwB,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;MACnD,CAAC;;MACDL,KAAK,EAAGA,KAAK,IAAI;QACfF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;KACD,CAAC;EACJ;CACD;AA9CYtB,iBAAiB,GAAA4B,UAAA,EAL7B7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACW/B,iBAAiB,CA8C7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}