{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let BookAddComponent = class BookAddComponent {\n  constructor(bookService, typeService, authorService, route) {\n    this.bookService = bookService;\n    this.typeService = typeService;\n    this.authorService = authorService;\n    this.route = route;\n    this.types = [];\n    this.categories = [];\n    this.authors = [];\n    this.book = {\n      title: '',\n      description: '',\n      createBook: new Date().toISOString(),\n      photo: '',\n      document: '',\n      typeId: null,\n      authorId: null,\n      categoryId: null,\n      bookType: undefined,\n      bookAuthor: undefined,\n      bookCategory: undefined\n    };\n  }\n  ngOnInit() {\n    this.loadTypes();\n    this.loadCategories();\n    this.loadAuthors();\n    this.addBook();\n  }\n  loadTypes() {\n    this.bookService.getTypes().subscribe({\n      next: response => {\n        console.log('API Response type:', response);\n        this.types = response;\n      },\n      error: error => console.log('Error fetching books:', error)\n    });\n  }\n  loadAuthors() {\n    this.bookService.getAuthors().subscribe({\n      next: response => {\n        console.log('API Response author:', response);\n        this.authors = response;\n      },\n      error: error => console.log('Error fetching books:', error)\n    });\n  }\n  loadCategories() {\n    this.bookService.getCategories().subscribe({\n      next: response => {\n        console.log('API Response category:', response);\n        this.categories = response;\n      },\n      error: error => console.log('Error fetching books:', error)\n    });\n  }\n  addBook() {\n    if (!this.book.title || !this.book.typeId || !this.book.categoryId || !this.book.authorId) {\n      alert('Bütün sahələri doldurmaq tələb olunur!');\n      return;\n    }\n    // Eğer document boşsa, uyarı göster\n    if (!this.book.document) {\n      alert('Lütfen bir belge yükleyin!');\n      return;\n    }\n    this.bookService.addBook(this.book).subscribe({\n      next: response => {\n        alert('Kitap başarıyla eklendi!');\n        console.log('Kitap eklendi:', response);\n        this.resetForm();\n      },\n      error: error => {\n        console.error('Kitap eklerken hata oluştu:', error);\n      }\n    });\n  }\n  onFileSelected(event, field) {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        if (field === 'photo') {\n          this.book.photo = reader.result;\n        } else if (field === 'document') {\n          this.book.document = reader.result;\n        }\n      };\n      reader.readAsDataURL(file); // Dosyayı base64 formatında okur.\n    } else {\n      if (field === 'document') {\n        this.book.document = ''; // Dosya seçilmezse boş bırakılmalı\n      }\n    }\n  }\n\n  resetForm() {\n    this.book = {\n      title: '',\n      description: '',\n      createBook: new Date().toISOString(),\n      photo: '',\n      document: '',\n      typeId: null,\n      authorId: null,\n      categoryId: null,\n      bookType: undefined,\n      bookAuthor: undefined,\n      bookCategory: undefined\n    };\n  }\n};\nBookAddComponent = __decorate([Component({\n  selector: 'app-book-add',\n  templateUrl: './book-add.component.html',\n  styleUrls: ['./book-add.component.scss']\n})], BookAddComponent);","map":{"version":3,"names":["Component","BookAddComponent","constructor","bookService","typeService","authorService","route","types","categories","authors","book","title","description","createBook","Date","toISOString","photo","document","typeId","authorId","categoryId","bookType","undefined","bookAuthor","bookCategory","ngOnInit","loadTypes","loadCategories","loadAuthors","addBook","getTypes","subscribe","next","response","console","log","error","getAuthors","getCategories","alert","resetForm","onFileSelected","event","field","file","target","files","reader","FileReader","onload","result","readAsDataURL","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\book\\book-add\\book-add.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BookService } from '../book.service';\nimport { TypeService } from '../../type/type.service';\nimport { AuthorService } from '../../author/author.service';\nimport { Book } from 'src/app/shared/models/book';\n\n@Component({\n  selector: 'app-book-add',\n  templateUrl: './book-add.component.html',\n  styleUrls: ['./book-add.component.scss']\n})\nexport class BookAddComponent implements OnInit{\n  types: any[] = [];\n  categories: any[] = [];\n  authors: any[] = [];\n  book: any = {\n    title: '',\n    description: '',\n    createBook: new Date().toISOString(),\n    photo: '',\n    document: '',\n    typeId: null,\n    authorId: null,\n    categoryId: null,\n    bookType: undefined,\n    bookAuthor: undefined,\n    bookCategory: undefined,\n  };\n  constructor(private bookService: BookService, private typeService: TypeService,private authorService: AuthorService, private route :ActivatedRoute){}\n\n  ngOnInit(): void {\n    this.loadTypes();\n    this.loadCategories();\n    this.loadAuthors();\n    this.addBook();\n  }\n\n    loadTypes() {\n      this.bookService.getTypes().subscribe({\n       next: (response: any) => {\n          console.log('API Response type:', response);\n            this.types = response;\n        },\n          error: error => console.log('Error fetching books:', error)\n        })\n    }\n    loadAuthors() {\n      this.bookService.getAuthors().subscribe({\n       next: (response: any) => {\n          console.log('API Response author:', response);\n            this.authors = response;\n        },\n          error: error => console.log('Error fetching books:', error)\n        })\n    }\n    loadCategories() {\n      this.bookService.getCategories().subscribe({\n        next: ( response : any) => {\n          console.log('API Response category:', response);\n          this.categories = response;\n        },\n        error: error=> console.log('Error fetching books:', error)\n        \n      })\n    }\n\n    addBook() {\n      if (!this.book.title || !this.book.typeId || !this.book.categoryId || !this.book.authorId) {\n        alert('Bütün sahələri doldurmaq tələb olunur!');\n        return;\n      }\n    \n      // Eğer document boşsa, uyarı göster\n      if (!this.book.document) {\n        alert('Lütfen bir belge yükleyin!');\n        return;\n      }\n    \n      this.bookService.addBook(this.book).subscribe({\n        next: (response: any) => {\n          alert('Kitap başarıyla eklendi!');\n          console.log('Kitap eklendi:', response);\n          this.resetForm();\n        },\n        error: (error: any) => {\n          console.error('Kitap eklerken hata oluştu:', error);\n        }\n      });\n    }\n    \n\n    onFileSelected(event: any, field: 'photo' | 'document') {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          if (field === 'photo') {\n            this.book.photo = reader.result as string;\n          } else if (field === 'document') {\n            this.book.document = reader.result as string;\n          }\n        };\n        reader.readAsDataURL(file); // Dosyayı base64 formatında okur.\n      } else {\n        if (field === 'document') {\n          this.book.document = ''; // Dosya seçilmezse boş bırakılmalı\n        }\n      }\n    }\n\n  \n    resetForm() {\n      this.book = {\n        title: '',\n        description: '',\n        createBook: new Date().toISOString(),\n        photo: '',\n        document: '', // Boş bırakılmalı\n        typeId: null,\n        authorId: null,\n        categoryId: null,\n        bookType: undefined,\n        bookAuthor: undefined,\n        bookCategory: undefined,\n      };\n    }\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}