{"ast":null,"code":"import { map } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthorService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.apiUrl;\n  }\n  getAuthors() {\n    return this.http.get(this.baseUrl + 'Author').pipe(map(response => response.$values) // $values içindeki verileri alın\n    );\n  }\n\n  addAuthor(type) {\n    return this.http.post(this.baseUrl + 'Type/create', type);\n  }\n  deleteAuthor(id) {\n    return this.http.delete(`${this.baseUrl}Type/${id}`, {\n      responseType: 'text'\n    });\n  }\n  updateAuthor(id, type) {\n    return this.http.put(`${this.baseUrl + 'Type/update'}/${id}`, type, {\n      responseType: 'text'\n    });\n  }\n  getAuthorById(id) {\n    return this.http.get(`${this.baseUrl + 'Author'}/${id}`);\n  }\n  static {\n    this.ɵfac = function AuthorService_Factory(t) {\n      return new (t || AuthorService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthorService,\n      factory: AuthorService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["map","environment","AuthorService","constructor","http","baseUrl","apiUrl","getAuthors","get","pipe","response","$values","addAuthor","type","post","deleteAuthor","id","delete","responseType","updateAuthor","put","getAuthorById","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\author\\author.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, Observable } from 'rxjs';\nimport { Author } from 'src/app/shared/models/author';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorService {\n  private baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getAuthors(): Observable<Author[]> {\n      return this.http.get<any>(this.baseUrl + 'Author').pipe(\n        map((response) => response.$values) // $values içindeki verileri alın\n      );\n    }\n\n      addAuthor(type: any) :Observable<Type> {\n        return this.http.post<Type>(this.baseUrl + 'Type/create', type)\n      }\n    \n      deleteAuthor(id:number): Observable<any>{\n        return this.http.delete<void>(`${this.baseUrl}Type/${id}`, {\n        responseType: 'text' as 'json'\n        });\n      }\n      updateAuthor(id:number, type:any): Observable<Type>{\n         return this.http.put<Type>(`${this.baseUrl+ 'Type/update'}/${id}`, type, {\n          responseType: 'text' as 'json'\n         });\n         \n      }\n    \n      getAuthorById(id: number): Observable<Author>{\n          return this.http.get<Author>(`${this.baseUrl + 'Author'}/${id}`);\n      }\n}"],"mappings":"AAEA,SAASA,GAAG,QAAoB,MAAM;AAEtC,SAASC,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAGJ,WAAW,CAACK,MAAM;EAEG;EAEvCC,UAAUA,CAAA;IACN,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAM,IAAI,CAACH,OAAO,GAAG,QAAQ,CAAC,CAACI,IAAI,CACrDT,GAAG,CAAEU,QAAQ,IAAKA,QAAQ,CAACC,OAAO,CAAC,CAAC;KACrC;EACH;;EAEEC,SAASA,CAACC,IAAS;IACjB,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAO,IAAI,CAACT,OAAO,GAAG,aAAa,EAAEQ,IAAI,CAAC;EACjE;EAEAE,YAAYA,CAACC,EAAS;IACpB,OAAO,IAAI,CAACZ,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACZ,OAAO,QAAQW,EAAE,EAAE,EAAE;MAC3DE,YAAY,EAAE;KACb,CAAC;EACJ;EACAC,YAAYA,CAACH,EAAS,EAAEH,IAAQ;IAC7B,OAAO,IAAI,CAACT,IAAI,CAACgB,GAAG,CAAO,GAAG,IAAI,CAACf,OAAO,GAAE,aAAa,IAAIW,EAAE,EAAE,EAAEH,IAAI,EAAE;MACxEK,YAAY,EAAE;KACd,CAAC;EAEL;EAEAG,aAAaA,CAACL,EAAU;IACpB,OAAO,IAAI,CAACZ,IAAI,CAACI,GAAG,CAAS,GAAG,IAAI,CAACH,OAAO,GAAG,QAAQ,IAAIW,EAAE,EAAE,CAAC;EACpE;;;uBA7BOd,aAAa,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAbvB,aAAa;MAAAwB,OAAA,EAAbxB,aAAa,CAAAyB,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}