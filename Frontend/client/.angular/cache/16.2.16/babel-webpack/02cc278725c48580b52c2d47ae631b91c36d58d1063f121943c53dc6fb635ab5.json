{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nexport let AuthGuard = class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(next, state) {\n    if (this.authService.isLoggedIn()) {\n      return true; // Eğer giriş yapmışsa, sayfaya gitmesine izin ver\n    } else {\n      this.router.navigate(['/login']); // Giriş yapmamışsa login sayfasına yönlendir\n      return false;\n    }\n  }\n};\nAuthGuard = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthGuard);","map":{"version":3,"names":["Injectable","AuthGuard","constructor","authService","router","canActivate","next","state","isLoggedIn","navigate","__decorate","providedIn"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\core\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if (this.authService.isLoggedIn()) {\n      return true; // Eğer giriş yapmışsa, sayfaya gitmesine izin ver\n    } else {\n      this.router.navigate(['/login']); // Giriş yapmamışsa login sayfasına yönlendir\n      return false;\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAOnC,WAAMC,SAAS,GAAf,MAAMA,SAAS;EAEpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,WAAWA,CAACC,IAA4B,EAAEC,KAA0B;IAClE,IAAI,IAAI,CAACJ,WAAW,CAACK,UAAU,EAAE,EAAE;MACjC,OAAO,IAAI,CAAC,CAAC;KACd,MAAM;MACL,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;MAClC,OAAO,KAAK;;EAEhB;CACD;AAZYR,SAAS,GAAAS,UAAA,EAHrBV,UAAU,CAAC;EACVW,UAAU,EAAE;CACb,CAAC,C,EACWV,SAAS,CAYrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}