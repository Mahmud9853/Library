{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let HomeEditComponent = class HomeEditComponent {\n  constructor(fb, homeService, route, router) {\n    this.fb = fb;\n    this.homeService = homeService;\n    this.route = route;\n    this.router = router;\n    this.selectedFiles = [];\n    this.homePhotos = [];\n    this.photosToDelete = []; // Silinecek fotoğraf ID'lerini tutan dizi\n    this.updateForm = this.fb.group({\n      title: [''],\n      description: ['']\n    });\n    this.homeId = this.route.snapshot.params['id'];\n  }\n  ngOnInit() {\n    this.loadHomeDetails();\n  }\n  loadHomeDetails() {\n    this.homeService.gethomeById(this.homeId).subscribe({\n      next: home => {\n        console.log('Home Details:', home);\n        // Formu güncelle\n        this.updateForm.patchValue({\n          title: home.title,\n          description: home.description\n        });\n        // Fotoğrafları al ve homePhotos dizisine ata\n        if (home.photo?.$values && home.photo.$values.length > 0) {\n          console.log('Home Photos:', home.photo.$values);\n          // homePhotos içindeki fotoğraf URL'lerini almak ve tüm HomePhotos alanlarını sağlamak\n          this.homePhotos = home.photo.$values.map((url, index) => ({\n            id: index + 1,\n            homeId: this.homeId,\n            home: home,\n            photo: url.startsWith('http://') ? url.replace('http://', 'https://') : url\n          }));\n        } else {\n          this.homePhotos = [];\n          console.log('No home photos available.');\n        }\n      },\n      error: err => {\n        console.error('Error fetching home details:', err);\n        alert('An error occurred while loading the home details.');\n      }\n    });\n  }\n  onFileSelected(event) {\n    this.selectedFiles = Array.from(event.target.files);\n  }\n  deletePhoto(id) {\n    // Fotoğrafı sunucudan silmek için servisi çağırıyoruz\n    this.homeService.deletePhoto(id).subscribe({\n      next: response => {\n        console.log('Photo deleted successfully:', response);\n        alert('Photo deleted successfully!');\n        // Fotoğrafı homePhotos dizisinden çıkarın\n        this.homePhotos = this.homePhotos.filter(photo => photo.id !== id);\n      },\n      error: err => {\n        console.error('Error deleting photo:', err);\n        alert('An error occurred while deleting the photo.');\n      }\n    });\n  }\n  onSubmit() {\n    const formData = new FormData();\n    formData.append('title', this.updateForm.get('title')?.value || '');\n    formData.append('description', this.updateForm.get('description')?.value || '');\n    // Silinen fotoğrafları formData'ya ekleyin\n    formData.append('photosToDelete', JSON.stringify(this.photosToDelete));\n    // Yeni fotoğrafları ekleyin\n    for (const file of this.selectedFiles) {\n      formData.append('photos', file);\n    }\n    this.homeService.updateHome(this.homeId, formData).subscribe({\n      next: response => {\n        console.log('Update response:', response);\n        alert('Home updated successfully!');\n        this.router.navigate(['/admin/home/home-list']);\n      },\n      error: err => {\n        console.error('Error updating home:', err);\n        alert('An error occurred while updating the home.');\n      }\n    });\n  }\n};\nHomeEditComponent = __decorate([Component({\n  selector: 'app-home-edit',\n  templateUrl: './home-edit.component.html',\n  styleUrls: ['./home-edit.component.scss']\n})], HomeEditComponent);","map":{"version":3,"names":["Component","HomeEditComponent","constructor","fb","homeService","route","router","selectedFiles","homePhotos","photosToDelete","updateForm","group","title","description","homeId","snapshot","params","ngOnInit","loadHomeDetails","gethomeById","subscribe","next","home","console","log","patchValue","photo","$values","length","map","url","index","id","startsWith","replace","error","err","alert","onFileSelected","event","Array","from","target","files","deletePhoto","response","filter","onSubmit","formData","FormData","append","get","value","JSON","stringify","file","updateHome","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\home\\home-edit\\home-edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HomeService } from '../home.service';\nimport { Home } from 'src/app/shared/models/home';\nimport { HomePhotos } from 'src/app/shared/models/homePhotos';\n\n@Component({\n  selector: 'app-home-edit',\n  templateUrl: './home-edit.component.html',\n  styleUrls: ['./home-edit.component.scss']\n})\nexport class HomeEditComponent implements OnInit {\n  updateForm: FormGroup;\n  selectedFiles: File[] = [];\n  homeId!: number;\n  home: Home | undefined;\n  homePhotos: HomePhotos[] = [];\n  photosToDelete: number[] = []; // Silinecek fotoğraf ID'lerini tutan dizi\n\n  constructor(\n    private fb: FormBuilder,\n    private homeService: HomeService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.updateForm = this.fb.group({\n      title: [''],\n      description: [''],\n    });\n\n    this.homeId = this.route.snapshot.params['id'];\n  }\n\n  ngOnInit(): void {\n    this.loadHomeDetails();\n  }\n\n  loadHomeDetails(): void {\n    this.homeService.gethomeById(this.homeId).subscribe({\n      next: (home: Home) => {\n        console.log('Home Details:', home);\n\n        // Formu güncelle\n        this.updateForm.patchValue({\n          title: home.title,\n          description: home.description,\n        });\n\n        // Fotoğrafları al ve homePhotos dizisine ata\n        if (home.photo?.$values && home.photo.$values.length > 0) {\n          console.log('Home Photos:', home.photo.$values);\n\n          // homePhotos içindeki fotoğraf URL'lerini almak ve tüm HomePhotos alanlarını sağlamak\n          this.homePhotos = home.photo.$values.map((url: string, index: number) => ({\n            id: index + 1,          // id oluşturma\n            homeId: this.homeId,    // homeId'yi buradan alıyoruz\n            home: home,             // home objesini taşıyoruz\n            photo: url.startsWith('http://') ? url.replace('http://', 'https://') : url\n          }));\n        } else {\n          this.homePhotos = [];\n          console.log('No home photos available.');\n        }\n      },\n      error: (err) => {\n        console.error('Error fetching home details:', err);\n        alert('An error occurred while loading the home details.');\n      }\n    });\n  }\n\n  onFileSelected(event: any): void {\n    this.selectedFiles = Array.from(event.target.files);\n  }\n\n  deletePhoto(id: number): void {\n    // Fotoğrafı sunucudan silmek için servisi çağırıyoruz\n    this.homeService.deletePhoto(id).subscribe({\n      next: (response) => {\n        console.log('Photo deleted successfully:', response);\n        alert('Photo deleted successfully!');\n  \n        // Fotoğrafı homePhotos dizisinden çıkarın\n        this.homePhotos = this.homePhotos.filter(photo => photo.id !== id);\n      },\n      error: (err) => {\n        console.error('Error deleting photo:', err);\n        alert('An error occurred while deleting the photo.');\n      }\n    });\n  }\n  \n\n  onSubmit(): void {\n    const formData = new FormData();\n    formData.append('title', this.updateForm.get('title')?.value || '');\n    formData.append('description', this.updateForm.get('description')?.value || '');\n\n    // Silinen fotoğrafları formData'ya ekleyin\n    formData.append('photosToDelete', JSON.stringify(this.photosToDelete));\n\n    // Yeni fotoğrafları ekleyin\n    for (const file of this.selectedFiles) {\n      formData.append('photos', file);\n    }\n\n    this.homeService.updateHome(this.homeId, formData).subscribe({\n      next: (response) => {\n        console.log('Update response:', response);\n        alert('Home updated successfully!');\n        this.router.navigate(['/admin/home/home-list']);\n      },\n      error: (err) => {\n        console.error('Error updating home:', err);\n        alert('An error occurred while updating the home.');\n      }\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}