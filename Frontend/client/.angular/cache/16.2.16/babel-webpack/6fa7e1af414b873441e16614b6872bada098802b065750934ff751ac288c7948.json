{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../type.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/account/account.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction TypeAddComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \" Tipi bo\\u015F ola bilm\\u0259z. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class TypeAddComponent {\n  constructor(typeService, router, accountService) {\n    this.typeService = typeService;\n    this.router = router;\n    this.accountService = accountService;\n    this.type = {\n      name: ''\n    };\n    this.role = null;\n    this.role = this.accountService.getRole();\n  }\n  ngOnInit() {}\n  addType() {\n    if (this.role !== 'Admin') {\n      console.error('Erişim reddedildi: Sadece Admin silebilir.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('name', this.type.name);\n    this.typeService.addType(formData).subscribe({\n      next: response => {\n        console.log('Type added successfully:', response);\n        this.router.navigate(['/admin/type/type-list']); // Başarılı ekleme sonrası yönlendirme\n      },\n\n      error: err => {\n        console.error('Error adding type:', err);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function TypeAddComponent_Factory(t) {\n      return new (t || TypeAddComponent)(i0.ɵɵdirectiveInject(i1.TypeService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TypeAddComponent,\n      selectors: [[\"app-type-add\"]],\n      decls: 17,\n      vars: 3,\n      consts: [[1, \"container\", \"mt-1\"], [1, \"card\", \"shadow\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"text-center\", \"mb-0\"], [1, \"card-body\"], [3, \"ngSubmit\"], [\"typeForm\", \"ngForm\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"id\", \"name\", \"type\", \"text\", \"name\", \"name\", \"placeholder\", \"Enter book name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"title\", \"ngModel\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", 3, \"disabled\"], [1, \"text-danger\"]],\n      template: function TypeAddComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\", 3);\n          i0.ɵɵtext(4, \"Yeni Kitab Yarat\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"form\", 5, 6);\n          i0.ɵɵlistener(\"ngSubmit\", function TypeAddComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.addType();\n          });\n          i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n          i0.ɵɵtext(10, \"Tipi\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 9, 10);\n          i0.ɵɵlistener(\"ngModelChange\", function TypeAddComponent_Template_input_ngModelChange_11_listener($event) {\n            return ctx.type.name = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(13, TypeAddComponent_div_13_Template, 2, 0, \"div\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 12)(15, \"button\", 13);\n          i0.ɵɵtext(16, \" Add Type \");\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          const _r0 = i0.ɵɵreference(7);\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngModel\", ctx.type.name);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.type.typeName.touched && ctx.type.typeName.invalid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", _r0.invalid);\n        }\n      },\n      dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","TypeAddComponent","constructor","typeService","router","accountService","type","name","role","getRole","ngOnInit","addType","console","error","formData","FormData","append","subscribe","next","response","log","navigate","err","ɵɵdirectiveInject","i1","TypeService","i2","Router","i3","AccountService","selectors","decls","vars","consts","template","TypeAddComponent_Template","rf","ctx","ɵɵlistener","TypeAddComponent_Template_form_ngSubmit_6_listener","TypeAddComponent_Template_input_ngModelChange_11_listener","$event","ɵɵtemplate","TypeAddComponent_div_13_Template","ɵɵadvance","ɵɵproperty","typeName","touched","invalid","_r0"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\type\\type-add\\type-add.component.ts","D:\\MMU\\Frontend\\client\\src\\app\\admin\\type\\type-add\\type-add.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TypeService } from '../type.service';\nimport { Router } from '@angular/router';\nimport { AccountService } from 'src/app/account/account.service';\n\n@Component({\n  selector: 'app-type-add',\n  templateUrl: './type-add.component.html',\n  styleUrls: ['./type-add.component.scss']\n})\nexport class TypeAddComponent implements OnInit {\n  type: any = {\n    name:'',\n  };\n  role: string | null = null;\n  constructor(private typeService: TypeService,  private router: Router, private accountService: AccountService){\n    this.role = this.accountService.getRole();\n  }\n  ngOnInit(): void {\n    \n  }\n  addType(): void{\n    if (this.role !== 'Admin') {\n      console.error('Erişim reddedildi: Sadece Admin silebilir.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('name', this.type.name);\n    this.typeService.addType(formData).subscribe({\n      next:(response) => {\n        console.log('Type added successfully:', response);\n        this.router.navigate(['/admin/type/type-list']); // Başarılı ekleme sonrası yönlendirme\n      },\n      error: (err) => {\n        console.error('Error adding type:', err);\n      }\n    })\n  }\n\n \n\n}\n","<div class=\"container mt-1\" >\n    <div class=\"card shadow\">\n      <div class=\"card-header bg-primary text-white\">\n        <h2 class=\"text-center mb-0\">Yeni Kitab Yarat</h2>\n      </div>\n      <div class=\"card-body\">\n        <form (ngSubmit)=\"addType()\" #typeForm=\"ngForm\">\n          <div class=\"mb-3\">\n            <label for=\"name\" class=\"form-label\">Tipi</label>\n            <input\n              id=\"name\"\n              type=\"text\"\n              class=\"form-control\"\n              [(ngModel)]=\"type.name\"\n              name=\"name\"\n              placeholder=\"Enter book name\"\n              required\n              #title=\"ngModel\"\n            />\n            <div *ngIf=\"type.typeName.touched && type.typeName.invalid\" class=\"text-danger\">\n              Tipi boş ola bilməz.\n            </div>\n          </div>\n  \n          <div class=\"d-grid\">\n            <button type=\"submit\" class=\"btn btn-primary btn-block\" [disabled]=\"typeForm.invalid\">\n              Add Type\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}