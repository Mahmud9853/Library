{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../account.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction ResetpasswordComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\", 12);\n    i0.ɵɵtext(2, \"\\u0130stifad\\u0259\\u00E7i ad\\u0131 t\\u0259l\\u0259b olunur.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ResetpasswordComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\", 12);\n    i0.ɵɵtext(2, \" Yeni parol t\\u0259l\\u0259b olunur v\\u0259 \\u0259n az 6 simvoldan ibar\\u0259t olmal\\u0131d\\u0131r. \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ResetpasswordComponent_p_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.message);\n  }\n}\nexport let ResetpasswordComponent = /*#__PURE__*/(() => {\n  class ResetpasswordComponent {\n    constructor(fb, accountService, router) {\n      this.fb = fb;\n      this.accountService = accountService;\n      this.router = router;\n      this.message = '';\n      this.resetPasswordForm = this.fb.group({\n        userName: ['', Validators.required],\n        newPassword: ['', [Validators.required, Validators.minLength(6)]]\n      });\n    }\n    onSubmit() {\n      console.log(this.resetPasswordForm.valid); // Form geçerliliğini kontrol et\n      if (!this.resetPasswordForm.valid) {\n        // Form geçerli değilse işlem yapma\n        console.error('Form is invalid'); // Form geçerli değilse hata mesajı ver\n        return;\n      }\n      // Form verilerini al\n      const formData = {\n        userName: this.resetPasswordForm.get('userName')?.value,\n        newPassword: this.resetPasswordForm.get('newPassword')?.value\n      };\n      // Şifre sıfırlama işlemi\n      this.accountService.resetPassword(formData).subscribe({\n        next: response => {\n          console.log(response); // Burada response.message yerine sadece response olabilir\n          this.message = response; // Eğer response bir string mesajsa\n          this.router.navigate(['account/login']);\n        },\n        error: error => {\n          console.error('Backend Error: ', error); // Hata mesajını konsola yazdırın\n          this.message = error.error.message || 'Bir hata oluştu.';\n        }\n      });\n    }\n    static {\n      this.ɵfac = function ResetpasswordComponent_Factory(t) {\n        return new (t || ResetpasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ResetpasswordComponent,\n        selectors: [[\"app-resetpassword\"]],\n        decls: 19,\n        vars: 5,\n        consts: [[1, \"container\"], [1, \"row\"], [1, \"text-center\", \"my-3\"], [1, \"col-md-12\", \"justify-content-center\", 2, \"display\", \"flex\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"my-2\"], [\"for\", \"userName\", 1, \"my-2\"], [\"id\", \"userName\", \"formControlName\", \"userName\", \"placeholder\", \"\\u0130stifad\\u0259\\u00E7i ad\\u0131n\\u0131z\\u0131 daxil edin\", \"type\", \"text\", 1, \"form-control\", \"w-100\"], [4, \"ngIf\"], [\"for\", \"newPassword\", 1, \"my-2\"], [\"type\", \"password\", \"id\", \"newPassword\", \"placeholder\", \"Yeni parolu daxil edin\", \"formControlName\", \"newPassword\", 1, \"form-control\", \"w-100\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"text-danger\"]],\n        template: function ResetpasswordComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n            i0.ɵɵtext(3, \"Parolu yenil\\u0259\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"div\", 3)(5, \"form\", 4);\n            i0.ɵɵlistener(\"ngSubmit\", function ResetpasswordComponent_Template_form_ngSubmit_5_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n            i0.ɵɵtext(8, \"\\u0130stifad\\u0259\\u00E7i ad\\u0131\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(9, \"input\", 7);\n            i0.ɵɵtemplate(10, ResetpasswordComponent_div_10_Template, 3, 0, \"div\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 9);\n            i0.ɵɵtext(13, \"Yeni Parol\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(14, \"input\", 10);\n            i0.ɵɵtemplate(15, ResetpasswordComponent_div_15_Template, 3, 0, \"div\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(16, \"button\", 11);\n            i0.ɵɵtext(17, \"Yenil\\u0259 parolu\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(18, ResetpasswordComponent_p_18_Template, 2, 1, \"p\", 8);\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            let tmp_1_0;\n            let tmp_2_0;\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"formGroup\", ctx.resetPasswordForm);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.resetPasswordForm.get(\"userName\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.resetPasswordForm.get(\"userName\")) == null ? null : tmp_1_0.touched));\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.resetPasswordForm.get(\"newPassword\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.resetPasswordForm.get(\"newPassword\")) == null ? null : tmp_2_0.touched));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"disabled\", ctx.resetPasswordForm.invalid);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.message);\n          }\n        },\n        dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n      });\n    }\n  }\n  return ResetpasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}