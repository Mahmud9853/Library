{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home/home.component';\nimport { DashboardComponent } from './admin/dashboard/dashboard/dashboard.component';\nimport { LoginComponent } from './account/login/login.component';\nimport { RegisterComponent } from './account/register/register.component';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { ResetpasswordComponent } from './account/resetpassword/resetpassword.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: 'home',\n  component: HomeComponent,\n  canActivate: [AuthGuard],\n  data: {\n    roles: ['Admin', 'Client']\n  }\n}, {\n  path: 'admin/dashboard',\n  component: DashboardComponent,\n  canActivate: [AuthGuard],\n  data: {\n    roles: ['Admin', 'Client']\n  }\n}, {\n  path: 'account/login',\n  component: LoginComponent\n}, {\n  path: 'account/register',\n  component: RegisterComponent\n}, {\n  path: 'account/resetpassword',\n  component: ResetpasswordComponent\n}, {\n  path: '',\n  redirectTo: 'account/login',\n  pathMatch: 'full'\n}, {\n  path: 'admin',\n  loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule)\n}, {\n  path: 'dashboard',\n  loadChildren: () => import('./admin/dashboard/dashboard.module').then(m => m.DashboardModule)\n},\n// { path: '**', redirectTo: '/home' }, \n{\n  path: '**',\n  canActivate: [AuthGuard],\n  component: HomeComponent // Hatalı rotada giriş yapılmışsa Home'a, yapılmamışsa Login'e yönlendirme için AuthGuard kontrolü\n} // Geçersiz rotaları login veya home'e yönlendirme\n// { path: '**', redirectTo: 'home' } // Hatalı bir rota girilirse\n];\n\nexport class AppRoutingModule {\n  static {\n    this.ɵfac = function AppRoutingModule_Factory(t) {\n      return new (t || AppRoutingModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppRoutingModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [RouterModule.forRoot(routes), RouterModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","HomeComponent","DashboardComponent","LoginComponent","RegisterComponent","AuthGuard","ResetpasswordComponent","routes","path","component","canActivate","data","roles","redirectTo","pathMatch","loadChildren","then","m","AdminModule","DashboardModule","AppRoutingModule","forRoot","imports","i1","exports"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home/home.component';\nimport { DashboardComponent } from './admin/dashboard/dashboard/dashboard.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { LoginComponent } from './account/login/login.component';\nimport { RegisterComponent } from './account/register/register.component';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { AppComponent } from './app.component';\nimport { NavBarComponent } from './core/nav-bar/nav-bar.component';\nimport { ResetpasswordComponent } from './account/resetpassword/resetpassword.component';\nimport { BookListComponent } from './admin/book/book-list/book-list.component';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard], data: { roles: ['Admin', 'Client'] } },\n  {\n    path: 'admin/dashboard',\n    component: DashboardComponent,\n    canActivate: [AuthGuard],\n    data: { roles: ['Admin', 'Client'] }\n  },\n  { path: 'account/login', component: LoginComponent },\n  { path: 'account/register', component: RegisterComponent },\n  { path: 'account/resetpassword', component: ResetpasswordComponent },\n  { path: '', redirectTo: 'account/login', pathMatch: 'full' },\n  { path: 'admin', loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule) }, // Admin modülü\n  { path: 'dashboard', loadChildren: () => import('./admin/dashboard/dashboard.module').then(m => m.DashboardModule) },\n  // { path: '**', redirectTo: '/home' }, \n    {\n    path: '**',\n    canActivate: [AuthGuard],\n    component: HomeComponent, // Hatalı rotada giriş yapılmışsa Home'a, yapılmamışsa Login'e yönlendirme için AuthGuard kontrolü\n  } // Geçersiz rotaları login veya home'e yönlendirme\n  // { path: '**', redirectTo: 'home' } // Hatalı bir rota girilirse\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,kBAAkB,QAAQ,iDAAiD;AAEpF,SAASC,cAAc,QAAQ,iCAAiC;AAChE,SAASC,iBAAiB,QAAQ,uCAAuC;AACzE,SAASC,SAAS,QAAQ,0BAA0B;AAGpD,SAASC,sBAAsB,QAAQ,iDAAiD;;;AAGxF,MAAMC,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAER,aAAa;EAAES,WAAW,EAAE,CAACL,SAAS,CAAC;EAAEM,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO,EAAE,QAAQ;EAAC;AAAE,CAAE,EAC1G;EACEJ,IAAI,EAAE,iBAAiB;EACvBC,SAAS,EAAEP,kBAAkB;EAC7BQ,WAAW,EAAE,CAACL,SAAS,CAAC;EACxBM,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO,EAAE,QAAQ;EAAC;CACnC,EACD;EAAEJ,IAAI,EAAE,eAAe;EAAEC,SAAS,EAAEN;AAAc,CAAE,EACpD;EAAEK,IAAI,EAAE,kBAAkB;EAAEC,SAAS,EAAEL;AAAiB,CAAE,EAC1D;EAAEI,IAAI,EAAE,uBAAuB;EAAEC,SAAS,EAAEH;AAAsB,CAAE,EACpE;EAAEE,IAAI,EAAE,EAAE;EAAEK,UAAU,EAAE,eAAe;EAAEC,SAAS,EAAE;AAAM,CAAE,EAC5D;EAAEN,IAAI,EAAE,OAAO;EAAEO,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,sBAAsB,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,WAAW;AAAC,CAAE,EAC9F;EAAEV,IAAI,EAAE,WAAW;EAAEO,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,oCAAoC,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACE,eAAe;AAAC,CAAE;AACpH;AACE;EACAX,IAAI,EAAE,IAAI;EACVE,WAAW,EAAE,CAACL,SAAS,CAAC;EACxBI,SAAS,EAAER,aAAa,CAAE;CAC3B,CAAC;AACF;AAAA,CACD;;AAMD,OAAM,MAAOmB,gBAAgB;;;uBAAhBA,gBAAgB;IAAA;EAAA;;;YAAhBA;IAAgB;EAAA;;;gBAHjBpB,YAAY,CAACqB,OAAO,CAACd,MAAM,CAAC,EAC5BP,YAAY;IAAA;EAAA;;;2EAEXoB,gBAAgB;IAAAE,OAAA,GAAAC,EAAA,CAAAvB,YAAA;IAAAwB,OAAA,GAFjBxB,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}