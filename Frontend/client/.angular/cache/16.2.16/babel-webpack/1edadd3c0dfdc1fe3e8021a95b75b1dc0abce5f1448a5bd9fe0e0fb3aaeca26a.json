{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let BookAddComponent = class BookAddComponent {\n  constructor(bookService, router) {\n    this.bookService = bookService;\n    this.router = router;\n    this.types = [];\n    this.categories = [];\n    this.authors = [];\n    this.book = {\n      title: '',\n      description: '',\n      createBook: '',\n      typeId: 0,\n      categoryId: 0,\n      authorId: 0,\n      photoFile: null,\n      documentFile: null\n    };\n  }\n  ngOnInit() {\n    this.loadTypes();\n    this.loadCategories();\n    this.loadAuthors();\n    this.addBook();\n  }\n  loadTypes() {\n    this.bookService.getTypes().subscribe({\n      next: response => {\n        console.log('API Response type:', response);\n        this.types = response;\n      },\n      error: error => console.log('Error fetching books:', error)\n    });\n  }\n  loadAuthors() {\n    this.bookService.getAuthors().subscribe({\n      next: response => {\n        console.log('API Response author:', response);\n        this.authors = response;\n      },\n      error: error => console.log('Error fetching books:', error)\n    });\n  }\n  loadCategories() {\n    this.bookService.getCategories().subscribe({\n      next: response => {\n        console.log('API Response category:', response);\n        this.categories = response;\n      },\n      error: error => console.log('Error fetching books:', error)\n    });\n  }\n  onFileChange(event, fileType) {\n    const file = event.target.files[0];\n    if (fileType === 'photo') {\n      this.book.photoFile = file;\n    } else if (fileType === 'document') {\n      this.book.documentFile = file;\n    }\n  }\n  addBook() {\n    const formData = new FormData();\n    formData.append('Title', this.book.title);\n    formData.append('Description', this.book.description);\n    formData.append('CreateBook', this.book.createBook);\n    formData.append('TypeId', this.book.typeId.toString());\n    formData.append('CategoryId', this.book.categoryId.toString());\n    formData.append('AuthorId', this.book.authorId.toString());\n    if (this.book.photoFile) {\n      formData.append('PhotoFile', this.book.photoFile);\n    }\n    if (this.book.documentFile) {\n      formData.append('DocumentFile', this.book.documentFile);\n    }\n    this.bookService.addBook(formData).subscribe({\n      next: response => {\n        console.log('Book added successfully:', response);\n        this.router.navigate(['/books']); // Başarılı ekleme sonrası yönlendirme\n      },\n\n      error: err => {\n        console.error('Error adding book:', err);\n      }\n    });\n  }\n};\nBookAddComponent = __decorate([Component({\n  selector: 'app-book-add',\n  templateUrl: './book-add.component.html',\n  styleUrls: ['./book-add.component.scss']\n})], BookAddComponent);","map":{"version":3,"names":["Component","BookAddComponent","constructor","bookService","router","types","categories","authors","book","title","description","createBook","typeId","categoryId","authorId","photoFile","documentFile","ngOnInit","loadTypes","loadCategories","loadAuthors","addBook","getTypes","subscribe","next","response","console","log","error","getAuthors","getCategories","onFileChange","event","fileType","file","target","files","formData","FormData","append","toString","navigate","err","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\book\\book-add\\book-add.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BookService } from '../book.service';\nimport { TypeService } from '../../type/type.service';\nimport { AuthorService } from '../../author/author.service';\nimport { Book } from 'src/app/shared/models/book';\n\n@Component({\n  selector: 'app-book-add',\n  templateUrl: './book-add.component.html',\n  styleUrls: ['./book-add.component.scss']\n})\nexport class BookAddComponent implements OnInit{\n  types: any[] = [];\n  categories: any[] = [];\n  authors: any[] = [];\n  book = {\n    title: '',\n    description: '',\n    createBook: '',\n    typeId: 0,\n    categoryId: 0,\n    authorId: 0,\n    photoFile: null,\n    documentFile: null\n  };\n  constructor(private bookService: BookService, private router: Router){}\n\n  ngOnInit(): void {\n    this.loadTypes();\n    this.loadCategories();\n    this.loadAuthors();\n    this.addBook();\n  }\n\n    loadTypes() {\n      this.bookService.getTypes().subscribe({\n       next: (response: any) => {\n          console.log('API Response type:', response);\n            this.types = response;\n        },\n          error: error => console.log('Error fetching books:', error)\n        })\n    }\n    loadAuthors() {\n      this.bookService.getAuthors().subscribe({\n       next: (response: any) => {\n          console.log('API Response author:', response);\n            this.authors = response;\n        },\n          error: error => console.log('Error fetching books:', error)\n        })\n    }\n    loadCategories() {\n      this.bookService.getCategories().subscribe({\n        next: ( response : any) => {\n          console.log('API Response category:', response);\n          this.categories = response;\n        },\n        error: error=> console.log('Error fetching books:', error)\n        \n      })\n    }\n\n    onFileChange(event: any, fileType: 'photo' | 'document') {\n      const file = event.target.files[0];\n      if (fileType === 'photo') {\n        this.book.photoFile = file;\n      } else if (fileType === 'document') {\n        this.book.documentFile = file;\n      }\n    }\n  \n    addBook() {\n      const formData = new FormData();\n      formData.append('Title', this.book.title);\n      formData.append('Description', this.book.description);\n      formData.append('CreateBook', this.book.createBook);\n      formData.append('TypeId', this.book.typeId.toString());\n      formData.append('CategoryId', this.book.categoryId.toString());\n      formData.append('AuthorId', this.book.authorId.toString());\n      if (this.book.photoFile) {\n        formData.append('PhotoFile', this.book.photoFile);\n      }\n      if (this.book.documentFile) {\n        formData.append('DocumentFile', this.book.documentFile);\n      }\n  \n      this.bookService.addBook(formData).subscribe({\n        next: (response) => {\n          console.log('Book added successfully:', response);\n          this.router.navigate(['/books']); // Başarılı ekleme sonrası yönlendirme\n        },\n        error: (err) => {\n          console.error('Error adding book:', err);\n        }\n      });\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}