{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AuthorEditComponent = class AuthorEditComponent {\n  constructor(authorService, router, route) {\n    this.authorService = authorService;\n    this.router = router;\n    this.route = route;\n    this.author = {\n      id: 0,\n      name: ''\n    };\n  }\n  ngOnInit() {\n    const authorId = this.route.snapshot.params['id'];\n    if (authorId) {\n      this.loadAuthor();\n    }\n  }\n  loadAuthor() {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    if (id) {\n      this.authorService.getAuthorById(id).subscribe({\n        next: response => {\n          console.log('API Response:', response);\n          this.author = response;\n        },\n        error: error => {\n          console.error('Error loading type details:', error);\n        }\n      });\n    }\n  }\n  updateAuthor() {\n    const formData = new FormData();\n    formData.append('fullName', this.author.fullName);\n    this.authorService.updateAuthor(this.author.id, formData).subscribe({\n      next: response => {\n        console.log('Type updated successfully:', response);\n        // Backend'den dönen güncellenmiş veriyi atayın\n        this.author = response;\n        this.router.navigate(['/admin/author/author-list']); // Başarılı güncelleme sonrası yönlendirme\n      },\n\n      error: error => {\n        console.error('Error updating type:', error);\n      }\n    });\n  }\n};\nAuthorEditComponent = __decorate([Component({\n  selector: 'app-author-edit',\n  templateUrl: './author-edit.component.html',\n  styleUrls: ['./author-edit.component.scss']\n})], AuthorEditComponent);","map":{"version":3,"names":["Component","AuthorEditComponent","constructor","authorService","router","route","author","id","name","ngOnInit","authorId","snapshot","params","loadAuthor","Number","paramMap","get","getAuthorById","subscribe","next","response","console","log","error","updateAuthor","formData","FormData","append","fullName","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\author\\author-edit\\author-edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthorService } from '../author.service';\n\n@Component({\n  selector: 'app-author-edit',\n  templateUrl: './author-edit.component.html',\n  styleUrls: ['./author-edit.component.scss']\n})\nexport class AuthorEditComponent implements OnInit {\n  author: any = {\n    id: 0,\n    name:'',\n  };\n  \n  constructor(private authorService: AuthorService, private router: Router, private route: ActivatedRoute){}\n\n  ngOnInit(): void {\n\n    const authorId = this.route.snapshot.params['id'];\n    if (authorId) {\n      this.loadAuthor();\n    }\n  }\n  loadAuthor() {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    if (id) {\n      this.authorService.getAuthorById(id).subscribe({\n        next: (response: any) => {\n          console.log('API Response:', response);\n          this.author = response;\n        },\n        error: (error) => {\n          console.error('Error loading type details:', error);\n        }\n      });\n    }\n  }\n\n  updateAuthor() {\n    const formData = new FormData();\n    formData.append('fullName', this.author.fullName);\n  \n    this.authorService.updateAuthor(this.author.id, formData).subscribe({\n      next: (response: any) => {\n        console.log('Type updated successfully:', response);\n        // Backend'den dönen güncellenmiş veriyi atayın\n        this.author = response;\n        this.router.navigate(['/admin/author/author-list']); // Başarılı güncelleme sonrası yönlendirme\n      },\n      error: (error) => {\n        console.error('Error updating type:', error);\n      }\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAM9BC,YAAoBC,aAA4B,EAAUC,MAAc,EAAUC,KAAqB;IAAnF,KAAAF,aAAa,GAAbA,aAAa;IAAyB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;IALvF,KAAAC,MAAM,GAAQ;MACZC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAC;KACN;EAEwG;EAEzGC,QAAQA,CAAA;IAEN,MAAMC,QAAQ,GAAG,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IACjD,IAAIF,QAAQ,EAAE;MACZ,IAAI,CAACG,UAAU,EAAE;;EAErB;EACAA,UAAUA,CAAA;IACR,MAAMN,EAAE,GAAGO,MAAM,CAAC,IAAI,CAACT,KAAK,CAACM,QAAQ,CAACI,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IACzD,IAAIT,EAAE,EAAE;MACN,IAAI,CAACJ,aAAa,CAACc,aAAa,CAACV,EAAE,CAAC,CAACW,SAAS,CAAC;QAC7CC,IAAI,EAAGC,QAAa,IAAI;UACtBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,QAAQ,CAAC;UACtC,IAAI,CAACd,MAAM,GAAGc,QAAQ;QACxB,CAAC;QACDG,KAAK,EAAGA,KAAK,IAAI;UACfF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACrD;OACD,CAAC;;EAEN;EAEAC,YAAYA,CAAA;IACV,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAACrB,MAAM,CAACsB,QAAQ,CAAC;IAEjD,IAAI,CAACzB,aAAa,CAACqB,YAAY,CAAC,IAAI,CAAClB,MAAM,CAACC,EAAE,EAAEkB,QAAQ,CAAC,CAACP,SAAS,CAAC;MAClEC,IAAI,EAAGC,QAAa,IAAI;QACtBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,QAAQ,CAAC;QACnD;QACA,IAAI,CAACd,MAAM,GAAGc,QAAQ;QACtB,IAAI,CAAChB,MAAM,CAACyB,QAAQ,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC,CAAC;MACvD,CAAC;;MACDN,KAAK,EAAGA,KAAK,IAAI;QACfF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;KACD,CAAC;EACJ;CACD;AA9CYtB,mBAAmB,GAAA6B,UAAA,EAL/B9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWhC,mBAAmB,CA8C/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}