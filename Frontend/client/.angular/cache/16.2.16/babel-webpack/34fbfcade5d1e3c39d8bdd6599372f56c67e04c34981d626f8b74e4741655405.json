{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/account/account.service\";\nimport * as i2 from \"@angular/router\";\nexport class AdminGuard {\n  constructor(accountService, router) {\n    this.accountService = accountService;\n    this.router = router;\n  }\n  canActivate() {\n    const role = this.accountService.getRole();\n    if (role === 'Admin') {\n      return true;\n    } else {\n      this.router.navigate(['/home']);\n      return false;\n    }\n  }\n  static {\n    this.ɵfac = function AdminGuard_Factory(t) {\n      return new (t || AdminGuard)(i0.ɵɵinject(i1.AccountService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AdminGuard,\n      factory: AdminGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AdminGuard","constructor","accountService","router","canActivate","role","getRole","navigate","i0","ɵɵinject","i1","AccountService","i2","Router","factory","ɵfac","providedIn"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\core\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AccountService } from 'src/app/account/account.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private accountService: AccountService, private router: Router) {}\n\n  canActivate(): boolean {\n    const role = this.accountService.getRole();\n    if (role === 'Admin' ) {\n      return true;\n    } else {\n      this.router.navigate(['/home']);\n      return false;\n    }\n  }\n}\n"],"mappings":";;;AAQA,OAAM,MAAOA,UAAU;EACrBC,YAAoBC,cAA8B,EAAUC,MAAc;IAAtD,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;EAAW;EAE7EC,WAAWA,CAAA;IACT,MAAMC,IAAI,GAAG,IAAI,CAACH,cAAc,CAACI,OAAO,EAAE;IAC1C,IAAID,IAAI,KAAK,OAAO,EAAG;MACrB,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACF,MAAM,CAACI,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,OAAO,KAAK;;EAEhB;;;uBAXWP,UAAU,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAAVb,UAAU;MAAAc,OAAA,EAAVd,UAAU,CAAAe,IAAA;MAAAC,UAAA,EAFT;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}