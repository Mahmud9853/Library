{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let HomeEditComponent = class HomeEditComponent {\n  constructor(fb, homeService, route, router) {\n    this.fb = fb;\n    this.homeService = homeService;\n    this.route = route;\n    this.router = router;\n    this.selectedFiles = [];\n    this.existingPhotos = [];\n    this.updateForm = this.fb.group({\n      title: [''],\n      description: ['']\n    });\n    this.homeId = this.route.snapshot.params['id'];\n  }\n  ngOnInit() {\n    this.loadHomeDetails();\n  }\n  // API'den ev detaylarını al ve formu doldur\n  loadHomeDetails() {\n    this.homeService.gethomeById(this.homeId).subscribe({\n      next: home => {\n        this.updateForm.patchValue({\n          title: home.title,\n          description: home.description\n        });\n        // Mevcut fotoğrafları yükle\n        if (home.homePhotos && home.homePhotos.length > 0) {\n          this.existingPhotos = home.homePhotos.map(photo => ({\n            id: photo.id,\n            url: photo.photo.startsWith('http://') ? photo.photo.replace('http://', 'https://') : photo.photo\n          }));\n        } else {\n          this.existingPhotos = []; // Fotoğraf yoksa boş\n        }\n      },\n\n      error: err => {\n        console.error('Error fetching home details:', err);\n        alert('An error occurred while loading the home details.');\n      }\n    });\n  }\n  // Fotoğraf silme işlemi\n  deletePhoto(id) {\n    if (confirm('Are you sure you want to delete this photo?')) {\n      this.homeService.deletePhoto(id).subscribe({\n        next: () => {\n          // Fotoğrafı listeden çıkar\n          this.existingPhotos = this.existingPhotos.filter(photo => photo.id !== id);\n          alert('Photo deleted successfully!');\n        },\n        error: err => {\n          console.error('Error deleting photo:', err);\n          alert('An error occurred while deleting the photo.');\n        }\n      });\n    }\n  }\n  // Fotoğraf seçim işlemi\n  onFileSelected(event) {\n    this.selectedFiles = Array.from(event.target.files);\n  }\n  // Form submit işlemi\n  onSubmit() {\n    const formData = new FormData();\n    formData.append('title', this.updateForm.get('title')?.value || '');\n    formData.append('description', this.updateForm.get('description')?.value || '');\n    // Seçilen fotoğrafları formData'ya ekle\n    for (const file of this.selectedFiles) {\n      formData.append('photos', file);\n    }\n    this.homeService.updateHome(this.homeId, formData).subscribe({\n      next: response => {\n        console.log('Update response:', response);\n        alert('Home updated successfully!');\n        this.router.navigate(['/admin/home/home-list']);\n      },\n      error: err => {\n        console.error('Error updating home:', err);\n        alert('An error occurred while updating the home.');\n      }\n    });\n  }\n};\nHomeEditComponent = __decorate([Component({\n  selector: 'app-home-edit',\n  templateUrl: './home-edit.component.html',\n  styleUrls: ['./home-edit.component.scss']\n})], HomeEditComponent);","map":{"version":3,"names":["Component","HomeEditComponent","constructor","fb","homeService","route","router","selectedFiles","existingPhotos","updateForm","group","title","description","homeId","snapshot","params","ngOnInit","loadHomeDetails","gethomeById","subscribe","next","home","patchValue","homePhotos","length","map","photo","id","url","startsWith","replace","error","err","console","alert","deletePhoto","confirm","filter","onFileSelected","event","Array","from","target","files","onSubmit","formData","FormData","append","get","value","file","updateHome","response","log","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\home\\home-edit\\home-edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { HomeService } from '../home.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home-edit',\n  templateUrl: './home-edit.component.html',\n  styleUrls: ['./home-edit.component.scss']\n})\nexport class HomeEditComponent implements OnInit{\n  updateForm: FormGroup;\n  selectedFiles: File[] = [];\n  homeId!: number;\n  existingPhotos: { id: number; url: string }[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private homeService: HomeService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.updateForm = this.fb.group({\n      title: [''],\n      description: ['']\n    });\n\n    this.homeId = this.route.snapshot.params['id'];\n  }\n\n  ngOnInit(): void {\n    this.loadHomeDetails();\n  }\n\n  // API'den ev detaylarını al ve formu doldur\n  loadHomeDetails(): void {\n    this.homeService.gethomeById(this.homeId).subscribe({\n      next: (home) => {\n        this.updateForm.patchValue({\n          title: home.title,\n          description: home.description,\n        });\n\n        // Mevcut fotoğrafları yükle\n        if (home.homePhotos && home.homePhotos.length > 0) {\n          this.existingPhotos = home.homePhotos.map((photo: any) => ({\n            id: photo.id,\n            url: photo.photo.startsWith('http://') ? photo.photo.replace('http://', 'https://') : photo.photo,\n          }));\n        } else {\n          this.existingPhotos = []; // Fotoğraf yoksa boş\n        }\n      },\n      error: (err) => {\n        console.error('Error fetching home details:', err);\n        alert('An error occurred while loading the home details.');\n      }\n    });\n  }\n\n  // Fotoğraf silme işlemi\n  deletePhoto(id: number) {\n    if (confirm('Are you sure you want to delete this photo?')) {\n      this.homeService.deletePhoto(id).subscribe({\n        next: () => {\n          // Fotoğrafı listeden çıkar\n          this.existingPhotos = this.existingPhotos.filter(photo => photo.id !== id);\n          alert('Photo deleted successfully!');\n        },\n        error: (err) => {\n          console.error('Error deleting photo:', err);\n          alert('An error occurred while deleting the photo.');\n        }\n      });\n    }\n  }\n\n  // Fotoğraf seçim işlemi\n  onFileSelected(event: any) {\n    this.selectedFiles = Array.from(event.target.files);\n  }\n\n  // Form submit işlemi\n  onSubmit() {\n    const formData = new FormData();\n    formData.append('title', this.updateForm.get('title')?.value || '');\n    formData.append('description', this.updateForm.get('description')?.value || '');\n\n    // Seçilen fotoğrafları formData'ya ekle\n    for (const file of this.selectedFiles) {\n      formData.append('photos', file);\n    }\n\n    this.homeService.updateHome(this.homeId, formData).subscribe({\n      next: (response) => {\n        console.log('Update response:', response);\n        alert('Home updated successfully!');\n        this.router.navigate(['/admin/home/home-list']);\n      },\n      error: (err) => {\n        console.error('Error updating home:', err);\n        alert('An error occurred while updating the home.');\n      }\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}