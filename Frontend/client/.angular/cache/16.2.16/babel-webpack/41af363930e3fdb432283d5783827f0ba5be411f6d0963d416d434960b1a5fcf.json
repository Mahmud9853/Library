{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/account/account.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(accountService, router) {\n    this.accountService = accountService;\n    this.router = router;\n  }\n  canActivate(next, state) {\n    const isLoggedIn = this.accountService.isLoggedIn();\n    const role = this.accountService.getRole();\n    if (isLoggedIn && (role === 'Admin' || role === 'Client')) {\n      return true; // Kullanıcı giriş yapmış ve yetkiliyse erişime izin ver\n    }\n    // Kullanıcı giriş yapmamışsa login sayfasına yönlendir\n    this.router.navigate(['/account/login']);\n    return false;\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.AccountService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthGuard","constructor","accountService","router","canActivate","next","state","isLoggedIn","role","getRole","navigate","i0","ɵɵinject","i1","AccountService","i2","Router","factory","ɵfac","providedIn"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\core\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AccountService } from 'src/app/account/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private accountService: AccountService, private router: Router) { }\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    const isLoggedIn = this.accountService.isLoggedIn();\n    const role = this.accountService.getRole();\n  \n    if (isLoggedIn && (role === 'Admin' || role === 'Client')) {\n      return true; // Kullanıcı giriş yapmış ve yetkiliyse erişime izin ver\n    }\n  \n    // Kullanıcı giriş yapmamışsa login sayfasına yönlendir\n    this.router.navigate(['/account/login']);\n    return false;\n  }\n  \n}\n"],"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EAEpBC,YAAoBC,cAA8B,EAAUC,MAAc;IAAtD,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;EAAY;EAE9EC,WAAWA,CAACC,IAA4B,EAAEC,KAA0B;IAClE,MAAMC,UAAU,GAAG,IAAI,CAACL,cAAc,CAACK,UAAU,EAAE;IACnD,MAAMC,IAAI,GAAG,IAAI,CAACN,cAAc,CAACO,OAAO,EAAE;IAE1C,IAAIF,UAAU,KAAKC,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,CAAC,EAAE;MACzD,OAAO,IAAI,CAAC,CAAC;;IAGf;IACA,IAAI,CAACL,MAAM,CAACO,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;IACxC,OAAO,KAAK;EACd;;;uBAfWV,SAAS,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAAThB,SAAS;MAAAiB,OAAA,EAATjB,SAAS,CAAAkB,IAAA;MAAAC,UAAA,EAFR;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}