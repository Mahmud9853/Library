{"ast":null,"code":"import { map } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HomeService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.apiUrl;\n    this.homes = [];\n    this.homePhotos = [];\n  }\n  getHomes() {\n    return this.http.get(this.baseUrl + 'Home').pipe(map(response => response.$values) // $values içindeki verileri alın\n    );\n  }\n\n  gethomeById(id) {\n    return this.http.get(`${this.baseUrl + 'Home'}/${id}`);\n  }\n  addHome(homes) {\n    return this.http.post(`${this.baseUrl + 'Home/create'}`, homes, {\n      responseType: 'text'\n    });\n  }\n  deleteHome(id) {\n    return this.http.delete(`${this.baseUrl}Home/${id}`, {\n      responseType: 'text'\n    });\n  }\n  updateHome(id, home) {\n    return this.http.put(`${this.baseUrl}Home/update/${id}`, home, {\n      responseType: 'text'\n    });\n  }\n  deletePhoto(id) {\n    return this.http.delete(`${this.baseUrl}Home/delete-photo/${id}`, {\n      responseType: 'text'\n    });\n  }\n  getDefaultHome() {\n    return this.http.get(`${this.baseUrl}Home/default-home`);\n  }\n  static {\n    this.ɵfac = function HomeService_Factory(t) {\n      return new (t || HomeService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: HomeService,\n      factory: HomeService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["map","environment","HomeService","constructor","http","baseUrl","apiUrl","homes","homePhotos","getHomes","get","pipe","response","$values","gethomeById","id","addHome","post","responseType","deleteHome","delete","updateHome","home","put","deletePhoto","getDefaultHome","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\home\\home.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { Home } from 'src/app/shared/models/home';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HomeService {\r\n\r\n  private baseUrl = environment.apiUrl;\r\n  homes: any[] =[];\r\n  homePhotos: any[] = [];\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n   getHomes(): Observable<Home[]> {\r\n      return this.http.get<any>(this.baseUrl + 'Home').pipe(\r\n        map((response) => response.$values) // $values içindeki verileri alın\r\n      );\r\n    }\r\n    gethomeById(id: number): Observable<Home>{\r\n        return this.http.get<Home>(`${this.baseUrl + 'Home'}/${id}`);\r\n    }\r\n\r\n    addHome(homes: any): Observable<any>{\r\n      return this.http.post(`${this.baseUrl + 'Home/create'}`, homes, { responseType: 'text' as 'json' });\r\n      \r\n    }\r\n    deleteHome(id:number): Observable<any>{\r\n      return this.http.delete<void>(`${this.baseUrl}Home/${id}`, {\r\n      responseType: 'text' as 'json'\r\n      });\r\n    }\r\n\r\n    updateHome(id:number , home:FormData): Observable<any>{\r\n      return this.http.put(`${this.baseUrl}Home/update/${id}`, home, {\r\n      responseType: 'text' as 'json'\r\n      });\r\n    }\r\n      deletePhoto(id: number): Observable<string> {\r\n        return this.http.delete<string>(`${this.baseUrl}Home/delete-photo/${id}`, {\r\n        responseType: 'text' as 'json'\r\n     });\r\n    }\r\n\r\n    getDefaultHome(): Observable<any> {\r\n      return this.http.get<any>(`${this.baseUrl}Home/default-home`);\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n"],"mappings":"AAEA,SAASA,GAAG,QAAoB,MAAM;AAEtC,SAASC,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,WAAW;EAMtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,OAAO,GAAGJ,WAAW,CAACK,MAAM;IACpC,KAAAC,KAAK,GAAS,EAAE;IAChB,KAAAC,UAAU,GAAU,EAAE;EAEkB;EAEvCC,QAAQA,CAAA;IACL,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAM,IAAI,CAACL,OAAO,GAAG,MAAM,CAAC,CAACM,IAAI,CACnDX,GAAG,CAAEY,QAAQ,IAAKA,QAAQ,CAACC,OAAO,CAAC,CAAC;KACrC;EACH;;EACAC,WAAWA,CAACC,EAAU;IAClB,OAAO,IAAI,CAACX,IAAI,CAACM,GAAG,CAAO,GAAG,IAAI,CAACL,OAAO,GAAG,MAAM,IAAIU,EAAE,EAAE,CAAC;EAChE;EAEAC,OAAOA,CAACT,KAAU;IAChB,OAAO,IAAI,CAACH,IAAI,CAACa,IAAI,CAAC,GAAG,IAAI,CAACZ,OAAO,GAAG,aAAa,EAAE,EAAEE,KAAK,EAAE;MAAEW,YAAY,EAAE;IAAgB,CAAE,CAAC;EAErG;EACAC,UAAUA,CAACJ,EAAS;IAClB,OAAO,IAAI,CAACX,IAAI,CAACgB,MAAM,CAAO,GAAG,IAAI,CAACf,OAAO,QAAQU,EAAE,EAAE,EAAE;MAC3DG,YAAY,EAAE;KACb,CAAC;EACJ;EAEAG,UAAUA,CAACN,EAAS,EAAGO,IAAa;IAClC,OAAO,IAAI,CAAClB,IAAI,CAACmB,GAAG,CAAC,GAAG,IAAI,CAAClB,OAAO,eAAeU,EAAE,EAAE,EAAEO,IAAI,EAAE;MAC/DJ,YAAY,EAAE;KACb,CAAC;EACJ;EACEM,WAAWA,CAACT,EAAU;IACpB,OAAO,IAAI,CAACX,IAAI,CAACgB,MAAM,CAAS,GAAG,IAAI,CAACf,OAAO,qBAAqBU,EAAE,EAAE,EAAE;MAC1EG,YAAY,EAAE;KAChB,CAAC;EACH;EAEAO,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACrB,IAAI,CAACM,GAAG,CAAM,GAAG,IAAI,CAACL,OAAO,mBAAmB,CAAC;EAC/D;;;uBAxCSH,WAAW,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAX3B,WAAW;MAAA4B,OAAA,EAAX5B,WAAW,CAAA6B,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}