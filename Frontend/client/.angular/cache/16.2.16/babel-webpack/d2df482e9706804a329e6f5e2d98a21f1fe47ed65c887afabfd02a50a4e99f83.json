{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../user.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction UserAddComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"input\", 15);\n    i0.ɵɵlistener(\"change\", function UserAddComponent_div_28_Template_input_change_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const role_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.toggleRole(role_r1, $event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", role_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", role_r1, \" \");\n  }\n}\nexport class UserAddComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.registerDto = {\n      name: '',\n      surname: '',\n      email: '',\n      birthDate: '',\n      password: '',\n      userName: ''\n    };\n    this.roleDto = {\n      roles: []\n    };\n    this.availableRoles = ['Admin', 'Client'];\n  }\n  onSubmit() {\n    const registerWithRoleDto = {\n      registerDto: this.registerDto,\n      roleDto: this.roleDto\n    };\n    this.userService.getRegisterRole(registerWithRoleDto).subscribe({\n      next: response => {\n        console.log('User registered successfully:', response);\n        alert('User registered successfully!');\n      },\n      error: error => {\n        console.error('Error registering user:', error);\n        alert('Failed to register user.');\n      }\n    });\n  }\n  toggleRole(role, event) {\n    if (event.target.checked) {\n      this.roleDto.roles.push(role);\n    } else {\n      this.roleDto.roles = this.roleDto.roles.filter(r => r !== role);\n    }\n  }\n  static {\n    this.ɵfac = function UserAddComponent_Factory(t) {\n      return new (t || UserAddComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserAddComponent,\n      selectors: [[\"app-user-add\"]],\n      decls: 31,\n      vars: 7,\n      consts: [[1, \"register-form\", 3, \"ngSubmit\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"surname\"], [\"type\", \"text\", \"id\", \"surname\", \"name\", \"surname\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"birthDate\"], [\"type\", \"date\", \"id\", \"birthDate\", \"name\", \"birthDate\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"userName\"], [\"type\", \"text\", \"id\", \"userName\", \"name\", \"userName\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\"], [\"type\", \"checkbox\", 3, \"value\", \"change\"]],\n      template: function UserAddComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function UserAddComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n          i0.ɵɵtext(3, \"Name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function UserAddComponent_Template_input_ngModelChange_4_listener($event) {\n            return ctx.registerDto.name = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"div\")(6, \"label\", 3);\n          i0.ɵɵtext(7, \"Surname:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"input\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function UserAddComponent_Template_input_ngModelChange_8_listener($event) {\n            return ctx.registerDto.surname = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"div\")(10, \"label\", 5);\n          i0.ɵɵtext(11, \"Email:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"input\", 6);\n          i0.ɵɵlistener(\"ngModelChange\", function UserAddComponent_Template_input_ngModelChange_12_listener($event) {\n            return ctx.registerDto.email = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\")(14, \"label\", 7);\n          i0.ɵɵtext(15, \"Birth Date:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"input\", 8);\n          i0.ɵɵlistener(\"ngModelChange\", function UserAddComponent_Template_input_ngModelChange_16_listener($event) {\n            return ctx.registerDto.birthDate = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"div\")(18, \"label\", 9);\n          i0.ɵɵtext(19, \"Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"input\", 10);\n          i0.ɵɵlistener(\"ngModelChange\", function UserAddComponent_Template_input_ngModelChange_20_listener($event) {\n            return ctx.registerDto.password = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"div\")(22, \"label\", 11);\n          i0.ɵɵtext(23, \"Username:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"input\", 12);\n          i0.ɵɵlistener(\"ngModelChange\", function UserAddComponent_Template_input_ngModelChange_24_listener($event) {\n            return ctx.registerDto.userName = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(25, \"div\")(26, \"label\");\n          i0.ɵɵtext(27, \"Roles:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(28, UserAddComponent_div_28_Template, 3, 2, \"div\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"button\", 14);\n          i0.ɵɵtext(30, \"Register\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.registerDto.name);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.registerDto.surname);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.registerDto.email);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.registerDto.birthDate);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.registerDto.password);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.registerDto.userName);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.availableRoles);\n        }\n      },\n      dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","UserAddComponent_div_28_Template_input_change_1_listener","$event","restoredCtx","ɵɵrestoreView","_r3","role_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","toggleRole","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate1","UserAddComponent","constructor","userService","registerDto","name","surname","email","birthDate","password","userName","roleDto","roles","availableRoles","onSubmit","registerWithRoleDto","getRegisterRole","subscribe","next","response","console","log","alert","error","role","event","target","checked","push","filter","r","ɵɵdirectiveInject","i1","UserService","selectors","decls","vars","consts","template","UserAddComponent_Template","rf","ctx","UserAddComponent_Template_form_ngSubmit_0_listener","UserAddComponent_Template_input_ngModelChange_4_listener","UserAddComponent_Template_input_ngModelChange_8_listener","UserAddComponent_Template_input_ngModelChange_12_listener","UserAddComponent_Template_input_ngModelChange_16_listener","UserAddComponent_Template_input_ngModelChange_20_listener","UserAddComponent_Template_input_ngModelChange_24_listener","ɵɵtemplate","UserAddComponent_div_28_Template"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\user\\user-add\\user-add.component.ts","D:\\MMU\\Frontend\\client\\src\\app\\admin\\user\\user-add\\user-add.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-user-add',\n  templateUrl: './user-add.component.html',\n  styleUrls: ['./user-add.component.scss']\n})\nexport class UserAddComponent {\n  registerDto = {\n    name: '',\n    surname: '',\n    email: '',\n    birthDate: '',\n    password: '',\n    userName: '',\n  };\n\n  roleDto = {\n    roles: [] as string[],\n  };\n  availableRoles = ['Admin', 'Client'];\n\n  constructor(private userService: UserService) {}\n\n  onSubmit() {\n    const registerWithRoleDto = {\n      registerDto: this.registerDto,\n      roleDto: this.roleDto,\n    };\n\n    this.userService.getRegisterRole(registerWithRoleDto).subscribe({\n      next: (response) => {\n        console.log('User registered successfully:', response);\n        alert('User registered successfully!');\n      },\n      error: (error) => {\n        console.error('Error registering user:', error);\n        alert('Failed to register user.');\n      },\n    });\n  }\n\n  toggleRole(role: string, event: any) {\n    if (event.target.checked) {\n      this.roleDto.roles.push(role);\n    } else {\n      this.roleDto.roles = this.roleDto.roles.filter((r) => r !== role);\n    }\n  }\n}\n","<form (ngSubmit)=\"onSubmit()\" class=\"register-form\">\n    <div>\n      <label for=\"name\">Name:</label>\n      <input\n        type=\"text\"\n        id=\"name\"\n        [(ngModel)]=\"registerDto.name\"\n        name=\"name\"\n        required\n      />\n    </div>\n  \n    <div>\n      <label for=\"surname\">Surname:</label>\n      <input\n        type=\"text\"\n        id=\"surname\"\n        [(ngModel)]=\"registerDto.surname\"\n        name=\"surname\"\n        required\n      />\n    </div>\n  \n    <div>\n      <label for=\"email\">Email:</label>\n      <input\n        type=\"email\"\n        id=\"email\"\n        [(ngModel)]=\"registerDto.email\"\n        name=\"email\"\n        required\n      />\n    </div>\n  \n    <div>\n      <label for=\"birthDate\">Birth Date:</label>\n      <input\n        type=\"date\"\n        id=\"birthDate\"\n        [(ngModel)]=\"registerDto.birthDate\"\n        name=\"birthDate\"\n        required\n      />\n    </div>\n  \n    <div>\n      <label for=\"password\">Password:</label>\n      <input\n        type=\"password\"\n        id=\"password\"\n        [(ngModel)]=\"registerDto.password\"\n        name=\"password\"\n        required\n      />\n    </div>\n  \n    <div>\n      <label for=\"userName\">Username:</label>\n      <input\n        type=\"text\"\n        id=\"userName\"\n        [(ngModel)]=\"registerDto.userName\"\n        name=\"userName\"\n        required\n      />\n    </div>\n  \n    <div>\n      <label>Roles:</label>\n      <div *ngFor=\"let role of availableRoles\">\n        <input\n          type=\"checkbox\"\n          [value]=\"role\"\n          (change)=\"toggleRole(role, $event)\"\n        />\n        {{ role }}\n      </div>\n    </div>\n  \n    <button type=\"submit\">Register</button>\n  </form>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}