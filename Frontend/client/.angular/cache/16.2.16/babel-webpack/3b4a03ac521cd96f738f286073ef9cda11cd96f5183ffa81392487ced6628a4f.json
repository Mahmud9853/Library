{"ast":null,"code":"import { map } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SlideService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.apiUrl;\n    this.slides = [];\n  }\n  getAllSlides() {\n    return this.http.get(`${this.baseUrl}Slide`).pipe(map(response => response.$values) // $values içindeki verileri Slide[] tipine dönüştür\n    );\n  }\n\n  getSlideById(id) {\n    return this.http.get(`${this.baseUrl}Slide/${id}`).pipe(map(slides => slides.map(slide => ({\n      id: slide.$id,\n      photo: slide.photo\n    }))));\n  }\n  createSlide(formData) {\n    return this.http.post(`${this.baseUrl}Slide/create`, formData);\n  }\n  updateSlide(id, formData) {\n    return this.http.put(`${this.baseUrl}Slide/update/${id}`, formData);\n  }\n  deleteSlide(id) {\n    return this.http.delete(`${this.baseUrl}Slide/${id}`, {\n      responseType: 'text'\n    });\n  }\n  static {\n    this.ɵfac = function SlideService_Factory(t) {\n      return new (t || SlideService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SlideService,\n      factory: SlideService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["map","environment","SlideService","constructor","http","baseUrl","apiUrl","slides","getAllSlides","get","pipe","response","$values","getSlideById","id","slide","$id","photo","createSlide","formData","post","updateSlide","put","deleteSlide","delete","responseType","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\slide\\slide.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, map, Observable, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SlideService {\n  private baseUrl = environment.apiUrl;\n  slides: any[] = [];\n  constructor(private http: HttpClient) {}\n\n  getAllSlides(): Observable<any[]> {\n    return this.http.get<any>(`${this.baseUrl}Slide`).pipe(\n      map((response) => response.$values) // $values içindeki verileri Slide[] tipine dönüştür\n    );\n  }\n\n  getSlideById(id: number): Observable<any> {\n    return this.http.get<any>(`${this.baseUrl}Slide/${id}`).pipe(\n      map(slides => slides.map(slide => ({ id: slide.$id, photo: slide.photo })))\n    );\n  }\n\n  createSlide(formData: FormData): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}Slide/create`, formData);\n  }\n\n  updateSlide(id: number, formData: FormData): Observable<any> {\n    return this.http.put<any>(`${this.baseUrl}Slide/update/${id}`, formData);\n  }\n\n  deleteSlide(id: number): Observable<any> {\n    return this.http.delete<void>(`${this.baseUrl}Slide/${id}`, {\n      responseType: 'text' as 'json'\n      });\n  }\n}\n    \n\n"],"mappings":"AAEA,SAAqBA,GAAG,QAAgC,MAAM;AAC9D,SAASC,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAGJ,WAAW,CAACK,MAAM;IACpC,KAAAC,MAAM,GAAU,EAAE;EACqB;EAEvCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAM,GAAG,IAAI,CAACJ,OAAO,OAAO,CAAC,CAACK,IAAI,CACpDV,GAAG,CAAEW,QAAQ,IAAKA,QAAQ,CAACC,OAAO,CAAC,CAAC;KACrC;EACH;;EAEAC,YAAYA,CAACC,EAAU;IACrB,OAAO,IAAI,CAACV,IAAI,CAACK,GAAG,CAAM,GAAG,IAAI,CAACJ,OAAO,SAASS,EAAE,EAAE,CAAC,CAACJ,IAAI,CAC1DV,GAAG,CAACO,MAAM,IAAIA,MAAM,CAACP,GAAG,CAACe,KAAK,KAAK;MAAED,EAAE,EAAEC,KAAK,CAACC,GAAG;MAAEC,KAAK,EAAEF,KAAK,CAACE;IAAK,CAAE,CAAC,CAAC,CAAC,CAC5E;EACH;EAEAC,WAAWA,CAACC,QAAkB;IAC5B,OAAO,IAAI,CAACf,IAAI,CAACgB,IAAI,CAAM,GAAG,IAAI,CAACf,OAAO,cAAc,EAAEc,QAAQ,CAAC;EACrE;EAEAE,WAAWA,CAACP,EAAU,EAAEK,QAAkB;IACxC,OAAO,IAAI,CAACf,IAAI,CAACkB,GAAG,CAAM,GAAG,IAAI,CAACjB,OAAO,gBAAgBS,EAAE,EAAE,EAAEK,QAAQ,CAAC;EAC1E;EAEAI,WAAWA,CAACT,EAAU;IACpB,OAAO,IAAI,CAACV,IAAI,CAACoB,MAAM,CAAO,GAAG,IAAI,CAACnB,OAAO,SAASS,EAAE,EAAE,EAAE;MAC1DW,YAAY,EAAE;KACb,CAAC;EACN;;;uBA7BWvB,YAAY,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAZ3B,YAAY;MAAA4B,OAAA,EAAZ5B,YAAY,CAAA6B,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}