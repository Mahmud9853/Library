{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let BookListComponent = class BookListComponent {\n  constructor(bookService, fb) {\n    this.bookService = bookService;\n    this.fb = fb;\n    this.books = [];\n    this.totalRecords = 0;\n    this.categories = [];\n    this.types = [];\n    this.authors = [];\n    // Initialize the reactive form with default values\n    this.searchForm = this.fb.group({\n      search: [''],\n      typeId: [''],\n      categoryId: [''],\n      authorId: [''],\n      pageNumber: [1],\n      pageSize: [10]\n    });\n  }\n  ngOnInit() {\n    // this.getBooks();\n    // this.getTypes();\n    // this.getCategories();\n    // this.getAuthors();\n  }\n  // onSearch(search: string): void {\n  //   this.bookParams.search = search;\n  //   this.bookParams.pageNumber = 1;\n  //   this.getBooks();\n  // }\n  // applyFilters(): void {\n  //   this.bookParams.pageNumber = 1;\n  //   this.getBooks();\n  // }\n  // changePage(pageNumber: number) : void {\n  //   if(pageNumber > 0){\n  //     this.bookParams.pageNumber = pageNumber;\n  //     this.getBooks();\n  //   }\n  // }\n  getTypes() {\n    this.typeService.getTypes().subscribe(types => this.types = types);\n  }\n  getAuthors() {\n    this.authorService.getAuthors().subscribe(authors => this.authors = authors);\n  }\n};\nBookListComponent = __decorate([Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.scss']\n})], BookListComponent);","map":{"version":3,"names":["Component","BookListComponent","constructor","bookService","fb","books","totalRecords","categories","types","authors","searchForm","group","search","typeId","categoryId","authorId","pageNumber","pageSize","ngOnInit","getTypes","typeService","subscribe","getAuthors","authorService","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\book\\book-list\\book-list.component.ts"],"sourcesContent":["import { Component, OnInit} from '@angular/core';\nimport {Book} from 'src/app/shared/models/book'; \nimport { BookService } from '../book.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BookParams } from 'src/app/shared/models/bookParams';\nimport { TypeService } from '../../type/type.service';\nimport { AuthorService } from '../../author/author.service';\nimport { Author } from 'src/app/shared/models/author';\nimport { Category } from 'src/app/shared/models/category';\nimport { Type } from 'src/app/shared/models/type';\n@Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.scss']\n})\nexport class BookListComponent implements OnInit{\n\n  books: any[] = []; \n  totalRecords: number = 0;\n  categories: any[] = [];\n  types: any[] = []; \n  authors: any[] = []; \n  searchForm: FormGroup;\n\n  constructor(private bookService: BookService, private fb: FormBuilder) {\n    // Initialize the reactive form with default values\n    this.searchForm = this.fb.group({\n      search: [''],\n      typeId: [''],\n      categoryId: [''],\n      authorId: [''],\n      pageNumber: [1],\n      pageSize: [10]\n    });\n  }\n  \n    ngOnInit(): void {\n      // this.getBooks();\n      // this.getTypes();\n      // this.getCategories();\n      // this.getAuthors();\n    }\n  \n   \n    // onSearch(search: string): void {\n    //   this.bookParams.search = search;\n    //   this.bookParams.pageNumber = 1;\n    //   this.getBooks();\n    // }\n\n    // applyFilters(): void {\n    //   this.bookParams.pageNumber = 1;\n    //   this.getBooks();\n    // }\n    // changePage(pageNumber: number) : void {\n    //   if(pageNumber > 0){\n    //     this.bookParams.pageNumber = pageNumber;\n    //     this.getBooks();\n    //   }\n    // }\n    getTypes(): void {\n      this.typeService.getTypes().subscribe((types) => (this.types = types));\n    }\n    getAuthors(): void {\n      this.authorService.getAuthors().subscribe((authors) => (this.authors = authors));\n    }\n\n\n    // getBooks(): void { isleyir\n    //   this.bookService.getBooks(this.bookParams).subscribe({\n    //    next: (response: any) => {\n    //       console.log('API Response:', response);\n    //         this.books = response;\n    //         this.totalRecords = response.totalCount || 0;\n    //     },\n    //       error: error => console.log('Error fetching books:', error)\n    //     })\n    // }\n    \n  \n \n  \n  \n  \n \n  }\n"],"mappings":";AAAA,SAASA,SAAS,QAAe,eAAe;AAezC,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAS5BC,YAAoBC,WAAwB,EAAUC,EAAe;IAAjD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,EAAE,GAAFA,EAAE;IAPxD,KAAAC,KAAK,GAAU,EAAE;IACjB,KAAAC,YAAY,GAAW,CAAC;IACxB,KAAAC,UAAU,GAAU,EAAE;IACtB,KAAAC,KAAK,GAAU,EAAE;IACjB,KAAAC,OAAO,GAAU,EAAE;IAIjB;IACA,IAAI,CAACC,UAAU,GAAG,IAAI,CAACN,EAAE,CAACO,KAAK,CAAC;MAC9BC,MAAM,EAAE,CAAC,EAAE,CAAC;MACZC,MAAM,EAAE,CAAC,EAAE,CAAC;MACZC,UAAU,EAAE,CAAC,EAAE,CAAC;MAChBC,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,UAAU,EAAE,CAAC,CAAC,CAAC;MACfC,QAAQ,EAAE,CAAC,EAAE;KACd,CAAC;EACJ;EAEEC,QAAQA,CAAA;IACN;IACA;IACA;IACA;EAAA;EAIF;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,CAACD,QAAQ,EAAE,CAACE,SAAS,CAAEb,KAAK,IAAM,IAAI,CAACA,KAAK,GAAGA,KAAM,CAAC;EACxE;EACAc,UAAUA,CAAA;IACR,IAAI,CAACC,aAAa,CAACD,UAAU,EAAE,CAACD,SAAS,CAAEZ,OAAO,IAAM,IAAI,CAACA,OAAO,GAAGA,OAAQ,CAAC;EAClF;CAoBD;AAtEUR,iBAAiB,GAAAuB,UAAA,EAL7BxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACW1B,iBAAiB,CAsE3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}