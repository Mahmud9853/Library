{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class UserEditComponent {\n  constructor(userService, route, router) {\n    this.userService = userService;\n    this.route = route;\n    this.router = router;\n    this.user = {\n      id: '',\n      email: '',\n      userName: '',\n      name: '',\n      surname: '',\n      birthDate: ''\n    };\n  }\n  ngOnInit() {\n    const userId = this.route.snapshot.params['id'];\n    this.loadUser(userId);\n    // Burada kullanıcı detaylarını API'den çekebilirsiniz\n  }\n\n  loadUser(userId) {\n    this.userService.getUserById(userId).subscribe({\n      next: response => {\n        console.log('User loaded successfully:', response);\n        this.user = response;\n      },\n      error: error => {\n        console.error('Error loading user:', error);\n      }\n    });\n  }\n  updateUser() {\n    const userId = this.route.snapshot.params['id'];\n    const formData = new FormData();\n    formData.append('userName', this.user.userName); // Kullanıcı adı\n    formData.append('email', this.user.email); // Email\n    formData.append('name', this.user.name); // Ad\n    formData.append('surname', this.user.surname); // Soyad\n    formData.append('birthDate', this.user.birthDate);\n    const formattedDate = new Date(this.user.birthDate).toISOString().split('T')[0]; // Doğum tarihini yyyy-MM-dd formatına çeviriyoruz\n    formData.append('birthDate', formattedDate); // Doğum tarihi\n    this.userService.updateUser(userId, formData).subscribe({\n      next: response => {\n        console.log('Kullanıcı başarıyla güncellendi:', response);\n        this.router.navigate(['admin/user/user-list']); // Kullanıcı listesine yönlendirme\n      },\n\n      error: error => {\n        console.error('Kullanıcı güncellenirken hata oluştu:', error);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function UserEditComponent_Factory(t) {\n      return new (t || UserEditComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserEditComponent,\n      selectors: [[\"app-user-edit\"]],\n      decls: 26,\n      vars: 5,\n      consts: [[1, \"container\", \"mt-5\"], [1, \"mb-4\", \"text-center\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"userName\"], [\"type\", \"text\", \"id\", \"userName\", \"name\", \"userName\", \"placeholder\", \"Enter username\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"placeholder\", \"Enter email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"placeholder\", \"Enter name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"surname\"], [\"type\", \"text\", \"id\", \"surname\", \"name\", \"surname\", \"placeholder\", \"Enter surname\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"birthDate\"], [\"type\", \"date\", \"id\", \"birthDate\", \"name\", \"birthDate\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-3\"]],\n      template: function UserEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n          i0.ɵɵtext(2, \"Update User\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function UserEditComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.updateUser();\n          });\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n          i0.ɵɵtext(6, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"input\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function UserEditComponent_Template_input_ngModelChange_7_listener($event) {\n            return ctx.user.userName = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 6);\n          i0.ɵɵtext(10, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 7);\n          i0.ɵɵlistener(\"ngModelChange\", function UserEditComponent_Template_input_ngModelChange_11_listener($event) {\n            return ctx.user.email = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 8);\n          i0.ɵɵtext(14, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"input\", 9);\n          i0.ɵɵlistener(\"ngModelChange\", function UserEditComponent_Template_input_ngModelChange_15_listener($event) {\n            return ctx.user.name = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"div\", 3)(17, \"label\", 10);\n          i0.ɵɵtext(18, \"Surname\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"input\", 11);\n          i0.ɵɵlistener(\"ngModelChange\", function UserEditComponent_Template_input_ngModelChange_19_listener($event) {\n            return ctx.user.surname = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(20, \"div\", 3)(21, \"label\", 12);\n          i0.ɵɵtext(22, \"Do\\u011Fum Tarixi\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"input\", 13);\n          i0.ɵɵlistener(\"ngModelChange\", function UserEditComponent_Template_input_ngModelChange_23_listener($event) {\n            return ctx.user.birthDate = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(24, \"button\", 14);\n          i0.ɵɵtext(25, \"Update User\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngModel\", ctx.user.userName);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.user.name);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.user.surname);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.user.birthDate);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["UserEditComponent","constructor","userService","route","router","user","id","email","userName","name","surname","birthDate","ngOnInit","userId","snapshot","params","loadUser","getUserById","subscribe","next","response","console","log","error","updateUser","formData","FormData","append","formattedDate","Date","toISOString","split","navigate","i0","ɵɵdirectiveInject","i1","UserService","i2","ActivatedRoute","Router","selectors","decls","vars","consts","template","UserEditComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","UserEditComponent_Template_form_ngSubmit_3_listener","UserEditComponent_Template_input_ngModelChange_7_listener","$event","UserEditComponent_Template_input_ngModelChange_11_listener","UserEditComponent_Template_input_ngModelChange_15_listener","UserEditComponent_Template_input_ngModelChange_19_listener","UserEditComponent_Template_input_ngModelChange_23_listener","ɵɵadvance","ɵɵproperty"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\user\\user-edit\\user-edit.component.ts","D:\\MMU\\Frontend\\client\\src\\app\\admin\\user\\user-edit\\user-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.scss']\n})\nexport class UserEditComponent implements OnInit {\n  user: any = {\n    id: '',\n    email: '',\n    userName: '',\n    name: '',\n    surname:'',\n    birthDate: ''\n  };\n  constructor(private userService: UserService, private route: ActivatedRoute, private router: Router) {}\n\n  ngOnInit(): void {\n    \n    const userId = this.route.snapshot.params['id'];\n    this.loadUser(userId);\n    // Burada kullanıcı detaylarını API'den çekebilirsiniz\n  }\n  loadUser(userId: number) {\n    this.userService.getUserById(userId).subscribe({\n      next: (response) => {\n        console.log('User loaded successfully:', response);\n        this.user = response;\n      },\n      error: (error) => {\n        console.error('Error loading user:', error);\n      },\n    });\n  }\n  updateUser(): void {\n    const userId = this.route.snapshot.params['id']; \n    const formData = new FormData();\n    formData.append('userName', this.user.userName);  // Kullanıcı adı\n    formData.append('email', this.user.email);        // Email\n    formData.append('name', this.user.name);          // Ad\n    formData.append('surname', this.user.surname);    // Soyad\n    formData.append('birthDate', this.user.birthDate);   \n    const formattedDate = new Date(this.user.birthDate).toISOString().split('T')[0]; // Doğum tarihini yyyy-MM-dd formatına çeviriyoruz\n    formData.append('birthDate', formattedDate); // Doğum tarihi\n    this.userService.updateUser(userId, formData).subscribe({\n      next: (response) => {\n        console.log('Kullanıcı başarıyla güncellendi:', response);\n        this.router.navigate(['admin/user/user-list']); // Kullanıcı listesine yönlendirme\n      },\n      error: (error) => {\n        console.error('Kullanıcı güncellenirken hata oluştu:', error);\n      },\n    });\n  \n  }\n}\n","<div class=\"container mt-5\">\n    <h2 class=\"mb-4 text-center\">Update User</h2>\n    <form (ngSubmit)=\"updateUser()\">\n        <div class=\"form-group\">\n            <label for=\"userName\">Username</label>\n            <input\n              type=\"text\"\n              id=\"userName\"\n              class=\"form-control\"\n              [(ngModel)]=\"user.userName\"\n              name=\"userName\"\n              placeholder=\"Enter username\"\n              required\n            />\n        </div>\n        <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              class=\"form-control\"\n              [(ngModel)]=\"user.email\"\n              name=\"email\"\n              placeholder=\"Enter email\"\n              required\n            />\n        </div>\n        <div class=\"form-group\">\n            <label for=\"name\">Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              class=\"form-control\"\n              [(ngModel)]=\"user.name\"\n              name=\"name\"\n              placeholder=\"Enter name\"\n              required\n            />\n        </div>\n        <div class=\"form-group\">\n            <label for=\"surname\">Surname</label>\n            <input\n              type=\"text\"\n              id=\"surname\"\n              class=\"form-control\"\n              [(ngModel)]=\"user.surname\"\n              name=\"surname\"\n              placeholder=\"Enter surname\"\n              required\n            />\n        </div>\n        <div class=\"form-group\">\n            <label for=\"birthDate\">Doğum Tarixi</label>\n            <input\n              type=\"date\"\n              id=\"birthDate\"\n              class=\"form-control\"\n              [(ngModel)]=\"user.birthDate\"\n              name=\"birthDate\"\n              required\n            />\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary mt-3\">Update User</button>\n    </form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}