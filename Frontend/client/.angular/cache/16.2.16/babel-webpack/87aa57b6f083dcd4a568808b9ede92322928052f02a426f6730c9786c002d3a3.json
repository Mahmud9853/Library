{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ChangeRoleComponent = class ChangeRoleComponent {\n  constructor(userService, fb, route, router) {\n    this.userService = userService;\n    this.fb = fb;\n    this.route = route;\n    this.router = router;\n    this.roles = [];\n    this.userId = null;\n    this.changeRoleForm = this.fb.group({\n      roles: ['']\n    });\n  }\n  ngOnInit() {\n    this.userId = this.route.snapshot.paramMap.get('id');\n    this.loadRoles();\n  }\n  loadRoles() {\n    this.userService.getRoles().subscribe({\n      next: roles => this.roles = roles,\n      error: err => console.error('Error loading roles', err)\n    });\n  }\n  onSubmit() {\n    const selectedRole = this.changeRoleForm.get('roles')?.value;\n    if (!selectedRole) {\n      alert('Please select a role.');\n      return;\n    }\n    if (this.userId) {\n      this.userService.changeUserRole(this.userId, [selectedRole]).subscribe({\n        next: () => {\n          alert('Role updated successfully');\n          this.router.navigate(['/admin/user/user-list']); // Admin paneline dön\n        },\n\n        error: err => console.error('Error updating role', err)\n      });\n    }\n  }\n};\nChangeRoleComponent = __decorate([Component({\n  selector: 'app-change-role',\n  templateUrl: './change-role.component.html',\n  styleUrls: ['./change-role.component.scss']\n})], ChangeRoleComponent);","map":{"version":3,"names":["Component","ChangeRoleComponent","constructor","userService","fb","route","router","roles","userId","changeRoleForm","group","ngOnInit","snapshot","paramMap","get","loadRoles","getRoles","subscribe","next","error","err","console","onSubmit","selectedRole","value","alert","changeUserRole","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\user\\change-role\\change-role.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-change-role',\n  templateUrl: './change-role.component.html',\n  styleUrls: ['./change-role.component.scss'],\n})\nexport class ChangeRoleComponent implements OnInit {\n  roles: string[] = [];\n  changeRoleForm: FormGroup;\n  userId: string | null = null;\n\n  constructor(\n    private userService: UserService,\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.changeRoleForm = this.fb.group({\n      roles: [''],\n    });\n  }\n\n  ngOnInit(): void {\n    this.userId = this.route.snapshot.paramMap.get('id');\n    this.loadRoles();\n  }\n\n  loadRoles(): void {\n    this.userService.getRoles().subscribe({\n      next: (roles) => (this.roles = roles),\n      error: (err) => console.error('Error loading roles', err),\n    });\n  }\n\n  onSubmit(): void {\n    const selectedRole = this.changeRoleForm.get('roles')?.value;\n  \n    if (!selectedRole) {\n      alert('Please select a role.');\n      return;\n    }\n  \n    if (this.userId) {\n      this.userService\n        .changeUserRole(this.userId, [selectedRole])\n        .subscribe({\n          next: () => {\n            alert('Role updated successfully');\n            this.router.navigate(['/admin/user/user-list']); // Admin paneline dön\n          },\n          error: (err) => console.error('Error updating role', err),\n        });\n    }\n  }\n  \n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAW1C,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAK9BC,YACUC,WAAwB,EACxBC,EAAe,EACfC,KAAqB,EACrBC,MAAc;IAHd,KAAAH,WAAW,GAAXA,WAAW;IACX,KAAAC,EAAE,GAAFA,EAAE;IACF,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IARhB,KAAAC,KAAK,GAAa,EAAE;IAEpB,KAAAC,MAAM,GAAkB,IAAI;IAQ1B,IAAI,CAACC,cAAc,GAAG,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MAClCH,KAAK,EAAE,CAAC,EAAE;KACX,CAAC;EACJ;EAEAI,QAAQA,CAAA;IACN,IAAI,CAACH,MAAM,GAAG,IAAI,CAACH,KAAK,CAACO,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACpD,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP,IAAI,CAACZ,WAAW,CAACa,QAAQ,EAAE,CAACC,SAAS,CAAC;MACpCC,IAAI,EAAGX,KAAK,IAAM,IAAI,CAACA,KAAK,GAAGA,KAAM;MACrCY,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACF,KAAK,CAAC,qBAAqB,EAAEC,GAAG;KACzD,CAAC;EACJ;EAEAE,QAAQA,CAAA;IACN,MAAMC,YAAY,GAAG,IAAI,CAACd,cAAc,CAACK,GAAG,CAAC,OAAO,CAAC,EAAEU,KAAK;IAE5D,IAAI,CAACD,YAAY,EAAE;MACjBE,KAAK,CAAC,uBAAuB,CAAC;MAC9B;;IAGF,IAAI,IAAI,CAACjB,MAAM,EAAE;MACf,IAAI,CAACL,WAAW,CACbuB,cAAc,CAAC,IAAI,CAAClB,MAAM,EAAE,CAACe,YAAY,CAAC,CAAC,CAC3CN,SAAS,CAAC;QACTC,IAAI,EAAEA,CAAA,KAAK;UACTO,KAAK,CAAC,2BAA2B,CAAC;UAClC,IAAI,CAACnB,MAAM,CAACqB,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;QACnD,CAAC;;QACDR,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACF,KAAK,CAAC,qBAAqB,EAAEC,GAAG;OACzD,CAAC;;EAER;CAED;AAjDYnB,mBAAmB,GAAA2B,UAAA,EAL/B5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACW9B,mBAAmB,CAiD/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}