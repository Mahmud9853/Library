{"ast":null,"code":"import { map } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthorService = /*#__PURE__*/(() => {\n  class AuthorService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.apiUrl;\n      this.authors = [];\n    }\n    getAuthors() {\n      return this.http.get(this.baseUrl + 'Author').pipe(map(response => response.$values) // $values içindeki verileri alın\n      );\n    }\n\n    addAuthor(author) {\n      return this.http.post(this.baseUrl + 'Author/create', author);\n    }\n    deleteAuthor(id) {\n      return this.http.delete(`${this.baseUrl}Author/${id}`, {\n        responseType: 'text'\n      });\n    }\n    updateAuthor(id, author) {\n      return this.http.put(`${this.baseUrl + 'Author/update'}/${id}`, author, {\n        responseType: 'text'\n      });\n    }\n    getAuthorById(id) {\n      return this.http.get(`${this.baseUrl + 'Author'}/${id}`);\n    }\n    static {\n      this.ɵfac = function AuthorService_Factory(t) {\n        return new (t || AuthorService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthorService,\n        factory: AuthorService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthorService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}