{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nexport let AuthGuard = class AuthGuard {\n  constructor(accountService, router) {\n    this.accountService = accountService;\n    this.router = router;\n  }\n  canActivate() {\n    if (this.accountService.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n};\nAuthGuard = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthGuard);\nexport let AdminGuard = class AdminGuard {\n  constructor(accountService, router) {\n    this.accountService = accountService;\n    this.router = router;\n  }\n  canActivate() {\n    const role = this.accountService.getRole();\n    if (role === 'Admin') {\n      return true;\n    } else {\n      this.router.navigate(['/home']);\n      return false;\n    }\n  }\n};\nAdminGuard = __decorate([Injectable({\n  providedIn: 'root'\n})], AdminGuard);","map":{"version":3,"names":["Injectable","AuthGuard","constructor","accountService","router","canActivate","isLoggedIn","navigate","__decorate","providedIn","AdminGuard","role","getRole"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\core\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AccountService } from './account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private accountService: AccountService, private router: Router) {}\n\n  canActivate(): boolean {\n    if (this.accountService.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private accountService: AccountService, private router: Router) {}\n\n  canActivate(): boolean {\n    const role = this.accountService.getRole();\n    if (role === 'Admin') {\n      return true;\n    } else {\n      this.router.navigate(['/home']);\n      return false;\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAOnC,WAAMC,SAAS,GAAf,MAAMA,SAAS;EACpBC,YAAoBC,cAA8B,EAAUC,MAAc;IAAtD,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;EAAW;EAE7EC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACF,cAAc,CAACG,UAAU,EAAE,EAAE;MACpC,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;EAEhB;CACD;AAXYN,SAAS,GAAAO,UAAA,EAHrBR,UAAU,CAAC;EACVS,UAAU,EAAE;CACb,CAAC,C,EACWR,SAAS,CAWrB;AAKM,WAAMS,UAAU,GAAhB,MAAMA,UAAU;EACrBR,YAAoBC,cAA8B,EAAUC,MAAc;IAAtD,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;EAAW;EAE7EC,WAAWA,CAAA;IACT,MAAMM,IAAI,GAAG,IAAI,CAACR,cAAc,CAACS,OAAO,EAAE;IAC1C,IAAID,IAAI,KAAK,OAAO,EAAE;MACpB,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACP,MAAM,CAACG,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,OAAO,KAAK;;EAEhB;CACD;AAZYG,UAAU,GAAAF,UAAA,EAHtBR,UAAU,CAAC;EACVS,UAAU,EAAE;CACb,CAAC,C,EACWC,UAAU,CAYtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}