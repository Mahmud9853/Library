{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../slide.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction SlideDetailComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Slide Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\")(4, \"strong\");\n    i0.ɵɵtext(5, \"ID:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\")(8, \"strong\");\n    i0.ɵɵtext(9, \"Title:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"p\")(12, \"strong\");\n    i0.ɵɵtext(13, \"Description:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"p\")(16, \"strong\");\n    i0.ɵɵtext(17, \"Content:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(18, \"div\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.slideId, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.slideDetail.title, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.slideDetail.description, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.slideDetail.content, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction SlideDetailComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Loading slide details...\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class SlideDetailComponent {\n  constructor(slideService, route) {\n    this.slideService = slideService;\n    this.route = route;\n    this.slideId = null;\n  }\n  ngOnInit() {\n    this.slideId = Number(this.route.snapshot.paramMap.get('id'));\n    if (this.slideId) {\n      this.loadSlide(this.slideId);\n    }\n  }\n  loadSlide(id) {\n    this.slideService.getSlideById(id).subscribe({\n      next: response => {\n        this.slide = response;\n      },\n      error: error => {\n        console.error('Error fetching slide details:', error);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function SlideDetailComponent_Factory(t) {\n      return new (t || SlideDetailComponent)(i0.ɵɵdirectiveInject(i1.SlideService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SlideDetailComponent,\n      selectors: [[\"app-slide-detail\"]],\n      decls: 3,\n      vars: 2,\n      consts: [[4, \"ngIf\", \"ngIfElse\"], [\"loading\", \"\"], [3, \"innerHTML\"]],\n      template: function SlideDetailComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, SlideDetailComponent_div_0_Template, 19, 4, \"div\", 0);\n          i0.ɵɵtemplate(1, SlideDetailComponent_ng_template_1_Template, 2, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const _r1 = i0.ɵɵreference(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.slideDetail)(\"ngIfElse\", _r1);\n        }\n      },\n      dependencies: [i3.NgIf],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","slideId","slideDetail","title","description","ɵɵproperty","content","ɵɵsanitizeHtml","SlideDetailComponent","constructor","slideService","route","ngOnInit","Number","snapshot","paramMap","get","loadSlide","id","getSlideById","subscribe","next","response","slide","error","console","ɵɵdirectiveInject","i1","SlideService","i2","ActivatedRoute","selectors","decls","vars","consts","template","SlideDetailComponent_Template","rf","ctx","ɵɵtemplate","SlideDetailComponent_div_0_Template","SlideDetailComponent_ng_template_1_Template","ɵɵtemplateRefExtractor","_r1"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\slide\\slide-detail\\slide-detail.component.ts","D:\\MMU\\Frontend\\client\\src\\app\\admin\\slide\\slide-detail\\slide-detail.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SlideService } from '../slide.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-slide-detail',\n  templateUrl: './slide-detail.component.html',\n  styleUrls: ['./slide-detail.component.scss']\n})\nexport class SlideDetailComponent implements OnInit {\n slideId: number | null = null;\n slide: any;\n\n constructor(private slideService: SlideService,  private route: ActivatedRoute,){}\n\n  ngOnInit(): void {\n    this.slideId = Number(this.route.snapshot.paramMap.get('id'));\n    if (this.slideId) {\n      this.loadSlide(this.slideId);\n    }\n  }\n  loadSlide(id: number): void {\n    this.slideService.getSlideById(id).subscribe({\n      next: (response: any) => {\n        this.slide = response;\n      },\n      error: (error) => {\n        console.error('Error fetching slide details:', error);\n      }\n    });\n  }\n\n}\n","<div *ngIf=\"slideDetail; else loading\">\n    <h2>Slide Details</h2>\n    <p><strong>ID:</strong> {{ slideId }}</p>\n    <p><strong>Title:</strong> {{ slideDetail.title }}</p>\n    <p><strong>Description:</strong> {{ slideDetail.description }}</p>\n    <p><strong>Content:</strong></p>\n    <div [innerHTML]=\"slideDetail.content\"></div>\n  </div>\n  \n  <ng-template #loading>\n    <p>Loading slide details...</p>\n  </ng-template>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}