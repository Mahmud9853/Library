{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(accountService, router) {\n    this.accountService = accountService;\n    this.router = router;\n    this.model = {};\n  }\n  login() {\n    this.accountService.login(this.model).subscribe({\n      next: () => this.router.navigateByUrl('/'),\n      error: error => console.log(error)\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","accountService","router","model","login","subscribe","next","navigateByUrl","error","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\account\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AccountService } from '../account.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  model: any = {};\n\n  constructor(private accountService: AccountService, private router: Router) {}\n\n  login() {\n    this.accountService.login(this.model).subscribe({\n      next: () => this.router.navigateByUrl('/'),\n      error: error => console.log(error)\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAGzBC,YAAoBC,cAA8B,EAAUC,MAAc;IAAtD,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAFlE,KAAAC,KAAK,GAAQ,EAAE;EAE8D;EAE7EC,KAAKA,CAAA;IACH,IAAI,CAACH,cAAc,CAACG,KAAK,CAAC,IAAI,CAACD,KAAK,CAAC,CAACE,SAAS,CAAC;MAC9CC,IAAI,EAAEA,CAAA,KAAM,IAAI,CAACJ,MAAM,CAACK,aAAa,CAAC,GAAG,CAAC;MAC1CC,KAAK,EAAEA,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK;KAClC,CAAC;EACJ;CACD;AAXYT,cAAc,GAAAY,UAAA,EAL1Bb,SAAS,CAAC;EACTc,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWf,cAAc,CAW1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}