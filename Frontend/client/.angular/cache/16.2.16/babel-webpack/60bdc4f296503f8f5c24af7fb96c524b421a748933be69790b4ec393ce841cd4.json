{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../book.service\";\nimport * as i2 from \"../../type/type.service\";\nimport * as i3 from \"../../author/author.service\";\nimport * as i4 from \"@angular/common\";\nfunction BookListComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const book_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r1.bookAuthor);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r1.bookCategory);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r1.bookType);\n  }\n}\nexport class BookListComponent {\n  constructor(bookService, typeService,\n  // private categoryService: CategoryService,\n  authorService) {\n    this.bookService = bookService;\n    this.typeService = typeService;\n    this.authorService = authorService;\n    this.books = [];\n    this.types = [];\n    this.categories = [];\n    this.authors = [];\n    this.totalRecords = 0;\n    this.bookParams = {\n      search: '',\n      typeId: '',\n      categoryId: '',\n      authorId: '',\n      pageNumber: 1,\n      pageSize: 10\n    };\n  }\n  ngOnInit() {\n    this.getBooks();\n    this.getTypes();\n    // this.getCategories();\n    this.getAuthors();\n  }\n  getBooks() {\n    this.bookService.getBooks().subscribe({\n      next: response => {\n        console.log('API Response:', response); // Konsola yazdırın\n        this.books = response;\n      },\n      error: error => {\n        console.error('Error fetching books:', error); // Hataları yazdırın\n      }\n    });\n  }\n\n  static {\n    this.ɵfac = function BookListComponent_Factory(t) {\n      return new (t || BookListComponent)(i0.ɵɵdirectiveInject(i1.BookService), i0.ɵɵdirectiveInject(i2.TypeService), i0.ɵɵdirectiveInject(i3.AuthorService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: BookListComponent,\n      selectors: [[\"app-book-list\"]],\n      decls: 13,\n      vars: 1,\n      consts: [[4, \"ngFor\", \"ngForOf\"]],\n      template: function BookListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"table\")(1, \"thead\")(2, \"tr\")(3, \"th\");\n          i0.ɵɵtext(4, \"Title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"th\");\n          i0.ɵɵtext(6, \"Author\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"th\");\n          i0.ɵɵtext(8, \"Category\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"th\");\n          i0.ɵɵtext(10, \"Type\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(11, \"tbody\");\n          i0.ɵɵtemplate(12, BookListComponent_tr_12_Template, 9, 4, \"tr\", 0);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"ngForOf\", ctx.books);\n        }\n      },\n      dependencies: [i4.NgForOf],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","book_r1","title","bookAuthor","bookCategory","bookType","BookListComponent","constructor","bookService","typeService","authorService","books","types","categories","authors","totalRecords","bookParams","search","typeId","categoryId","authorId","pageNumber","pageSize","ngOnInit","getBooks","getTypes","getAuthors","subscribe","next","response","console","log","error","ɵɵdirectiveInject","i1","BookService","i2","TypeService","i3","AuthorService","selectors","decls","vars","consts","template","BookListComponent_Template","rf","ctx","ɵɵtemplate","BookListComponent_tr_12_Template","ɵɵproperty"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\book\\book-list\\book-list.component.ts","D:\\MMU\\Frontend\\client\\src\\app\\admin\\book\\book-list\\book-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {Book} from 'src/app/shared/models/book'; \nimport { BookService } from '../book.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BookParams } from 'src/app/shared/models/bookParams';\nimport { TypeService } from '../../type/type.service';\nimport { AuthorService } from '../../author/author.service';\n@Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.scss']\n})\nexport class BookListComponent implements OnInit{\n\n    books: any[] = [];\n    types: string[] = [];\n    categories: string[] = [];\n    authors: string[] = [];\n    totalRecords: number = 0;\n  \n    bookParams = {\n      search: '',\n      typeId: '',\n      categoryId: '',\n      authorId: '',\n      pageNumber: 1,\n      pageSize: 10,\n    };\n  \n    constructor(\n      private bookService: BookService,\n      private typeService: TypeService,\n      // private categoryService: CategoryService,\n      private authorService: AuthorService\n    ) {}\n  \n    ngOnInit(): void {\n      this.getBooks();\n      this.getTypes();\n      // this.getCategories();\n      this.getAuthors();\n    }\n\n    getBooks() {\n      this.bookService.getBooks().subscribe({\n        next: (response: any) => {\n          console.log('API Response:', response); // Konsola yazdırın\n          this.books = response;\n        },\n        error: (error) => {\n          console.error('Error fetching books:', error); // Hataları yazdırın\n        }\n      });\n    }\n  \n    // getBooks(): void {\n    //   this.bookService.getBooks(this.bookParams).subscribe(\n    //     (response) => {\n    //       console.log('API Response:', response);\n          \n    //       // Gelen verideki $values dizisini alıyoruz\n    //       if (response && response.$values) {\n    //         this.books = response.$values;\n    //       } else {\n    //         this.books = [];\n    //       }\n    //     },\n    //     (error) => {\n    //       console.error('Error fetching books:', error);\n    //     }\n    //   );\n    // }\n    \n  \n    // getTypes(): void {\n    //   this.typeService.getTypes().subscribe((types) => (this.types = types));\n    // }\n  \n    // getCategories(): void {\n    //   this.categoryService.getCategories().subscribe((categories) => (this.categories = categories));\n    // }\n  \n    // getAuthors(): void {\n    //   this.authorService.getAuthors().subscribe((authors) => (this.authors = authors));\n    // }\n  \n    // onSearch(search: string): void {\n    //   this.bookParams.search = search;\n    //   this.bookParams.pageNumber = 1;\n    //   this.getBooks();\n    // }\n  \n    // applyFilters(): void {\n    //   this.bookParams.pageNumber = 1;\n    //   this.getBooks();\n    // }\n  \n    // changePage(pageNumber: number): void {\n    //   if (pageNumber > 0) {\n    //     this.bookParams.pageNumber = pageNumber;\n    //     this.getBooks();\n    //   }\n    // }\n  }\n","<!-- <input\n  #inputRef\n  type=\"text\"\n  placeholder=\"Search...\"\n  (input)=\"onSearch(inputRef.value)\"\n/>\n\n\n<select [(ngModel)]=\"bookParams.typeId\" (change)=\"applyFilters()\">\n  <option value=\"\">All Types</option>\n  <option *ngFor=\"let type of types\" [value]=\"type\">{{ type }}</option>\n</select>\n\n<select [(ngModel)]=\"bookParams.categoryId\" (change)=\"applyFilters()\">\n  <option value=\"\">All Categories</option>\n  <option *ngFor=\"let category of categories\" [value]=\"category\">{{ category }}</option>\n</select>\n\n<select [(ngModel)]=\"bookParams.authorId\" (change)=\"applyFilters()\">\n  <option value=\"\">All Authors</option>\n  <option *ngFor=\"let author of authors\" [value]=\"author\">{{ author }}</option>\n</select> -->\n\n<table>\n  <thead>\n    <tr>\n      <th>Title</th>\n      <th>Author</th>\n      <th>Category</th>\n      <th>Type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let book of books\">\n      <td>{{ book.title }}</td>\n      <td>{{ book.bookAuthor }}</td>\n      <td>{{ book.bookCategory }}</td>\n      <td>{{ book.bookType }}</td>\n    </tr>\n  </tbody>\n</table>\n\n<!-- <div class=\"pagination\">\n  <button (click)=\"changePage(bookParams.pageNumber - 1)\" [disabled]=\"bookParams.pageNumber === 1\">Previous</button>\n  <span>Page {{ bookParams.pageNumber }}</span>\n  <button (click)=\"changePage(bookParams.pageNumber + 1)\" [disabled]=\"books.length < bookParams.pageSize\">Next</button>\n</div> -->\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}