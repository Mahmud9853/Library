{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../type.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport let TypeEditComponent = /*#__PURE__*/(() => {\n  class TypeEditComponent {\n    constructor(typeService, router, route) {\n      this.typeService = typeService;\n      this.router = router;\n      this.route = route;\n      this.type = {\n        id: 0,\n        name: ''\n      };\n    }\n    ngOnInit() {\n      const typeId = this.route.snapshot.params['id'];\n      if (typeId) {\n        this.loadType();\n      }\n    }\n    loadType() {\n      const id = Number(this.route.snapshot.paramMap.get('id'));\n      if (id) {\n        this.typeService.getTypeById(id).subscribe({\n          next: response => {\n            console.log('API Response:', response);\n            this.type = response;\n          },\n          error: error => {\n            console.error('Error loading type details:', error);\n          }\n        });\n      }\n    }\n    updateType() {\n      const formData = new FormData();\n      formData.append('name', this.type.name);\n      this.typeService.updateType(this.type.id, formData).subscribe({\n        next: response => {\n          console.log('Type updated successfully:', response);\n          // Backend'den dönen güncellenmiş veriyi atayın\n          this.type = response;\n          this.router.navigate(['/admin/type/type-list']); // Başarılı güncelleme sonrası yönlendirme\n        },\n\n        error: error => {\n          console.error('Error updating type:', error);\n        }\n      });\n    }\n    static {\n      this.ɵfac = function TypeEditComponent_Factory(t) {\n        return new (t || TypeEditComponent)(i0.ɵɵdirectiveInject(i1.TypeService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: TypeEditComponent,\n        selectors: [[\"app-type-edit\"]],\n        decls: 10,\n        vars: 1,\n        consts: [[1, \"container\", \"mt-5\"], [1, \"mb-4\"], [3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"id\", \"name\", \"type\", \"text\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n        template: function TypeEditComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n            i0.ɵɵtext(2, \"Edit Type\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 2);\n            i0.ɵɵlistener(\"ngSubmit\", function TypeEditComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.updateType();\n            });\n            i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n            i0.ɵɵtext(6, \"Tipi:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"input\", 5);\n            i0.ɵɵlistener(\"ngModelChange\", function TypeEditComponent_Template_input_ngModelChange_7_listener($event) {\n              return ctx.type.name = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(8, \"button\", 6);\n            i0.ɵɵtext(9, \"Update Type\");\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"ngModel\", ctx.type.name);\n          }\n        },\n        dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm]\n      });\n    }\n  }\n  return TypeEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}