{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../account.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nconst _c0 = function () {\n  return [\"/account/resetpassword\"];\n};\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, accountService, router) {\n      this.fb = fb;\n      this.accountService = accountService;\n      this.router = router;\n      this.errorMessage = '';\n      this.loginForm = this.fb.group({\n        userName: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    }\n    onSubmit() {\n      if (this.loginForm.invalid) {\n        console.error('Form is invalid');\n        return;\n      }\n      const loginData = {\n        userName: this.loginForm.get('userName')?.value,\n        password: this.loginForm.get('password')?.value\n      };\n      this.accountService.login(loginData).subscribe({\n        next: response => {\n          console.log('Login successful:', response);\n          if (response && response.token && response.role) {\n            this.accountService.saveToken(response.token);\n            this.accountService.setRole(response.role);\n            // Kullanıcının rolüne göre yönlendirme\n            if (response.role === 'Admin' || response.role === 'Client') {\n              this.router.navigate(['/home']); // Home sayfasına yönlendir\n            } else {\n              this.errorMessage = 'Unauthorized role';\n            }\n          } else {\n            this.errorMessage = 'Invalid username or password';\n          }\n        },\n        error: error => {\n          console.error('Login failed:', error);\n          this.errorMessage = 'An error occurred during login';\n        }\n      });\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(t) {\n        return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        decls: 18,\n        vars: 5,\n        consts: [[1, \"background-image\"], [1, \"overlay\"], [1, \"content\"], [1, \"login-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"my-2\", 2, \"display\", \"flex\", \"justify-content\", \"center\"], [\"id\", \"userName\", \"formControlName\", \"userName\", \"placeholder\", \"\\u0130stifad\\u0259\\u00E7i ad\\u0131n\\u0131z\\u0131 daxil edin\", \"type\", \"text\", 1, \"form-control\", \"w-50\"], [\"id\", \"password\", \"formControlName\", \"password\", \"type\", \"password\", \"placeholder\", \"\\u015Eifr\\u0259nizi daxil edin\", 1, \"form-control\", \"w-50\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mx-2\", 3, \"disabled\"], [\"routerLink\", \"/account/register\", 1, \"btn\", \"btn-primary\"], [\"class\", \"alert alert-danger mt-3\", 4, \"ngIf\"], [1, \"my-5\", \"resetpassword\", 3, \"routerLink\"], [1, \"alert\", \"alert-danger\", \"mt-3\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵelement(1, \"div\", 1);\n            i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"h2\");\n            i0.ɵɵtext(5, \"Login\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"form\", 4);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(7, \"div\", 5);\n            i0.ɵɵelement(8, \"input\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"div\", 5);\n            i0.ɵɵelement(10, \"input\", 7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"button\", 8);\n            i0.ɵɵtext(12, \"Login\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"a\", 9);\n            i0.ɵɵtext(14, \"Qeydiyyat\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(15, LoginComponent_div_15_Template, 2, 1, \"div\", 10);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(16, \"a\", 11);\n            i0.ɵɵtext(17, \"Parolu yenil\\u0259\");\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c0));\n          }\n        },\n        dependencies: [i4.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\"body[_ngcontent-%COMP%], html[_ngcontent-%COMP%]{margin:0;padding:0;height:100%;width:100%}.bg[_ngcontent-%COMP%]{height:100vh}.background-image[_ngcontent-%COMP%]{background:url(\\\"/assets/images/WhatsApp Image 2024-12-06 at 11.08.58_14dc8878.jpg\\\") no-repeat center center/cover;height:100vh;width:100%;display:flex;align-items:center;justify-content:center;text-align:center;padding:2rem;color:#fff;position:relative}.overlay[_ngcontent-%COMP%]{position:absolute;inset:0;background-color:#00000080;z-index:1}.content[_ngcontent-%COMP%]{z-index:2;max-width:800px;width:100%}.form-floating[_ngcontent-%COMP%]{position:relative}.form-floating[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{padding:.5rem .75rem;font-size:1rem;height:38px}.form-floating[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::placeholder{color:#6c757d;font-size:1rem}input[_ngcontent-%COMP%]:invalid{border-color:#dc3545}input[_ngcontent-%COMP%]:invalid:focus{box-shadow:0 0 0 .25rem #dc354540}.d-grid[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{font-size:1rem;padding:.75rem;border-radius:.25rem}.resetpassword[_ngcontent-%COMP%]{color:bisque;text-decoration:none}.resetpassword[_ngcontent-%COMP%]:hover{text-decoration:underline}\"]\n      });\n    }\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}