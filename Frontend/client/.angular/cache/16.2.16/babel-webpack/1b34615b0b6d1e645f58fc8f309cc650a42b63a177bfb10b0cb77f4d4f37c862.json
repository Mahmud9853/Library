{"ast":null,"code":"import { map } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let SlideService = /*#__PURE__*/(() => {\n  class SlideService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.apiUrl;\n      this.slides = [];\n    }\n    getAllSlides() {\n      return this.http.get(`${this.baseUrl}Slide`).pipe(map(response => response.$values) // $values içindeki verileri Slide[] tipine dönüştür\n      );\n    }\n\n    getSlideById(id) {\n      return this.http.get(`${this.baseUrl}Slide/${id}`); // $values içindeki verileri Slide[] tipine dönüştür\n    }\n\n    createSlide(formData) {\n      return this.http.post(`${this.baseUrl}Slide/create`, formData);\n    }\n    updateSlide(id, slide) {\n      return this.http.put(`${this.baseUrl}Slide/update/${id}`, slide);\n    }\n    deleteSlide(id) {\n      return this.http.delete(`${this.baseUrl}Slide/${id}`, {\n        responseType: 'text'\n      });\n    }\n    static {\n      this.ɵfac = function SlideService_Factory(t) {\n        return new (t || SlideService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: SlideService,\n        factory: SlideService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return SlideService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}