{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../user.service\";\nexport class ChangeRoleComponent {\n  constructor(fb, userService) {\n    this.fb = fb;\n    this.userService = userService;\n    this.availableRoles = [];\n    this.errorMessage = null;\n    this.changeRoleForm = this.fb.group({\n      userId: ['', Validators.required],\n      roles: this.fb.array([], Validators.required)\n    });\n  }\n  ngOnInit() {\n    this.userService.getAvailableRoles().subscribe({\n      next: roles => this.availableRoles = roles,\n      error: err => console.error('Failed to load roles:', err)\n    });\n  }\n  onSubmit() {\n    if (this.changeRoleForm.invalid) {\n      this.errorMessage = 'Form is invalid.';\n      return;\n    }\n    const {\n      userId,\n      roles\n    } = this.changeRoleForm.value;\n    this.userService.changeRole(userId, roles).subscribe({\n      next: res => {\n        console.log('Role updated successfully:', res);\n        this.errorMessage = null;\n      },\n      error: err => {\n        console.error('Failed to update role:', err);\n        this.errorMessage = 'Failed to update role.';\n      }\n    });\n  }\n  static {\n    this.ɵfac = function ChangeRoleComponent_Factory(t) {\n      return new (t || ChangeRoleComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChangeRoleComponent,\n      selectors: [[\"app-change-role\"]],\n      decls: 2,\n      vars: 0,\n      template: function ChangeRoleComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"change-role works!\");\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","ChangeRoleComponent","constructor","fb","userService","availableRoles","errorMessage","changeRoleForm","group","userId","required","roles","array","ngOnInit","getAvailableRoles","subscribe","next","error","err","console","onSubmit","invalid","value","changeRole","res","log","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","UserService","selectors","decls","vars","template","ChangeRoleComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\user\\change-role\\change-role.component.ts","D:\\MMU\\Frontend\\client\\src\\app\\admin\\user\\change-role\\change-role.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-change-role',\n  templateUrl: './change-role.component.html',\n  styleUrls: ['./change-role.component.scss'],\n})\nexport class ChangeRoleComponent implements OnInit {\n  changeRoleForm: FormGroup;\n  availableRoles: string[] = [];\n  errorMessage: string | null = null;\n\n  constructor(private fb: FormBuilder, private userService: UserService) {\n    this.changeRoleForm = this.fb.group({\n      userId: ['', Validators.required],\n      roles: this.fb.array([], Validators.required),\n    });\n  }\n\n  ngOnInit(): void {\n    this.userService.getAvailableRoles().subscribe({\n      next: (roles) => (this.availableRoles = roles),\n      error: (err) => console.error('Failed to load roles:', err),\n    });\n  }\n\n  onSubmit(): void {\n    if (this.changeRoleForm.invalid) {\n      this.errorMessage = 'Form is invalid.';\n      return;\n    }\n\n    const { userId, roles } = this.changeRoleForm.value;\n    this.userService.changeRole(userId, roles).subscribe({\n      next: (res) => {\n        console.log('Role updated successfully:', res);\n        this.errorMessage = null;\n      },\n      error: (err) => {\n        console.error('Failed to update role:', err);\n        this.errorMessage = 'Failed to update role.';\n      },\n    });\n  }\n}\n","<p>change-role works!</p>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AAQnE,OAAM,MAAOC,mBAAmB;EAK9BC,YAAoBC,EAAe,EAAUC,WAAwB;IAAjD,KAAAD,EAAE,GAAFA,EAAE;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IAHxD,KAAAC,cAAc,GAAa,EAAE;IAC7B,KAAAC,YAAY,GAAkB,IAAI;IAGhC,IAAI,CAACC,cAAc,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAClCC,MAAM,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MACjCC,KAAK,EAAE,IAAI,CAACR,EAAE,CAACS,KAAK,CAAC,EAAE,EAAEZ,UAAU,CAACU,QAAQ;KAC7C,CAAC;EACJ;EAEAG,QAAQA,CAAA;IACN,IAAI,CAACT,WAAW,CAACU,iBAAiB,EAAE,CAACC,SAAS,CAAC;MAC7CC,IAAI,EAAGL,KAAK,IAAM,IAAI,CAACN,cAAc,GAAGM,KAAM;MAC9CM,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACF,KAAK,CAAC,uBAAuB,EAAEC,GAAG;KAC3D,CAAC;EACJ;EAEAE,QAAQA,CAAA;IACN,IAAI,IAAI,CAACb,cAAc,CAACc,OAAO,EAAE;MAC/B,IAAI,CAACf,YAAY,GAAG,kBAAkB;MACtC;;IAGF,MAAM;MAAEG,MAAM;MAAEE;IAAK,CAAE,GAAG,IAAI,CAACJ,cAAc,CAACe,KAAK;IACnD,IAAI,CAAClB,WAAW,CAACmB,UAAU,CAACd,MAAM,EAAEE,KAAK,CAAC,CAACI,SAAS,CAAC;MACnDC,IAAI,EAAGQ,GAAG,IAAI;QACZL,OAAO,CAACM,GAAG,CAAC,4BAA4B,EAAED,GAAG,CAAC;QAC9C,IAAI,CAAClB,YAAY,GAAG,IAAI;MAC1B,CAAC;MACDW,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACF,KAAK,CAAC,wBAAwB,EAAEC,GAAG,CAAC;QAC5C,IAAI,CAACZ,YAAY,GAAG,wBAAwB;MAC9C;KACD,CAAC;EACJ;;;uBApCWL,mBAAmB,EAAAyB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAnB9B,mBAAmB;MAAA+B,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCThCX,EAAA,CAAAa,cAAA,QAAG;UAAAb,EAAA,CAAAc,MAAA,yBAAkB;UAAAd,EAAA,CAAAe,YAAA,EAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}