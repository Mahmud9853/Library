{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../account.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction ResetpasswordComponent_p_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.message);\n  }\n}\nexport class ResetpasswordComponent {\n  constructor(fb, accountService, router) {\n    this.fb = fb;\n    this.accountService = accountService;\n    this.router = router;\n    this.message = '';\n    this.resetPasswordForm = this.fb.group({\n      userName: ['', [Validators.required]],\n      newPassword: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  onSubmit() {\n    console.log(this.resetPasswordForm.valid); // Formun geçerliliğini kontrol et\n    if (this.resetPasswordForm.valid) {\n      console.error('Form is invalid');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('UserName', this.resetPasswordForm.get('userName')?.value);\n    formData.append('Password', this.resetPasswordForm.get('newPassword')?.value);\n    this.accountService.resetPassword(formData).subscribe({\n      next: response => {\n        console.log(response.message, response);\n        this.message = response;\n        this.router.navigate(['account/login']);\n      },\n      error: error => {\n        this.message = error.error.message || 'An error occurred.';\n      }\n    });\n  }\n  static {\n    this.ɵfac = function ResetpasswordComponent_Factory(t) {\n      return new (t || ResetpasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ResetpasswordComponent,\n      selectors: [[\"app-resetpassword\"]],\n      decls: 17,\n      vars: 3,\n      consts: [[1, \"container\"], [1, \"row\"], [1, \"text-center\", \"my-3\"], [1, \"col-md-12\", \"justify-content-center\", 2, \"display\", \"flex\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"my-2\"], [\"for\", \"userName\", 1, \"my-2\"], [\"id\", \"userName\", \"formControlName\", \"userName\", \"placeholder\", \"\\u0130stifad\\u0259\\u00E7i ad\\u0131n\\u0131z\\u0131 daxil edin\", \"type\", \"text\", 1, \"form-control\", \"w-100\"], [\"for\", \"newPassword\", 1, \"my-2\"], [\"type\", \"password\", \"id\", \"newPassword\", \"formControlName\", \"newPassword\", 1, \"form-control\", \"w-100\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [4, \"ngIf\"]],\n      template: function ResetpasswordComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n          i0.ɵɵtext(3, \"Parolu yenil\\u0259\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function ResetpasswordComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n          i0.ɵɵtext(8, \"\\u0130stifad\\u0259\\u00E7i ad\\u0131\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"input\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 5)(11, \"label\", 8);\n          i0.ɵɵtext(12, \"Yeni Parol\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"button\", 10);\n          i0.ɵɵtext(15, \"Yenil\\u0259 parolu\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(16, ResetpasswordComponent_p_16_Template, 2, 1, \"p\", 11);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.resetPasswordForm);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"disabled\", ctx.resetPasswordForm.invalid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.message);\n        }\n      },\n      dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","message","ResetpasswordComponent","constructor","fb","accountService","router","resetPasswordForm","group","userName","required","newPassword","minLength","onSubmit","console","log","valid","error","formData","FormData","append","get","value","resetPassword","subscribe","next","response","navigate","ɵɵdirectiveInject","i1","FormBuilder","i2","AccountService","i3","Router","selectors","decls","vars","consts","template","ResetpasswordComponent_Template","rf","ctx","ɵɵlistener","ResetpasswordComponent_Template_form_ngSubmit_5_listener","ɵɵelement","ɵɵtemplate","ResetpasswordComponent_p_16_Template","ɵɵproperty","invalid"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\account\\resetpassword\\resetpassword.component.ts","D:\\MMU\\Frontend\\client\\src\\app\\account\\resetpassword\\resetpassword.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AccountService } from '../account.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-resetpassword',\n  templateUrl: './resetpassword.component.html',\n  styleUrls: ['./resetpassword.component.scss']\n})\nexport class ResetpasswordComponent {\n  resetPasswordForm: FormGroup;\n  message: string = '';\n\n  constructor(private fb: FormBuilder, private accountService: AccountService, private router: Router) {\n    this.resetPasswordForm = this.fb.group({\n      userName: ['', [Validators.required]],\n      newPassword: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  onSubmit(): void {\n    console.log(this.resetPasswordForm.valid);  // Formun geçerliliğini kontrol et\n    if (this.resetPasswordForm.valid) {\n      console.error('Form is invalid');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('UserName', this.resetPasswordForm.get('userName')?.value);\n    formData.append('Password', this.resetPasswordForm.get('newPassword')?.value);\n  \n      this.accountService.resetPassword(formData).subscribe({\n        next: (response) => {\n          console.log(response.message,response);\n          this.message = response;\n          this.router.navigate(['account/login']);\n        },\n        error: (error) => {\n          this.message = error.error.message || 'An error occurred.';\n        }\n      });\n    }\n  \n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <h2 class=\"text-center my-3\">Parolu yenilə</h2>\n        <div class=\"col-md-12 justify-content-center\" style=\"display:flex\">\n            <form [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group my-2\">\n                    <label for=\"userName\" class=\"my-2\">İstifadəçi adı</label>\n                    <input id=\"userName\" formControlName=\"userName\" placeholder=\"İstifadəçi adınızı daxil edin\" type=\"text\" class=\"form-control w-100\"  />\n                </div>\n                \n                <div class=\"form-group my-2\">\n                    <label for=\"newPassword\" class=\"my-2\">Yeni Parol</label>\n                    <input class=\"form-control w-100\" type=\"password\" id=\"newPassword\" formControlName=\"newPassword\" />\n                </div>\n                <button type=\"submit\" [disabled]=\"resetPasswordForm.invalid\" class=\"btn btn-primary\">Yenilə parolu</button>\n                <p *ngIf=\"message\">{{ message }}</p>\n            </form>\n        </div>\n    </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}