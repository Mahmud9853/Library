{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/account/account.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(accountService, router) {\n    this.accountService = accountService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (this.accountService.isLoggedIn()) {\n      const userRole = this.accountService.getRole();\n      const requiredRole = route.data;\n    }\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.AccountService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthGuard","constructor","accountService","router","canActivate","route","state","isLoggedIn","userRole","getRole","requiredRole","data","i0","ɵɵinject","i1","AccountService","i2","Router","factory","ɵfac","providedIn"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\core\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AccountService } from 'src/app/account/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private accountService: AccountService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n   if(this.accountService.isLoggedIn()){\n      const userRole = this.accountService.getRole();\n      const requiredRole = route.data\n   }\n  }\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,SAAS;EAEpBC,YAAoBC,cAA8B,EAAUC,MAAc;IAAtD,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;EAAW;EAE7EC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IACpE,IAAG,IAAI,CAACJ,cAAc,CAACK,UAAU,EAAE,EAAC;MACjC,MAAMC,QAAQ,GAAG,IAAI,CAACN,cAAc,CAACO,OAAO,EAAE;MAC9C,MAAMC,YAAY,GAAGL,KAAK,CAACM,IAAI;;EAEnC;;;uBATWX,SAAS,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAATjB,SAAS;MAAAkB,OAAA,EAATlB,SAAS,CAAAmB,IAAA;MAAAC,UAAA,EAFR;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}