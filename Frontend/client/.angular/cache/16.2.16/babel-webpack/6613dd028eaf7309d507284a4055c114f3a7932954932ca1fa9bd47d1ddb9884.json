{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.apiUrl;\n    this.books = [];\n  }\n  getBooks() {\n    return this.http.get(this.baseUrl + 'Book').pipe(map(response => response.$values) // $values içindeki verileri alın\n    );\n  }\n\n  addBook(book) {\n    return this.http.post(this.baseUrl, book);\n  }\n  updateBook(id, book) {\n    return this.http.put(`${this.baseUrl}/${id}`, book);\n  }\n  deleteBook(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function BookService_Factory(t) {\n      return new (t || BookService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: BookService,\n      factory: BookService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","BookService","constructor","http","baseUrl","apiUrl","books","getBooks","get","pipe","map","response","$values","addBook","book","post","updateBook","id","put","deleteBook","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\book\\book.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport {HttpClient} from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport {Book} from 'src/app/shared/models/book'; \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n  baseUrl = environment.apiUrl;\n  books: Book[] = [];\n  constructor(private http: HttpClient) { }\n\n  getBooks(): Observable<Book[]> {\n    return this.http.get<any>(this.baseUrl + 'Book').pipe(\n      map((response) => response.$values) // $values içindeki verileri alın\n    );\n  }\n  \n  addBook(book: Book): Observable<Book> {\n    return this.http.post<Book>(this.baseUrl, book);\n  }\n  updateBook(id:number,book:Book): Observable<Book>{\n    return this.http.put<Book>(`${this.baseUrl}/${id}`, book);\n  }\n  deleteBook(id:number): Observable<void>{\n    return this.http.delete<void>(`${this.baseUrl}/${id}`);\n  }\n  // getBookById(id: number): Observable<Book>{\n  //   return this.baseUrl.get<Book>(`${this.baseUrl}/${id}`);\n  // }\n}\n"],"mappings":"AACA,SAASA,WAAW,QAAQ,8BAA8B;;;AAQ1D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,OAAO,GAAGJ,WAAW,CAACK,MAAM;IAC5B,KAAAC,KAAK,GAAW,EAAE;EACsB;EAExCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAM,IAAI,CAACJ,OAAO,GAAG,MAAM,CAAC,CAACK,IAAI,CACnDC,GAAG,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,OAAO,CAAC,CAAC;KACrC;EACH;;EAEAC,OAAOA,CAACC,IAAU;IAChB,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAO,IAAI,CAACX,OAAO,EAAEU,IAAI,CAAC;EACjD;EACAE,UAAUA,CAACC,EAAS,EAACH,IAAS;IAC5B,OAAO,IAAI,CAACX,IAAI,CAACe,GAAG,CAAO,GAAG,IAAI,CAACd,OAAO,IAAIa,EAAE,EAAE,EAAEH,IAAI,CAAC;EAC3D;EACAK,UAAUA,CAACF,EAAS;IAClB,OAAO,IAAI,CAACd,IAAI,CAACiB,MAAM,CAAO,GAAG,IAAI,CAAChB,OAAO,IAAIa,EAAE,EAAE,CAAC;EACxD;;;uBAnBWhB,WAAW,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXvB,WAAW;MAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}