{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.apiUrl;\n    this.UserDto = [];\n  }\n  getUsers() {\n    return this.http.get(`${this.baseUrl}Account/users`).pipe(map(response => {}));\n  }\n  static {\n    this.ɵfac = function UserService_Factory(t) {\n      return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","UserService","constructor","http","baseUrl","apiUrl","UserDto","getUsers","get","pipe","map","response","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\user\\user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { UserDto } from 'src/app/shared/models/UserDto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private baseUrl = environment.apiUrl;\n  UserDto: any[] = [];\n  constructor(private http: HttpClient) { }\n\n  getUsers(): Observable<UserDto[]>{\n    return this.http.get<UserDto[]>(`${this.baseUrl}Account/users`).pipe(\n          map((response) => {}\n          ;\n  }\n}\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAGJ,WAAW,CAACK,MAAM;IACpC,KAAAC,OAAO,GAAU,EAAE;EACqB;EAExCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAY,GAAG,IAAI,CAACJ,OAAO,eAAe,CAAC,CAACK,IAAI,CAC9DC,GAAG,CAAEC,QAAQ,IAAI,CAAE,CAAC;EAE5B;;;uBATWV,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXd,WAAW;MAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}