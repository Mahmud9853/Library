{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../user.service\";\nfunction ChangeRoleComponent_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(role_r2);\n  }\n}\nfunction ChangeRoleComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.errorMessage, \" \");\n  }\n}\nexport class ChangeRoleComponent {\n  constructor(fb, userService) {\n    this.fb = fb;\n    this.userService = userService;\n    this.availableRoles = [];\n    this.errorMessage = null;\n    this.changeRoleForm = this.fb.group({\n      userId: ['', Validators.required],\n      roles: this.fb.array([], Validators.required)\n    });\n  }\n  ngOnInit() {\n    this.userService.getAvailableRoles().subscribe({\n      next: roles => this.availableRoles = roles,\n      error: err => console.error('Failed to load roles:', err)\n    });\n  }\n  onSubmit() {\n    if (this.changeRoleForm.invalid) {\n      this.errorMessage = 'Form is invalid.';\n      return;\n    }\n    const {\n      userId,\n      roles\n    } = this.changeRoleForm.value;\n    this.userService.changeRole(userId, roles).subscribe({\n      next: res => {\n        console.log('Role updated successfully:', res);\n        this.errorMessage = null;\n      },\n      error: err => {\n        console.error('Failed to update role:', err);\n        this.errorMessage = 'Failed to update role.';\n      }\n    });\n  }\n  static {\n    this.ɵfac = function ChangeRoleComponent_Factory(t) {\n      return new (t || ChangeRoleComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChangeRoleComponent,\n      selectors: [[\"app-change-role\"]],\n      decls: 12,\n      vars: 4,\n      consts: [[1, \"container\", \"mt-5\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"roles\", 1, \"form-label\"], [\"id\", \"roles\", \"formControlName\", \"roles\", \"multiple\", \"\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [3, \"value\"], [1, \"alert\", \"alert-danger\"]],\n      template: function ChangeRoleComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function ChangeRoleComponent_Template_form_ngSubmit_1_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(2, \"h2\");\n          i0.ɵɵtext(3, \"Change User Role\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Select Role:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"select\", 4);\n          i0.ɵɵtemplate(8, ChangeRoleComponent_option_8_Template, 2, 2, \"option\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(9, ChangeRoleComponent_div_9_Template, 2, 1, \"div\", 6);\n          i0.ɵɵelementStart(10, \"button\", 7);\n          i0.ɵɵtext(11, \" Update Role \");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.changeRoleForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngForOf\", ctx.availableRoles);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.changeRoleForm.invalid);\n        }\n      },\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","role_r2","ɵɵadvance","ɵɵtextInterpolate","ɵɵtextInterpolate1","ctx_r1","errorMessage","ChangeRoleComponent","constructor","fb","userService","availableRoles","changeRoleForm","group","userId","required","roles","array","ngOnInit","getAvailableRoles","subscribe","next","error","err","console","onSubmit","invalid","value","changeRole","res","log","ɵɵdirectiveInject","i1","FormBuilder","i2","UserService","selectors","decls","vars","consts","template","ChangeRoleComponent_Template","rf","ctx","ɵɵlistener","ChangeRoleComponent_Template_form_ngSubmit_1_listener","ɵɵtemplate","ChangeRoleComponent_option_8_Template","ChangeRoleComponent_div_9_Template"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\user\\change-role\\change-role.component.ts","D:\\MMU\\Frontend\\client\\src\\app\\admin\\user\\change-role\\change-role.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-change-role',\n  templateUrl: './change-role.component.html',\n  styleUrls: ['./change-role.component.scss']\n})\nexport class ChangeRoleComponent  implements OnInit {\n  changeRoleForm: FormGroup;\n  availableRoles: string[] = [];\n  errorMessage: string | null = null;\n\n  constructor(private fb: FormBuilder, private userService: UserService) {\n    this.changeRoleForm = this.fb.group({\n      userId: ['', Validators.required],\n      roles: this.fb.array([], Validators.required),\n    });\n  }\n\n  ngOnInit(): void {\n    this.userService.getAvailableRoles().subscribe({\n      next: (roles) => (this.availableRoles = roles),\n      error: (err) => console.error('Failed to load roles:', err),\n    });\n  }\n\n  onSubmit(): void {\n    if (this.changeRoleForm.invalid) {\n      this.errorMessage = 'Form is invalid.';\n      return;\n    }\n\n    const { userId, roles } = this.changeRoleForm.value;\n    this.userService.changeRole(userId, roles).subscribe({\n      next: (res) => {\n        console.log('Role updated successfully:', res);\n        this.errorMessage = null;\n      },\n      error: (err) => {\n        console.error('Failed to update role:', err);\n        this.errorMessage = 'Failed to update role.';\n      },\n    });\n  }\n}","<div class=\"container mt-5\">\n    <form [formGroup]=\"changeRoleForm\" (ngSubmit)=\"onSubmit()\">\n      <h2>Change User Role</h2>\n  \n      <!-- Roles -->\n      <div class=\"mb-3\">\n        <label for=\"roles\" class=\"form-label\">Select Role:</label>\n        <select id=\"roles\" class=\"form-control\" formControlName=\"roles\" multiple>\n          <option *ngFor=\"let role of availableRoles\" [value]=\"role\">{{ role }}</option>\n        </select>\n      </div>\n  \n      <!-- Error Message -->\n      <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">\n        {{ errorMessage }}\n      </div>\n  \n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"changeRoleForm.invalid\">\n        Update Role\n      </button>\n    </form>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}