{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DashboardComponent = class DashboardComponent {\n  constructor(bookService, accountService, typeService, categoryService, authorService) {\n    this.bookService = bookService;\n    this.accountService = accountService;\n    this.typeService = typeService;\n    this.categoryService = categoryService;\n    this.authorService = authorService;\n    this.menuItems = [{\n      label: 'Kitablar',\n      route: '/admin/book/book-list'\n    }, {\n      label: 'Tipləri',\n      route: '/admin/type/type-list'\n    }, {\n      label: 'Müəllifləri',\n      route: '/admin/author/author-list'\n    }, {\n      label: 'Kateqoriyası',\n      route: '/admin/category/category-list'\n    }, {\n      label: 'Header parametrlər',\n      route: '/admin/home/home-list'\n    }];\n    this.books = [];\n    this.types = [];\n    this.categories = [];\n    this.authors = [];\n    this.totalRecordsBook = 0;\n    this.totalRecordsType = 0;\n    this.totalRecordsAuthors = 0;\n    this.totalRecordsCategories = 0;\n  }\n  ngOnInit() {\n    this.getBooks();\n    this.getTypes();\n    this.getAuthors();\n    this.getCategories();\n  }\n  getBooks() {\n    this.bookService.getBooks().subscribe({\n      next: response => {\n        console.log('API Response:', response);\n        this.books = response;\n        this.totalRecordsBook = this.books.length;\n      },\n      error: error => console.log('Error fetching books:', error)\n    });\n  }\n  getTypes() {\n    this.typeService.getTypes().subscribe({\n      next: response => {\n        console.log('API Response:', response);\n        this.types = response;\n        this.totalRecordsType = this.types.length;\n      },\n      error: error => console.log('Error fetching types:', error)\n    });\n  }\n  getAuthors() {\n    this.authorService.getAuthors().subscribe({\n      next: response => {\n        console.log('API Response:', response);\n        this.authors = response;\n        this.totalRecordsAuthors = this.authors.length;\n      },\n      error: error => console.log('Error fetching types:', error)\n    });\n  }\n  getCategories() {\n    this.categoryService.getCategories().subscribe({\n      next: response => {\n        console.log('API Response:', response);\n        this.categories = response;\n        this.totalRecordsCategories = this.categories.length;\n      },\n      error: error => console.log('Error fetching categories:', error)\n    });\n  }\n  logout() {\n    this.accountService.logout();\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})], DashboardComponent);","map":{"version":3,"names":["Component","DashboardComponent","constructor","bookService","accountService","typeService","categoryService","authorService","menuItems","label","route","books","types","categories","authors","totalRecordsBook","totalRecordsType","totalRecordsAuthors","totalRecordsCategories","ngOnInit","getBooks","getTypes","getAuthors","getCategories","subscribe","next","response","console","log","length","error","logout","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\dashboard\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BookService } from '../../book/book.service';\nimport { TypeService } from '../../type/type.service';\nimport { CategoryService } from '../../category/category.service';\nimport { AuthorService } from '../../author/author.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  menuItems = [\n    { label: 'Kitablar', route: '/admin/book/book-list' },\n    { label: 'Tipləri', route: '/admin/type/type-list' },\n    { label: 'Müəllifləri', route: '/admin/author/author-list' },\n    { label: 'Kateqoriyası', route: '/admin/category/category-list' },\n    { label: 'Header parametrlər', route: '/admin/home/home-list' },\n  ];\n  books: any[] = [];\n  types: any[] = [];\n  categories: any[] = [];\n  authors: any[] = [];\n  totalRecordsBook = 0;\n  totalRecordsType = 0;\n  totalRecordsAuthors = 0;\n  totalRecordsCategories= 0;\n\n  constructor( private bookService: BookService,private accountService: AccountService, private typeService: TypeService, private categoryService: CategoryService,private authorService: AuthorService) {}\n  ngOnInit(): void {\n    this.getBooks();\n    this.getTypes();\n    this.getAuthors();\n    this.getCategories();\n  }\n getBooks(): void { \n      this.bookService.getBooks().subscribe({\n       next: (response: any) => {\n          console.log('API Response:', response);\n            this.books = response;\n            this.totalRecordsBook = this.books.length;\n        },\n          error: error => console.log('Error fetching books:', error)\n        })\n  }\n  getTypes(): void { \n    this.typeService.getTypes().subscribe({\n     next: (response: any) => {\n        console.log('API Response:', response);\n          this.types = response;\n          this.totalRecordsType = this.types.length;\n      },\n        error: error => console.log('Error fetching types:', error)\n      })\n  }\n  getAuthors(): void { \n    this.authorService.getAuthors().subscribe({\n     next: (response: any) => {\n        console.log('API Response:', response);\n          this.authors = response;\n          this.totalRecordsAuthors = this.authors.length;\n      },\n        error: error => console.log('Error fetching types:', error)\n      })\n  }\n  getCategories(): void { \n    this.categoryService.getCategories().subscribe({\n     next: (response: any) => {\n        console.log('API Response:', response);\n          this.categories = response;\n          this.totalRecordsCategories = this.categories.length;\n      },\n        error: error => console.log('Error fetching categories:', error)\n      })\n  }\n\n  logout() {\n    this.accountService.logout();\n  }\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}