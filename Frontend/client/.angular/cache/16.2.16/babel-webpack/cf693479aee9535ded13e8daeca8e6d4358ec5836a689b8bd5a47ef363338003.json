{"ast":null,"code":"import { map, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TypeService {\n  constructor(http) {\n    this.http = http;\n    this.types = [];\n    this.baseUrl = environment.apiUrl;\n  }\n  getTypes() {\n    return this.http.get(this.baseUrl + 'Type').pipe(map(response => response.$values) // $values içindeki verileri alın\n    );\n  }\n\n  addType(type) {\n    return this.http.post(this.baseUrl + 'Type/Create').pipe(map(response => response.$values));\n  }\n  static {\n    this.ɵfac = function TypeService_Factory(t) {\n      return new (t || TypeService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TypeService,\n      factory: TypeService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\naddBook(book, any);\nObservable < Book > {\n  return: this.http.post(this.baseUrl + 'Book/create', book)\n};","map":{"version":3,"names":["map","Observable","environment","TypeService","constructor","http","types","baseUrl","apiUrl","getTypes","get","pipe","response","$values","addType","type","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","addBook","book","any","Book","return"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\type\\type.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, Observable } from 'rxjs';\nimport { Type } from 'src/app/shared/models/type';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TypeService {\n   types:  any[] = [];\n  private baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getTypes(): Observable<any[]> {\n      return this.http.get<any>(this.baseUrl + 'Type').pipe(\n        map((response) => response.$values) // $values içindeki verileri alın\n      );\n    }\n  addType(type: any) :Observable<any> {\n    return this.http.post<any>(this.baseUrl + 'Type/Create').pipe(\n      map((response) => response.$values)\n    );\n  }\n} addBook(book: any): Observable<Book> {\n    return this.http.post<Book>(this.baseUrl + 'Book/create', book);\n  }"],"mappings":"AAEA,SAASA,GAAG,EAAEC,UAAU,QAAQ,MAAM;AAEtC,SAASC,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHvB,KAAAC,KAAK,GAAW,EAAE;IACX,KAAAC,OAAO,GAAGL,WAAW,CAACM,MAAM;EAEG;EAEvCC,QAAQA,CAAA;IACJ,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAM,IAAI,CAACH,OAAO,GAAG,MAAM,CAAC,CAACI,IAAI,CACnDX,GAAG,CAAEY,QAAQ,IAAKA,QAAQ,CAACC,OAAO,CAAC,CAAC;KACrC;EACH;;EACFC,OAAOA,CAACC,IAAS;IACf,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAM,IAAI,CAACT,OAAO,GAAG,aAAa,CAAC,CAACI,IAAI,CAC3DX,GAAG,CAAEY,QAAQ,IAAKA,QAAQ,CAACC,OAAO,CAAC,CACpC;EACH;;;uBAfWV,WAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXjB,WAAW;MAAAkB,OAAA,EAAXlB,WAAW,CAAAmB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA;;AAkBlBC,OAAO,CAACC,IAAI,EAAEC,GAAG,CAAC;AAAEzB,UAAU,GAAC0B,IAAI,GAAE;EACnCC,MAAM,EAAC,IAAI,CAACvB,IAAI,CAACW,IAAI,CAAO,IAAI,CAACT,OAAO,GAAG,aAAa,EAAEkB,IAAI;CAC/D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}