{"ast":null,"code":"import { map } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CourseService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.apiUrl;\n    this.courses = [];\n  }\n  getCourses() {\n    return this.http.get(this.baseUrl + 'Course').pipe(map(response => response.$values) // $values içindeki verileri alın\n    );\n  }\n\n  deleteCourse(id) {\n    return this.http.delete(`${this.baseUrl} + 'Course'+ ${id}`);\n  }\n  deleteAuthor(id) {\n    return this.http.delete(`${this.baseUrl}Author/${id}`, {\n      responseType: 'text'\n    });\n  }\n  static {\n    this.ɵfac = function CourseService_Factory(t) {\n      return new (t || CourseService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CourseService,\n      factory: CourseService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["map","environment","CourseService","constructor","http","baseUrl","apiUrl","courses","getCourses","get","pipe","response","$values","deleteCourse","id","delete","deleteAuthor","responseType","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\course\\course.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, Observable } from 'rxjs';\nimport { Course } from 'src/app/shared/models/course';\nimport { environment } from 'src/environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseService {\nprivate baseUrl = environment.apiUrl\ncourses: any[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  getCourses(): Observable<Course[]> {\n    return this.http.get<any>(this.baseUrl + 'Course').pipe(\n       map((response) => response.$values) // $values içindeki verileri alın\n    );\n  } \n  deleteCourse(id: number): Observable<void> {\n    return this.http.delete(`${this.baseUrl} + 'Course'+ ${id}`)\n  }\n\n  deleteAuthor(id:number): Observable<any>{\n    return this.http.delete<void>(`${this.baseUrl}Author/${id}`, {\n    responseType: 'text' as 'json'\n    });\n}\n}\n"],"mappings":"AAEA,SAASA,GAAG,QAAoB,MAAM;AAEtC,SAASC,WAAW,QAAQ,8BAA8B;;;AAI1D,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHlB,KAAAC,OAAO,GAAGJ,WAAW,CAACK,MAAM;IACpC,KAAAC,OAAO,GAAU,EAAE;EAEuB;EAExCC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAM,IAAI,CAACJ,OAAO,GAAG,QAAQ,CAAC,CAACK,IAAI,CACpDV,GAAG,CAAEW,QAAQ,IAAKA,QAAQ,CAACC,OAAO,CAAC,CAAC;KACtC;EACH;;EACAC,YAAYA,CAACC,EAAU;IACrB,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAC,GAAG,IAAI,CAACV,OAAO,gBAAgBS,EAAE,EAAE,CAAC;EAC9D;EAEAE,YAAYA,CAACF,EAAS;IACpB,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAO,GAAG,IAAI,CAACV,OAAO,UAAUS,EAAE,EAAE,EAAE;MAC7DG,YAAY,EAAE;KACb,CAAC;EACN;;;uBAnBaf,aAAa,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAbnB,aAAa;MAAAoB,OAAA,EAAbpB,aAAa,CAAAqB,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}