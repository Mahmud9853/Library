{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let UserListComponent = class UserListComponent {\n  constructor(fb, userService, router, route, accountService) {\n    this.fb = fb;\n    this.userService = userService;\n    this.router = router;\n    this.route = route;\n    this.accountService = accountService;\n    this.UserDto = [];\n    this.totalRecords = 0;\n    this.role = null;\n    this.role = this.accountService.getRole();\n  }\n  ngOnInit() {\n    this.GetUsers();\n  }\n  GetUsers() {\n    this.userService.getUsers().subscribe({\n      next: response => {\n        console.log(\"API Response All Users:\", response);\n        this.UserDto = response;\n        this.totalRecords = this.UserDto.length;\n      }\n    });\n  }\n  openDeleteModal(user) {\n    if (this.role !== 'Admin') {\n      console.error('Erişim reddedildi: Sadece Admin silebilir.');\n      return;\n    }\n    this.userToDelete = user;\n    const deleteModal = document.getElementById('deleteModal');\n    if (deleteModal) {\n      const modal = new window.bootstrap.Modal(deleteModal); // 'window as any' ile tip belirtme\n      modal.show();\n    }\n  }\n  confirmDelete() {\n    if (this.userToDelete) {\n      if (this.role !== 'Admin') {\n        console.error('Erişim reddedildi: Sadece Admin silebilir.');\n        return;\n      }\n      // API çağrısı yapılır\n      this.userService.deleteUser(this.userToDelete.id).subscribe({\n        next: response => {\n          // Silme işleminden sonra kitap listesine ekleme\n          console.log('Delete response:', response); // '4: Deleted.'\n          this.books = this.books.filter(b => b.id !== this.userToDelete.id);\n          // Modalı kapat\n          const deleteModal = document.getElementById('deleteModal');\n          if (deleteModal) {\n            const modalInstance = window.bootstrap.Modal.getInstance(deleteModal);\n            modalInstance?.hide(); // Modal'ı kapat\n          }\n          // Kitaplar silindikten sonra yönlendirme yapılır\n          this.router.navigate(['/admin/book/book-list']);\n          this.userToDelete = null;\n        },\n        error: err => {\n          console.error('Error deleting book:', err);\n        }\n      });\n    }\n  }\n};\nUserListComponent = __decorate([Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})], UserListComponent);","map":{"version":3,"names":["Component","UserListComponent","constructor","fb","userService","router","route","accountService","UserDto","totalRecords","role","getRole","ngOnInit","GetUsers","getUsers","subscribe","next","response","console","log","length","openDeleteModal","user","error","userToDelete","deleteModal","document","getElementById","modal","window","bootstrap","Modal","show","confirmDelete","deleteUser","id","books","filter","b","modalInstance","getInstance","hide","navigate","err","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\user\\user-list\\user-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements OnInit {\n  UserDto: any[] = [];\n  totalRecords = 0;\n  role: string  | null = null;\n  \n  constructor(private fb: FormBuilder,private userService: UserService, private router: Router, private route:ActivatedRoute, private accountService: AccountService) {\n    this.role = this.accountService.getRole();\n  }\n  ngOnInit(): void {\n    this.GetUsers();\n  }\n\n  GetUsers(){\n    this.userService.getUsers().subscribe( {\n      next: (response) => {\n        console.log(\"API Response All Users:\", response);\n        this.UserDto = response;\n        this.totalRecords = this.UserDto.length;\n      }\n    });\n\n  }\n\n  openDeleteModal(user: any) {\n    if (this.role !== 'Admin') {\n      console.error('Erişim reddedildi: Sadece Admin silebilir.');\n      return;\n    }\n    this.userToDelete = user;\n    const deleteModal = document.getElementById('deleteModal');\n    if (deleteModal) {\n      const modal = new (window as any).bootstrap.Modal(deleteModal); // 'window as any' ile tip belirtme\n      modal.show();\n    \n    }\n  }\n  confirmDelete() {\n    if (this.userToDelete) {\n      if (this.role !== 'Admin') {\n        console.error('Erişim reddedildi: Sadece Admin silebilir.');\n        return;\n      }\n      // API çağrısı yapılır\n      this.userService.deleteUser(this.userToDelete.id).subscribe({\n        next: (response: string) => {\n          // Silme işleminden sonra kitap listesine ekleme\n          console.log('Delete response:', response); // '4: Deleted.'\n          this.books = this.books.filter((b) => b.id !== this.userToDelete.id);\n  \n          // Modalı kapat\n          const deleteModal = document.getElementById('deleteModal');\n          if (deleteModal) {\n            const modalInstance = (window as any).bootstrap.Modal.getInstance(deleteModal);\n            modalInstance?.hide(); // Modal'ı kapat\n          }\n  \n          // Kitaplar silindikten sonra yönlendirme yapılır\n          this.router.navigate(['/admin/book/book-list']);\n          this.userToDelete = null;\n        },\n        error: (err) => {\n          console.error('Error deleting book:', err);\n        },\n      });\n    }\n  }\n  \n \n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}