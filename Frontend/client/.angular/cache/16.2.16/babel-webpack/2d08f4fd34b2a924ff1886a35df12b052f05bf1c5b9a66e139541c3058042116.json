{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../category.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class CategoryEditComponent {\n  constructor(categoryService, router, route) {\n    this.categoryService = categoryService;\n    this.router = router;\n    this.route = route;\n    this.category = {\n      id: 0,\n      name: ''\n    };\n  }\n  ngOnInit() {\n    const categoryId = this.route.snapshot.params['id'];\n    if (categoryId) {\n      this.loadCategory();\n    }\n  }\n  loadCategory() {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    if (id) {\n      this.categoryService.getCategoryById(id).subscribe({\n        next: response => {\n          console.log('API Response:', response);\n          this.category = response;\n        },\n        error: error => {\n          console.error('Error loading category details:', error);\n        }\n      });\n    }\n  }\n  updateCategory() {\n    const formData = new FormData();\n    formData.append('name', this.category.name);\n    this.categoryService.updateCategory(this.category.id, formData).subscribe({\n      next: response => {\n        console.log('Category updated successfully:', response);\n        // Backend'den dönen güncellenmiş veriyi atayın\n        this.category = response;\n        this.router.navigate(['/admin/category/category-list']); // Başarılı güncelleme sonrası yönlendirme\n      },\n\n      error: error => {\n        console.error('Error updating category:', error);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function CategoryEditComponent_Factory(t) {\n      return new (t || CategoryEditComponent)(i0.ɵɵdirectiveInject(i1.CategoryService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CategoryEditComponent,\n      selectors: [[\"app-category-edit\"]],\n      decls: 10,\n      vars: 1,\n      consts: [[1, \"container\", \"mt-5\"], [1, \"mb-4\"], [3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"id\", \"name\", \"type\", \"text\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n      template: function CategoryEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n          i0.ɵɵtext(2, \"Edit Category\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function CategoryEditComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.updateCategory();\n          });\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n          i0.ɵɵtext(6, \"kateqoriyas\\u0131:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"input\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function CategoryEditComponent_Template_input_ngModelChange_7_listener($event) {\n            return ctx.category.name = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"button\", 6);\n          i0.ɵɵtext(9, \"Update Category\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngModel\", ctx.category.name);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["CategoryEditComponent","constructor","categoryService","router","route","category","id","name","ngOnInit","categoryId","snapshot","params","loadCategory","Number","paramMap","get","getCategoryById","subscribe","next","response","console","log","error","updateCategory","formData","FormData","append","navigate","i0","ɵɵdirectiveInject","i1","CategoryService","i2","Router","ActivatedRoute","selectors","decls","vars","consts","template","CategoryEditComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CategoryEditComponent_Template_form_ngSubmit_3_listener","CategoryEditComponent_Template_input_ngModelChange_7_listener","$event","ɵɵadvance","ɵɵproperty"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\category\\category-edit\\category-edit.component.ts","D:\\MMU\\Frontend\\client\\src\\app\\admin\\category\\category-edit\\category-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CategoryService } from '../category.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-category-edit',\n  templateUrl: './category-edit.component.html',\n  styleUrls: ['./category-edit.component.scss']\n})\nexport class CategoryEditComponent implements OnInit {\n  category: any = {\n    id: 0,\n    name:'',\n  };\n  \n  constructor(private categoryService: CategoryService, private router: Router, private route: ActivatedRoute){}\n\n  ngOnInit(): void {\n\n    const categoryId = this.route.snapshot.params['id'];\n    if (categoryId) {\n      this.loadCategory();\n    }\n  }\n  loadCategory() {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    if (id) {\n      this.categoryService.getCategoryById(id).subscribe({\n        next: (response: any) => {\n          console.log('API Response:', response);\n          this.category = response;\n        },\n        error: (error) => {\n          console.error('Error loading category details:', error);\n        }\n      });\n    }\n  }\n\n  updateCategory() {\n    const formData = new FormData();\n    formData.append('name', this.category.name);\n  \n    this.categoryService.updateCategory(this.category.id, formData).subscribe({\n      next: (response: any) => {\n        console.log('Category updated successfully:', response);\n        // Backend'den dönen güncellenmiş veriyi atayın\n        this.category = response;\n        this.router.navigate(['/admin/category/category-list']); // Başarılı güncelleme sonrası yönlendirme\n      },\n      error: (error) => {\n        console.error('Error updating category:', error);\n      }\n    });\n  }\n}\n","<div class=\"container mt-5\">\n    <h2 class=\"mb-4\">Edit Category</h2>\n    <form (ngSubmit)=\"updateCategory()\">\n      <div class=\"mb-3\">\n        <label for=\"name\" class=\"form-label\">kateqoriyası:</label>\n        <input\n          id=\"name\"\n          type=\"text\"\n          class=\"form-control\"\n          [(ngModel)]=\"category.name\"\n          name=\"name\"\n          required\n        />\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Update Category</button>\n    </form>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}