{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nexport let AuthGuard = class AuthGuard {\n  constructor(accountService, router) {\n    this.accountService = accountService;\n    this.router = router;\n  }\n  canActivate(next, state) {\n    const role = this.accountService.getRole();\n    if (this.accountService.isLoggedIn() && (role === 'Admin' || role === 'Client')) {\n      return true;\n    }\n    // Eğer giriş yapılmamışsa veya yetkisizse, login sayfasına yönlendir\n    this.router.navigate(['/account/login']);\n    return false;\n  }\n};\nAuthGuard = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthGuard);","map":{"version":3,"names":["Injectable","AuthGuard","constructor","accountService","router","canActivate","next","state","role","getRole","isLoggedIn","navigate","__decorate","providedIn"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\core\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private accountService: AccountService, private router: Router) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    const role = this.accountService.getRole();\n    if (this.accountService.isLoggedIn() && (role === 'Admin' || role === 'Client')) {\n      return true;\n    }\n\n    // Eğer giriş yapılmamışsa veya yetkisizse, login sayfasına yönlendir\n    this.router.navigate(['/account/login']);\n    return false;\n  }\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAOnC,WAAMC,SAAS,GAAf,MAAMA,SAAS;EAEpBC,YAAoBC,cAA8B,EAAUC,MAAc;IAAtD,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;EAAY;EAE9EC,WAAWA,CACTC,IAA4B,EAC5BC,KAA0B;IAE1B,MAAMC,IAAI,GAAG,IAAI,CAACL,cAAc,CAACM,OAAO,EAAE;IAC1C,IAAI,IAAI,CAACN,cAAc,CAACO,UAAU,EAAE,KAAKF,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,CAAC,EAAE;MAC/E,OAAO,IAAI;;IAGb;IACA,IAAI,CAACJ,MAAM,CAACO,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;IACxC,OAAO,KAAK;EACd;CACD;AAjBYV,SAAS,GAAAW,UAAA,EAHrBZ,UAAU,CAAC;EACVa,UAAU,EAAE;CACb,CAAC,C,EACWZ,SAAS,CAiBrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}