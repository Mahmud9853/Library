{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home/home.component';\nimport { LoginComponent } from './account/login/login.component';\nimport { RegisterComponent } from './account/register/register.component';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [\n//    {path: 'home', component: HomeComponent},\n//  {\n//   path: 'home',\n//   canActivate: [AuthGuard],\n//   loadChildren: () => import('./home/home.module').then(m => m.HomeModule)\n//  },\n{\n  path: 'home',\n  component: HomeComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'login',\n  component: LoginComponent\n}, {\n  path: 'register',\n  component: RegisterComponent\n},\n// { path: '', redirectTo: '/login', pathMatch: 'full' }, // Ana sayfa login sayfasına yönlendirir\n{\n  path: '**',\n  redirectTo: '/login'\n},\n//  {path: 'home', component: HomeComponent},\n//  {path: 'admin/dashboard', canActivate: [AuthGuard], component: DashboardComponent},\n//  {\n//   path: 'dashboard',\n//   canActivate: [AuthGuard],\n//   loadChildren: () => import('./admin/dashboard/dashboard.module').then(m => m.DashboardModule)\n// },\n//  {path: 'account/login', component: LoginComponent},\n// \n{\n  path: 'admin',\n  loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule)\n}, {\n  path: 'account',\n  loadChildren: () => import('./account/account.module').then(m => m.AccountModule)\n}\n// { path: '**', redirectTo: '' , pathMatch: 'full' }, // Hatalı bir rota girilirse\n];\n\nexport class AppRoutingModule {\n  static {\n    this.ɵfac = function AppRoutingModule_Factory(t) {\n      return new (t || AppRoutingModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppRoutingModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [RouterModule.forRoot(routes), RouterModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","HomeComponent","LoginComponent","RegisterComponent","AuthGuard","routes","path","component","canActivate","redirectTo","loadChildren","then","m","AdminModule","AccountModule","AppRoutingModule","forRoot","imports","i1","exports"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home/home.component';\nimport { DashboardComponent } from './admin/dashboard/dashboard/dashboard.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { LoginComponent } from './account/login/login.component';\nimport { RegisterComponent } from './account/register/register.component';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { AppComponent } from './app.component';\nimport { NavBarComponent } from './core/nav-bar/nav-bar.component';\n\nconst routes: Routes = [\n  //    {path: 'home', component: HomeComponent},\n  //  {\n  //   path: 'home',\n  //   canActivate: [AuthGuard],\n  //   loadChildren: () => import('./home/home.module').then(m => m.HomeModule)\n  //  },\n    { path: 'home', component: HomeComponent, canActivate: [AuthGuard] }, // Home’a gitmek için login olmalı\n    { path: 'login', component: LoginComponent },\n    {path: 'register', component: RegisterComponent},\n    // { path: '', redirectTo: '/login', pathMatch: 'full' }, // Ana sayfa login sayfasına yönlendirir\n    { path: '**', redirectTo: '/login' },\n\n\n  //  {path: 'home', component: HomeComponent},\n  //  {path: 'admin/dashboard', canActivate: [AuthGuard], component: DashboardComponent},\n  //  {\n  //   path: 'dashboard',\n  //   canActivate: [AuthGuard],\n  //   loadChildren: () => import('./admin/dashboard/dashboard.module').then(m => m.DashboardModule)\n  // },\n  //  {path: 'account/login', component: LoginComponent},\n  // \n  { path: 'admin', loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule) }, // Admin modülü\n  {path: 'account', loadChildren: () => import('./account/account.module').then(m => m.AccountModule)},\n  // { path: '**', redirectTo: '' , pathMatch: 'full' }, // Hatalı bir rota girilirse\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,aAAa,QAAQ,4BAA4B;AAG1D,SAASC,cAAc,QAAQ,iCAAiC;AAChE,SAASC,iBAAiB,QAAQ,uCAAuC;AACzE,SAASC,SAAS,QAAQ,0BAA0B;;;AAIpD,MAAMC,MAAM,GAAW;AACrB;AACA;AACA;AACA;AACA;AACA;AACE;EAAEC,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAEN,aAAa;EAAEO,WAAW,EAAE,CAACJ,SAAS;AAAC,CAAE,EACpE;EAAEE,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEL;AAAc,CAAE,EAC5C;EAACI,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEJ;AAAiB,CAAC;AAChD;AACA;EAAEG,IAAI,EAAE,IAAI;EAAEG,UAAU,EAAE;AAAQ,CAAE;AAGtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAAEH,IAAI,EAAE,OAAO;EAAEI,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,sBAAsB,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,WAAW;AAAC,CAAE,EAC9F;EAACP,IAAI,EAAE,SAAS;EAAEI,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,0BAA0B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACE,aAAa;AAAC;AACnG;AAAA,CACD;;AAMD,OAAM,MAAOC,gBAAgB;;;uBAAhBA,gBAAgB;IAAA;EAAA;;;YAAhBA;IAAgB;EAAA;;;gBAHjBf,YAAY,CAACgB,OAAO,CAACX,MAAM,CAAC,EAC5BL,YAAY;IAAA;EAAA;;;2EAEXe,gBAAgB;IAAAE,OAAA,GAAAC,EAAA,CAAAlB,YAAA;IAAAmB,OAAA,GAFjBnB,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}