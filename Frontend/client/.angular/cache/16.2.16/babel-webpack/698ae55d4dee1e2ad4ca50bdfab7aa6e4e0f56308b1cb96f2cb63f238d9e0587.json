{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { BookParams } from 'src/app/shared/models/bookParams';\nexport let BookListComponent = class BookListComponent {\n  constructor(bookService, fb) {\n    this.bookService = bookService;\n    this.fb = fb;\n    this.Math = Math;\n    this.books = [];\n    this.totalCount = 0;\n    this.bookParams = new BookParams();\n    this.categories = [];\n    this.types = [];\n    this.authors = [];\n  }\n  ngOnInit() {\n    this.getBooks();\n    this.loadType();\n    this.loadAuthor();\n    // this.getCategories();\n    // this.getTypes();\n    // this.getAuthors();\n  }\n\n  getBooks() {\n    this.bookService.getBooks().subscribe({\n      next: response => {\n        console.log('API Response:', response);\n        this.books = response;\n      },\n      error: error => console.log('Error fetching books:', error)\n    });\n  }\n  loadType() {\n    this.bookService.getTypes().subscribe({\n      next: response => {\n        console.log('API Response type:', response);\n        this.types = response;\n      },\n      error: error => console.log('Error fetching books:', error)\n    });\n  }\n  loadAuthor() {\n    this.bookService.getAuthors().subscribe({\n      next: response => {\n        console.log('API Response author:', response);\n        this.authors = response;\n      },\n      error: error => console.log('Error fetching books:', error)\n    });\n  }\n};\n__decorate([ViewChild('search')], BookListComponent.prototype, \"searchTerm\", void 0);\nBookListComponent = __decorate([Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.scss']\n})], BookListComponent);","map":{"version":3,"names":["Component","ViewChild","BookParams","BookListComponent","constructor","bookService","fb","Math","books","totalCount","bookParams","categories","types","authors","ngOnInit","getBooks","loadType","loadAuthor","subscribe","next","response","console","log","error","getTypes","getAuthors","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\book\\book-list\\book-list.component.ts"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {Book} from 'src/app/shared/models/book'; \nimport { BookService } from '../book.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BookParams } from 'src/app/shared/models/bookParams';\nimport { TypeService } from '../../type/type.service';\nimport { AuthorService } from '../../author/author.service';\nimport { Author } from 'src/app/shared/models/author';\nimport { Category } from 'src/app/shared/models/category';\nimport { Type } from 'src/app/shared/models/type';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.scss']\n})\nexport class BookListComponent implements OnInit{\n  Math = Math;\n  @ViewChild('search') searchTerm?: ElementRef;\n  books: any[] = [];\n  totalCount = 0;\n  bookParams: BookParams = new BookParams();\n  categories: Category[] = [];\n  types: any[] = [];\n  authors: any[] = [];\n\n  constructor(private bookService: BookService, private fb: FormBuilder) {}\n  \n ngOnInit(): void {\n    this.getBooks();\n    this.loadType();\n    this.loadAuthor();\n    // this.getCategories();\n    // this.getTypes();\n    // this.getAuthors();\n  }\n    getBooks(): void { \n      this.bookService.getBooks().subscribe({\n       next: (response: any) => {\n          console.log('API Response:', response);\n            this.books = response;\n        },\n          error: error => console.log('Error fetching books:', error)\n        })\n    }\n    loadType() {\n      this.bookService.getTypes().subscribe({\n       next: (response: any) => {\n          console.log('API Response type:', response);\n            this.types = response;\n        },\n          error: error => console.log('Error fetching books:', error)\n        })\n    }\n    loadAuthor() {\n      this.bookService.getAuthors().subscribe({\n       next: (response: any) => {\n          console.log('API Response author:', response);\n            this.authors = response;\n        },\n          error: error => console.log('Error fetching books:', error)\n        })\n    }\n    \n  \n \n  \n  \n  \n \n  }\n"],"mappings":";AAAA,SAASA,SAAS,EAAsBC,SAAS,QAAO,eAAe;AAIvE,SAASC,UAAU,QAAQ,kCAAkC;AAatD,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAU5BC,YAAoBC,WAAwB,EAAUC,EAAe;IAAjD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,EAAE,GAAFA,EAAE;IATxD,KAAAC,IAAI,GAAGA,IAAI;IAEX,KAAAC,KAAK,GAAU,EAAE;IACjB,KAAAC,UAAU,GAAG,CAAC;IACd,KAAAC,UAAU,GAAe,IAAIR,UAAU,EAAE;IACzC,KAAAS,UAAU,GAAe,EAAE;IAC3B,KAAAC,KAAK,GAAU,EAAE;IACjB,KAAAC,OAAO,GAAU,EAAE;EAEqD;EAEzEC,QAAQA,CAAA;IACL,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACC,UAAU,EAAE;IACjB;IACA;IACA;EACF;;EACEF,QAAQA,CAAA;IACN,IAAI,CAACV,WAAW,CAACU,QAAQ,EAAE,CAACG,SAAS,CAAC;MACrCC,IAAI,EAAGC,QAAa,IAAI;QACrBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,QAAQ,CAAC;QACpC,IAAI,CAACZ,KAAK,GAAGY,QAAQ;MACzB,CAAC;MACCG,KAAK,EAAEA,KAAK,IAAIF,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,KAAK;KAC3D,CAAC;EACN;EACAP,QAAQA,CAAA;IACN,IAAI,CAACX,WAAW,CAACmB,QAAQ,EAAE,CAACN,SAAS,CAAC;MACrCC,IAAI,EAAGC,QAAa,IAAI;QACrBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,QAAQ,CAAC;QACzC,IAAI,CAACR,KAAK,GAAGQ,QAAQ;MACzB,CAAC;MACCG,KAAK,EAAEA,KAAK,IAAIF,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,KAAK;KAC3D,CAAC;EACN;EACAN,UAAUA,CAAA;IACR,IAAI,CAACZ,WAAW,CAACoB,UAAU,EAAE,CAACP,SAAS,CAAC;MACvCC,IAAI,EAAGC,QAAa,IAAI;QACrBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,QAAQ,CAAC;QAC3C,IAAI,CAACP,OAAO,GAAGO,QAAQ;MAC3B,CAAC;MACCG,KAAK,EAAEA,KAAK,IAAIF,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,KAAK;KAC3D,CAAC;EACN;CAQD;AApDoBG,UAAA,EAApBzB,SAAS,CAAC,QAAQ,CAAC,C,oDAAyB;AAFlCE,iBAAiB,GAAAuB,UAAA,EAL7B1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACW1B,iBAAiB,CAsD3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}