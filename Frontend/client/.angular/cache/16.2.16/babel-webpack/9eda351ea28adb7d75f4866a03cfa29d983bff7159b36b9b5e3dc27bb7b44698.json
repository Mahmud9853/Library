{"ast":null,"code":"import { ReplaySubject, map } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AccountService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.baseUrl = environment.apiUrl;\n    this.currentUserSource = new ReplaySubject(1);\n    this.currentUser$ = this.currentUserSource.asObservable();\n  }\n  register(userData) {\n    return this.http.post(`${this.baseUrl}Account/register`, userData);\n  }\n  // login(userData: any): Observable<any> {\n  //   return this.http.post(`${this.baseUrl}Account/login`, userData);\n  // }\n  login(loginData) {\n    return this.http.post(`${this.baseUrl}Account/login`, loginData).pipe(map(user => {\n      localStorage.setItem('token', user.token);\n      this.currentUserSource.next(user);\n    }));\n  }\n  logout() {\n    localStorage.removeItem('token');\n    this.router.navigate(['/login']);\n  }\n  saveToken(token) {\n    localStorage.setItem('token', token);\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  static {\n    this.ɵfac = function AccountService_Factory(t) {\n      return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AccountService,\n      factory: AccountService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ReplaySubject","map","environment","AccountService","constructor","http","router","baseUrl","apiUrl","currentUserSource","currentUser$","asObservable","register","userData","post","login","loginData","pipe","user","localStorage","setItem","token","next","logout","removeItem","navigate","saveToken","getToken","getItem","i0","ɵɵinject","i1","HttpClient","i2","Router","factory","ɵfac","providedIn"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\account\\account.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject, map, of } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../shared/models/user';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  baseUrl = environment.apiUrl;\n  private currentUserSource = new ReplaySubject<User | null>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  register(userData: any): Observable<any> {\n    return this.http.post(`${this.baseUrl}Account/register`, userData);\n  }\n\n  // login(userData: any): Observable<any> {\n  //   return this.http.post(`${this.baseUrl}Account/login`, userData);\n  // }\n  login(loginData: { userName: string, password: string }): Observable<any> {\n    return this.http.post(`${this.baseUrl}Account/login`, loginData).pipe(\n      map(user => {\n        localStorage.setItem('token', user.token);\n        this.currentUserSource.next(user);\n        \n      })\n    )\n  }\n  \n  logout(): void {\n    localStorage.removeItem('token');\n    this.router.navigate(['/login']);\n  }\n\n  saveToken(token: string): void {\n    localStorage.setItem('token', token);\n  }\n\n  getToken(): string | null {\n    return localStorage.getItem('token');\n  }\n\n  \n\n \n}\n"],"mappings":"AACA,SAAqBA,aAAa,EAAEC,GAAG,QAAY,MAAM;AACzD,SAASC,WAAW,QAAQ,8BAA8B;;;;AAQ1D,OAAM,MAAOC,cAAc;EAMzBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAJpD,KAAAC,OAAO,GAAGL,WAAW,CAACM,MAAM;IACpB,KAAAC,iBAAiB,GAAG,IAAIT,aAAa,CAAc,CAAC,CAAC;IAC7D,KAAAU,YAAY,GAAG,IAAI,CAACD,iBAAiB,CAACE,YAAY,EAAE;EAEY;EAEhEC,QAAQA,CAACC,QAAa;IACpB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,GAAG,IAAI,CAACP,OAAO,kBAAkB,EAAEM,QAAQ,CAAC;EACpE;EAEA;EACA;EACA;EACAE,KAAKA,CAACC,SAAiD;IACrD,OAAO,IAAI,CAACX,IAAI,CAACS,IAAI,CAAC,GAAG,IAAI,CAACP,OAAO,eAAe,EAAES,SAAS,CAAC,CAACC,IAAI,CACnEhB,GAAG,CAACiB,IAAI,IAAG;MACTC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,IAAI,CAACG,KAAK,CAAC;MACzC,IAAI,CAACZ,iBAAiB,CAACa,IAAI,CAACJ,IAAI,CAAC;IAEnC,CAAC,CAAC,CACH;EACH;EAEAK,MAAMA,CAAA;IACJJ,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;IAChC,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAC,SAASA,CAACL,KAAa;IACrBF,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,KAAK,CAAC;EACtC;EAEAM,QAAQA,CAAA;IACN,OAAOR,YAAY,CAACS,OAAO,CAAC,OAAO,CAAC;EACtC;;;uBApCWzB,cAAc,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAAd/B,cAAc;MAAAgC,OAAA,EAAdhC,cAAc,CAAAiC,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}