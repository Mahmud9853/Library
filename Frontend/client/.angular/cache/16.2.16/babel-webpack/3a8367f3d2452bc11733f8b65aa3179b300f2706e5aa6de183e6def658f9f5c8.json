{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let TypeAddComponent = class TypeAddComponent {\n  constructor(typeService, router, Router) {\n    this.typeService = typeService;\n    this.router = router;\n    this.type = {\n      typeName: ''\n    };\n  }\n  ngOnInit() {\n    this.AddType();\n  }\n  AddType() {\n    const formData = new FormData();\n    formData.append('typeName', this.type.typeName);\n    this.typeService.addType(formData).subscribe({\n      next: response => {\n        console.log('Book added successfully:', response);\n        this.router.navigate(['/admin/type/type-list']); // Başarılı ekleme sonrası yönlendirme\n      },\n\n      error: err => {\n        console.error('Error adding book:', err);\n      }\n    });\n  }\n  addBook() {\n    const formData = new FormData();\n    formData.append('Title', this.book.title);\n    formData.append('Description', this.book.description);\n    formData.append('CreateBook', this.book.createBook);\n    formData.append('TypeId', this.book.typeId.toString());\n    formData.append('CategoryId', this.book.categoryId.toString());\n    formData.append('AuthorId', this.book.authorId.toString());\n    if (this.book.photoFile) {\n      formData.append('PhotoFile', this.book.photoFile);\n    }\n    if (this.book.documentFile) {\n      formData.append('DocumentFile', this.book.documentFile);\n    }\n    this.bookService.addBook(formData).subscribe({\n      next: response => {\n        console.log('Book added successfully:', response);\n        this.router.navigate(['/admin/book/book-list']); // Başarılı ekleme sonrası yönlendirme\n      },\n\n      error: err => {\n        console.error('Error adding book:', err);\n      }\n    });\n  }\n};\nTypeAddComponent = __decorate([Component({\n  selector: 'app-type-add',\n  templateUrl: './type-add.component.html',\n  styleUrls: ['./type-add.component.scss']\n})], TypeAddComponent);","map":{"version":3,"names":["Component","TypeAddComponent","constructor","typeService","router","Router","type","typeName","ngOnInit","AddType","formData","FormData","append","addType","subscribe","next","response","console","log","navigate","error","err","addBook","book","title","description","createBook","typeId","toString","categoryId","authorId","photoFile","documentFile","bookService","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\type\\type-add\\type-add.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TypeService } from '../type.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-type-add',\n  templateUrl: './type-add.component.html',\n  styleUrls: ['./type-add.component.scss']\n})\nexport class TypeAddComponent implements OnInit {\n  type = {\n    typeName:''\n  };\n  constructor(private typeService: TypeService, private router; Router){}\n  ngOnInit(): void {\n    this.AddType();\n  }\n  AddType(){\n    const formData = new FormData();\n    formData.append('typeName', this.type.typeName);\n\n\n    this.typeService.addType(formData).subscribe({\n      next:(response: any) => {\n        console.log('Book added successfully:', response);\n        this.router.navigate(['/admin/type/type-list']); // Başarılı ekleme sonrası yönlendirme\n      },\n      error: (err) => {\n        console.error('Error adding book:', err);\n      }\n    })\n  }\n\n  addBook() {\n    const formData = new FormData();\n    formData.append('Title', this.book.title);\n    formData.append('Description', this.book.description);\n    formData.append('CreateBook', this.book.createBook);\n    formData.append('TypeId', this.book.typeId.toString());\n    formData.append('CategoryId', this.book.categoryId.toString());\n    formData.append('AuthorId', this.book.authorId.toString());\n    if (this.book.photoFile) {\n      formData.append('PhotoFile', this.book.photoFile);\n    }\n    if (this.book.documentFile) {\n      formData.append('DocumentFile', this.book.documentFile);\n    }\n\n    this.bookService.addBook(formData).subscribe({\n      next: (response) => {\n        console.log('Book added successfully:', response);\n        this.router.navigate(['/admin/book/book-list']); // Başarılı ekleme sonrası yönlendirme\n      },\n      error: (err) => {\n        console.error('Error adding book:', err);\n      }\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAI3BC,YAAoBC,WAAwB,EAAUC,MAAM,EAAEC,MAAM;IAAhD,KAAAF,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAH5D,KAAAE,IAAI,GAAG;MACLC,QAAQ,EAAC;KACV;EACqE;EACtEC,QAAQA,CAAA;IACN,IAAI,CAACC,OAAO,EAAE;EAChB;EACAA,OAAOA,CAAA;IACL,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAACN,IAAI,CAACC,QAAQ,CAAC;IAG/C,IAAI,CAACJ,WAAW,CAACU,OAAO,CAACH,QAAQ,CAAC,CAACI,SAAS,CAAC;MAC3CC,IAAI,EAAEC,QAAa,IAAI;QACrBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,QAAQ,CAAC;QACjD,IAAI,CAACZ,MAAM,CAACe,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;MACnD,CAAC;;MACDC,KAAK,EAAGC,GAAG,IAAI;QACbJ,OAAO,CAACG,KAAK,CAAC,oBAAoB,EAAEC,GAAG,CAAC;MAC1C;KACD,CAAC;EACJ;EAEAC,OAAOA,CAAA;IACL,MAAMZ,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACW,IAAI,CAACC,KAAK,CAAC;IACzCd,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE,IAAI,CAACW,IAAI,CAACE,WAAW,CAAC;IACrDf,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE,IAAI,CAACW,IAAI,CAACG,UAAU,CAAC;IACnDhB,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAE,IAAI,CAACW,IAAI,CAACI,MAAM,CAACC,QAAQ,EAAE,CAAC;IACtDlB,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE,IAAI,CAACW,IAAI,CAACM,UAAU,CAACD,QAAQ,EAAE,CAAC;IAC9DlB,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAACW,IAAI,CAACO,QAAQ,CAACF,QAAQ,EAAE,CAAC;IAC1D,IAAI,IAAI,CAACL,IAAI,CAACQ,SAAS,EAAE;MACvBrB,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAE,IAAI,CAACW,IAAI,CAACQ,SAAS,CAAC;;IAEnD,IAAI,IAAI,CAACR,IAAI,CAACS,YAAY,EAAE;MAC1BtB,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAE,IAAI,CAACW,IAAI,CAACS,YAAY,CAAC;;IAGzD,IAAI,CAACC,WAAW,CAACX,OAAO,CAACZ,QAAQ,CAAC,CAACI,SAAS,CAAC;MAC3CC,IAAI,EAAGC,QAAQ,IAAI;QACjBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,QAAQ,CAAC;QACjD,IAAI,CAACZ,MAAM,CAACe,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;MACnD,CAAC;;MACDC,KAAK,EAAGC,GAAG,IAAI;QACbJ,OAAO,CAACG,KAAK,CAAC,oBAAoB,EAAEC,GAAG,CAAC;MAC1C;KACD,CAAC;EACJ;CACD;AAjDYpB,gBAAgB,GAAAiC,UAAA,EAL5BlC,SAAS,CAAC;EACTmC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWpC,gBAAgB,CAiD5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}