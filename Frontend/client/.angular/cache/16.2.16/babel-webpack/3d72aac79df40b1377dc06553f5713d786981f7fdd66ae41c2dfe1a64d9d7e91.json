{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { debounceTime, finalize, map, switchMap, take } from 'rxjs';\nexport let RegisterComponent = class RegisterComponent {\n  constructor(fb, accountService, router) {\n    this.fb = fb;\n    this.accountService = accountService;\n    this.router = router;\n    this.errors = null;\n    this.complexPassword = \"(?=^.{6,}$)(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()_+}{\\\":;'?/&.,<>]).*$\";\n    this.registerForm = this.fb.group({\n      username: ['', Validators.required],\n      name: ['', Validators.required],\n      surname: ['', Validators.required],\n      birthdate: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email], [this.validateEmailNotToken()]],\n      password: ['', [Validators.required, Validators.pattern(this.complexPassword)]],\n      confirmpassword: ['', [Validators.required, Validators.pattern(this.complexPassword)]]\n    });\n  }\n  register(values) {\n    this.accountService.register(values).subscribe(() => {\n      this.router.navigate(['/login']);\n    });\n  }\n  // onSubmit() {\n  //   this.accountService.register(this.registerForm.value).subscribe({\n  //     next: (response: any ) => {\n  //       console.log('API response register:', response);\n  //       this.router.navigateByUrl('account/login')\n  //     },\n  //     error: error => this.errors = error.errors\n  //   });\n  // }\n  // addBook() {\n  //   const formData = new FormData();\n  //   formData.append('Title', this.book.title);\n  //   formData.append('Description', this.book.description);\n  //   formData.append('CreateBook', this.book.createBook);\n  //   formData.append('TypeId', this.book.typeId.toString());\n  //   formData.append('CategoryId', this.book.categoryId.toString());\n  //   formData.append('AuthorId', this.book.authorId.toString());\n  //   if (this.book.photoFile) {\n  //     formData.append('PhotoFile', this.book.photoFile);\n  //   }\n  //   if (this.book.documentFile) {\n  //     formData.append('DocumentFile', this.book.documentFile);\n  //   }\n  //   this.bookService.addBook(formData).subscribe({\n  //     next: (response) => {\n  //       console.log('Book added successfully:', response);\n  //       this.router.navigate(['/admin/book/book-list']); // Başarılı ekleme sonrası yönlendirme\n  //     },\n  //     error: (err) => {\n  //       console.error('Error adding book:', err);\n  //     }\n  //   });\n  // }\n  validateEmailNotToken() {\n    return control => {\n      return control.valueChanges.pipe(debounceTime(1000), take(1), switchMap(() => {\n        return this.accountService.checkEmailExists(control.value).pipe(map(result => result ? {\n          emailExists: true\n        } : null), finalize(() => control.markAsTouched()));\n      }));\n    };\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})], RegisterComponent);","map":{"version":3,"names":["Component","Validators","debounceTime","finalize","map","switchMap","take","RegisterComponent","constructor","fb","accountService","router","errors","complexPassword","registerForm","group","username","required","name","surname","birthdate","email","validateEmailNotToken","password","pattern","confirmpassword","register","values","subscribe","navigate","control","valueChanges","pipe","checkEmailExists","value","result","emailExists","markAsTouched","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\account\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AbstractControl, AsyncValidatorFn, FormBuilder, Validators } from '@angular/forms';\nimport { AccountService } from '../account.service';\nimport { Router } from '@angular/router';\nimport { debounceTime, finalize, map, switchMap, take } from 'rxjs';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n  errors: string[] | null = null;\n  constructor(private fb: FormBuilder, private accountService: AccountService, private router: Router) {}\n\n  complexPassword= \"(?=^.{6,}$)(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()_+}{\\\":;'?/&.,<>]).*$\"\n\n  registerForm : any = this.fb.group({\n    username: ['', Validators.required],\n    name: ['', Validators.required],\n    surname: ['', Validators.required],\n    birthdate: ['', Validators.required],  // Date form control\n    email: ['', [Validators.required, Validators.email], [this.validateEmailNotToken()]],\n    password: ['', [Validators.required, Validators.pattern(this.complexPassword)]],\n    confirmpassword: ['', [Validators.required, Validators.pattern(this.complexPassword)]]\n  });\n\n  register(values: any){\n    this.accountService.register(values).subscribe(() => {\n      this.router.navigate(['/login']);\n    });\n  }\n  // onSubmit() {\n  //   this.accountService.register(this.registerForm.value).subscribe({\n    \n  //     next: (response: any ) => {\n  //       console.log('API response register:', response);\n  //       this.router.navigateByUrl('account/login')\n  //     },\n  //     error: error => this.errors = error.errors\n  //   });\n  // }\n  // addBook() {\n  //   const formData = new FormData();\n  //   formData.append('Title', this.book.title);\n  //   formData.append('Description', this.book.description);\n  //   formData.append('CreateBook', this.book.createBook);\n  //   formData.append('TypeId', this.book.typeId.toString());\n  //   formData.append('CategoryId', this.book.categoryId.toString());\n  //   formData.append('AuthorId', this.book.authorId.toString());\n  //   if (this.book.photoFile) {\n  //     formData.append('PhotoFile', this.book.photoFile);\n  //   }\n  //   if (this.book.documentFile) {\n  //     formData.append('DocumentFile', this.book.documentFile);\n  //   }\n\n  //   this.bookService.addBook(formData).subscribe({\n  //     next: (response) => {\n  //       console.log('Book added successfully:', response);\n  //       this.router.navigate(['/admin/book/book-list']); // Başarılı ekleme sonrası yönlendirme\n  //     },\n  //     error: (err) => {\n  //       console.error('Error adding book:', err);\n  //     }\n  //   });\n  // }\n\n  validateEmailNotToken(): AsyncValidatorFn{\n    return (control: AbstractControl) =>{\n      return control.valueChanges.pipe(\n        debounceTime(1000),\n        take(1),\n        switchMap(() => {\n          return this.accountService.checkEmailExists(control.value).pipe(\n            map(result => result ? {emailExists: true} : null),\n            finalize(() => control.markAsTouched())\n          )\n        })\n      )\n    }\n  }\n}\n\n\n\n  "],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAyDC,UAAU,QAAQ,gBAAgB;AAG3F,SAASC,YAAY,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,SAAS,EAAEC,IAAI,QAAQ,MAAM;AAO5D,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAE5BC,YAAoBC,EAAe,EAAUC,cAA8B,EAAUC,MAAc;IAA/E,KAAAF,EAAE,GAAFA,EAAE;IAAuB,KAAAC,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAD3F,KAAAC,MAAM,GAAoB,IAAI;IAG9B,KAAAC,eAAe,GAAE,iFAAiF;IAElG,KAAAC,YAAY,GAAS,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MACjCC,QAAQ,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACgB,QAAQ,CAAC;MACnCC,IAAI,EAAE,CAAC,EAAE,EAAEjB,UAAU,CAACgB,QAAQ,CAAC;MAC/BE,OAAO,EAAE,CAAC,EAAE,EAAElB,UAAU,CAACgB,QAAQ,CAAC;MAClCG,SAAS,EAAE,CAAC,EAAE,EAAEnB,UAAU,CAACgB,QAAQ,CAAC;MACpCI,KAAK,EAAE,CAAC,EAAE,EAAE,CAACpB,UAAU,CAACgB,QAAQ,EAAEhB,UAAU,CAACoB,KAAK,CAAC,EAAE,CAAC,IAAI,CAACC,qBAAqB,EAAE,CAAC,CAAC;MACpFC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACtB,UAAU,CAACgB,QAAQ,EAAEhB,UAAU,CAACuB,OAAO,CAAC,IAAI,CAACX,eAAe,CAAC,CAAC,CAAC;MAC/EY,eAAe,EAAE,CAAC,EAAE,EAAE,CAACxB,UAAU,CAACgB,QAAQ,EAAEhB,UAAU,CAACuB,OAAO,CAAC,IAAI,CAACX,eAAe,CAAC,CAAC;KACtF,CAAC;EAZoG;EActGa,QAAQA,CAACC,MAAW;IAClB,IAAI,CAACjB,cAAc,CAACgB,QAAQ,CAACC,MAAM,CAAC,CAACC,SAAS,CAAC,MAAK;MAClD,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,CAAC;EACJ;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAP,qBAAqBA,CAAA;IACnB,OAAQQ,OAAwB,IAAI;MAClC,OAAOA,OAAO,CAACC,YAAY,CAACC,IAAI,CAC9B9B,YAAY,CAAC,IAAI,CAAC,EAClBI,IAAI,CAAC,CAAC,CAAC,EACPD,SAAS,CAAC,MAAK;QACb,OAAO,IAAI,CAACK,cAAc,CAACuB,gBAAgB,CAACH,OAAO,CAACI,KAAK,CAAC,CAACF,IAAI,CAC7D5B,GAAG,CAAC+B,MAAM,IAAIA,MAAM,GAAG;UAACC,WAAW,EAAE;QAAI,CAAC,GAAG,IAAI,CAAC,EAClDjC,QAAQ,CAAC,MAAM2B,OAAO,CAACO,aAAa,EAAE,CAAC,CACxC;MACH,CAAC,CAAC,CACH;IACH,CAAC;EACH;CACD;AAvEY9B,iBAAiB,GAAA+B,UAAA,EAL7BtC,SAAS,CAAC;EACTuC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWlC,iBAAiB,CAuE7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}