{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../type.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class TypeEditComponent {\n  constructor(typeService, router) {\n    this.typeService = typeService;\n    this.router = router;\n    this.type = {\n      id: 0,\n      name: ''\n    };\n  }\n  ngOnInit() {\n    this.updateType();\n    const typeId = this.router.snapshot.params['id'];\n    if (typeId) {\n      this.loadType();\n    }\n  }\n  loadType() {\n    const id = Number(this.router.snapshot.paramMap.get('id'));\n    if (id) {\n      this.typeService.getTypeById(id).subscribe({\n        next: response => {\n          console.log('API Response:', response);\n          this.book = response;\n        },\n        error: error => {\n          console.error('Error loading book details:', error);\n        }\n      });\n    }\n  }\n  updateType() {\n    const formData = new FormData();\n    formData.append('typeName', this.type.name);\n    this.typeService.updateType(this.type.id, formData).subscribe({\n      next: response => {\n        console.log('Type updated successfully:', response);\n        // Backend'den dönen güncellenmiş veriyi atayın\n        this.type = response;\n        this.router.navigate(['/admin/tyep/type-list']); // Başarılı güncelleme sonrası yönlendirme\n      },\n\n      error: error => {\n        console.error('Error updating type:', error);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function TypeEditComponent_Factory(t) {\n      return new (t || TypeEditComponent)(i0.ɵɵdirectiveInject(i1.TypeService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TypeEditComponent,\n      selectors: [[\"app-type-edit\"]],\n      decls: 10,\n      vars: 1,\n      consts: [[1, \"container\", \"mt-5\"], [1, \"mb-4\"], [3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"id\", \"name\", \"type\", \"text\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n      template: function TypeEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n          i0.ɵɵtext(2, \"Edit Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function TypeEditComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.updateType();\n          });\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n          i0.ɵɵtext(6, \"Tipi:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"input\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function TypeEditComponent_Template_input_ngModelChange_7_listener($event) {\n            return ctx.type.name = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"button\", 6);\n          i0.ɵɵtext(9, \"Update Type\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngModel\", ctx.type.name);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["TypeEditComponent","constructor","typeService","router","type","id","name","ngOnInit","updateType","typeId","snapshot","params","loadType","Number","paramMap","get","getTypeById","subscribe","next","response","console","log","book","error","formData","FormData","append","navigate","i0","ɵɵdirectiveInject","i1","TypeService","i2","Router","selectors","decls","vars","consts","template","TypeEditComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TypeEditComponent_Template_form_ngSubmit_3_listener","TypeEditComponent_Template_input_ngModelChange_7_listener","$event","ɵɵadvance","ɵɵproperty"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\type\\type-edit\\type-edit.component.ts","D:\\MMU\\Frontend\\client\\src\\app\\admin\\type\\type-edit\\type-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TypeService } from '../type.service';\nimport { Router } from '@angular/router';\nimport { Type } from 'src/app/shared/models/type';\n\n@Component({\n  selector: 'app-type-edit',\n  templateUrl: './type-edit.component.html',\n  styleUrls: ['./type-edit.component.scss']\n})\nexport class TypeEditComponent implements OnInit {\n  type: any = {\n    id: 0,\n    name:'',\n  };\n  \n  constructor(private typeService: TypeService, private router: Router){}\n\n  ngOnInit(): void {\n    this.updateType();\n\n    const typeId = this.router.snapshot.params['id'];\n    if (typeId) {\n      this.loadType();\n    }\n  }\n  loadType() {\n    const id = Number(this.router.snapshot.paramMap.get('id'));\n    if (id) {\n      this.typeService.getTypeById(id).subscribe({\n        next: (response: any) => {\n          console.log('API Response:', response);\n          this.book = response;\n        },\n        error: (error) => {\n          console.error('Error loading book details:', error);\n        }\n      });\n    }\n    \n      \n  }\n\n  updateType() {\n    const formData = new FormData();\n    formData.append('typeName', this.type.name);\n  \n    this.typeService.updateType(this.type.id, formData).subscribe({\n      next: (response: any) => {\n        console.log('Type updated successfully:', response);\n        // Backend'den dönen güncellenmiş veriyi atayın\n        this.type = response;\n        this.router.navigate(['/admin/tyep/type-list']); // Başarılı güncelleme sonrası yönlendirme\n      },\n      error: (error) => {\n        console.error('Error updating type:', error);\n      }\n    });\n  }\n}\n\n","<div class=\"container mt-5\">\n    <h2 class=\"mb-4\">Edit Type</h2>\n    <form (ngSubmit)=\"updateType()\">\n      <div class=\"mb-3\">\n        <label for=\"name\" class=\"form-label\">Tipi:</label>\n        <input\n          id=\"name\"\n          type=\"text\"\n          class=\"form-control\"\n          [(ngModel)]=\"type.name\"\n          name=\"name\"\n          required\n        />\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Update Type</button>\n    </form>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}