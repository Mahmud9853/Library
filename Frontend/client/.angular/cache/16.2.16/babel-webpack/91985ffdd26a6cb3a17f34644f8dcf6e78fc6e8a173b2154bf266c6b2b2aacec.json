{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AdminComponent = class AdminComponent {\n  constructor(accountService) {\n    this.accountService = accountService;\n    this.role = null;\n    this.username = '';\n    this.filteredMenuItems = [];\n    this.menuItems = [{\n      label: 'Kitablar',\n      route: '/admin/book/book-list',\n      role: ['Admin', 'Client']\n    }, {\n      label: 'Tipləri',\n      route: '/admin/type/type-list',\n      role: ['Admin']\n    }, {\n      label: 'Müəllifləri',\n      route: '/admin/author/author-list',\n      role: ['Admin']\n    }, {\n      label: 'Kateqoriyası',\n      route: '/admin/category/category-list',\n      role: ['Admin']\n    }, {\n      label: 'Header parametrlər',\n      route: '/admin/home/home-list',\n      role: ['Admin']\n    }, {\n      label: 'Slayd parametrlər',\n      route: '/admin/slide/slide-list',\n      role: ['Admin']\n    }, {\n      label: 'Kurslar',\n      route: '/admin/course/course-list',\n      role: ['Admin']\n    }, {\n      label: 'İstifadəçilər',\n      route: '/admin/user/user-list',\n      role: ['Admin']\n    }];\n    this.role = this.accountService.getRole();\n  }\n  ngOnInit() {\n    const storedUsername = localStorage.getItem('username');\n    const userRole = localStorage.getItem('role');\n    this.filteredMenuItems = this.menuItems.filter(item => item.role.includes(this.role || 'Guest'));\n    if (storedUsername) {\n      this.username = storedUsername; // Eğer localStorage'da varsa, kullanıcı adı atanıyor\n    } else {\n      this.username = 'Guest'; // Eğer yoksa, 'Guest' atanıyor\n    }\n  }\n\n  logout() {\n    this.accountService.logout();\n  }\n};\nAdminComponent = __decorate([Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})], AdminComponent);","map":{"version":3,"names":["Component","AdminComponent","constructor","accountService","role","username","filteredMenuItems","menuItems","label","route","getRole","ngOnInit","storedUsername","localStorage","getItem","userRole","filter","item","includes","logout","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MMU\\Frontend\\client\\src\\app\\admin\\admin.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AccountService } from '../account/account.service';\r\nimport { NgIf } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  role: string | null = null;\r\n  username: string = '';\r\n  filteredMenuItems: any[] = [];\r\n  menuItems = [\r\n    { label: 'Kitablar', route: '/admin/book/book-list' , role: ['Admin', 'Client']},\r\n    { label: 'Tipləri', route: '/admin/type/type-list' ,   role: ['Admin']},\r\n    { label: 'Müəllifləri', route: '/admin/author/author-list' ,   role: ['Admin']},\r\n    { label: 'Kateqoriyası', route: '/admin/category/category-list',   role: ['Admin']},\r\n    { label: 'Header parametrlər', route: '/admin/home/home-list', role: ['Admin']},\r\n    { label: 'Slayd parametrlər', route: '/admin/slide/slide-list', role: ['Admin']},\r\n    { label: 'Kurslar', route: '/admin/course/course-list', role: ['Admin']},\r\n    { label: 'İstifadəçilər', route: '/admin/user/user-list',  role: ['Admin']},\r\n  ];\r\n\r\n  constructor(public accountService: AccountService) \r\n  {\r\n    this.role = this.accountService.getRole();\r\n  }\r\n  ngOnInit(): void {\r\n    const storedUsername = localStorage.getItem('username');\r\n    const userRole = localStorage.getItem('role');\r\n    this.filteredMenuItems = this.menuItems.filter((item) => item.role.includes(this.role || 'Guest'));\r\n    if (storedUsername) {\r\n      this.username = storedUsername; // Eğer localStorage'da varsa, kullanıcı adı atanıyor\r\n    } else {\r\n      this.username = 'Guest'; // Eğer yoksa, 'Guest' atanıyor\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.accountService.logout();\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAezBC,YAAmBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAdjC,KAAAC,IAAI,GAAkB,IAAI;IAC1B,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,iBAAiB,GAAU,EAAE;IAC7B,KAAAC,SAAS,GAAG,CACV;MAAEC,KAAK,EAAE,UAAU;MAAEC,KAAK,EAAE,uBAAuB;MAAGL,IAAI,EAAE,CAAC,OAAO,EAAE,QAAQ;IAAC,CAAC,EAChF;MAAEI,KAAK,EAAE,SAAS;MAAEC,KAAK,EAAE,uBAAuB;MAAKL,IAAI,EAAE,CAAC,OAAO;IAAC,CAAC,EACvE;MAAEI,KAAK,EAAE,aAAa;MAAEC,KAAK,EAAE,2BAA2B;MAAKL,IAAI,EAAE,CAAC,OAAO;IAAC,CAAC,EAC/E;MAAEI,KAAK,EAAE,cAAc;MAAEC,KAAK,EAAE,+BAA+B;MAAIL,IAAI,EAAE,CAAC,OAAO;IAAC,CAAC,EACnF;MAAEI,KAAK,EAAE,oBAAoB;MAAEC,KAAK,EAAE,uBAAuB;MAAEL,IAAI,EAAE,CAAC,OAAO;IAAC,CAAC,EAC/E;MAAEI,KAAK,EAAE,mBAAmB;MAAEC,KAAK,EAAE,yBAAyB;MAAEL,IAAI,EAAE,CAAC,OAAO;IAAC,CAAC,EAChF;MAAEI,KAAK,EAAE,SAAS;MAAEC,KAAK,EAAE,2BAA2B;MAAEL,IAAI,EAAE,CAAC,OAAO;IAAC,CAAC,EACxE;MAAEI,KAAK,EAAE,eAAe;MAAEC,KAAK,EAAE,uBAAuB;MAAGL,IAAI,EAAE,CAAC,OAAO;IAAC,CAAC,CAC5E;IAIC,IAAI,CAACA,IAAI,GAAG,IAAI,CAACD,cAAc,CAACO,OAAO,EAAE;EAC3C;EACAC,QAAQA,CAAA;IACN,MAAMC,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACvD,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC7C,IAAI,CAACR,iBAAiB,GAAG,IAAI,CAACC,SAAS,CAACS,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACb,IAAI,CAACc,QAAQ,CAAC,IAAI,CAACd,IAAI,IAAI,OAAO,CAAC,CAAC;IAClG,IAAIQ,cAAc,EAAE;MAClB,IAAI,CAACP,QAAQ,GAAGO,cAAc,CAAC,CAAC;KACjC,MAAM;MACL,IAAI,CAACP,QAAQ,GAAG,OAAO,CAAC,CAAC;;EAE7B;;EAEAc,MAAMA,CAAA;IACJ,IAAI,CAAChB,cAAc,CAACgB,MAAM,EAAE;EAC9B;CACD;AAjCYlB,cAAc,GAAAmB,UAAA,EAL1BpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWtB,cAAc,CAiC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}